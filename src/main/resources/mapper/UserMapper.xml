<?xml version="1.0" encoding="UTF-8" ?>
<!-- mapper DTD 선언 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.visang.aidt.lms.api.user.mapper.UserMapper">

    <select id="findByUserId" parameterType="map" resultType="map">
        /* UserMapper.findByUserId */
        select a1.user_idx as `id`
             , a1.user_id as `userId`
             , a1.user_type as `userSeCd`
             , a1.user_name as `flnm`
        from  user_mst a1
        where a1.user_id = #{userId}
    </select>

    <select id="findUserInfoByUserId" parameterType="map" resultType="map">
        /* UserMapper.findUserInfoByUserId */
        select a1.user_id as `userId`
             , a1.user_se_cd as `userSeCd`
             , a1.flnm as `flnm`
        from  aidt_lms.`user` a1
        where a1.user_id = #{userId}
    </select>

    <select id="findStdtListByClass" parameterType="map" resultType="camelHashMap">
        /* UserMapper.findStdtListByClass */
        SELECT
                (select id from user where user_id = b.user_id) as id,
                b.user_id,
                b.flnm,
                b.schl_nm,
                b.grade_cd,
                b.cla_cd,
                concat(b.grade_cd,'-',b.cla_cd) as classroomName,
                a.user_id as teacher_id,
                a.cla_id
        FROM
            tc_cla_mb_info a
                inner join stdt_reg_info b ON a.stdt_id  = b.user_id
        WHERE
            1=1
          and a.cla_id = #{claId}
          and a.actvtn_at = 'Y'
         order by b.num
    </select>

    <select id="findStdtInfo" parameterType="map" resultType="camelHashMap">
        /* UserMapper.findStdtInfo */
        SELECT
                (select id from user where user_id = b.user_id) as id,
                b.user_id,
                b.flnm,
                b.schl_nm,
                b.grade_cd,
                b.cla_cd,
                concat(b.grade_cd,'-',b.cla_cd) as classroomName,
                a.user_id as teacher_id,
                (select id from user where user_id = a.user_id) as teacher_idx,
                a.cla_id
        FROM
            tc_cla_mb_info a
                inner join stdt_reg_info b ON a.stdt_id  = b.user_id
        WHERE
            1=1
          and a.stdt_id = #{userId}
          and a.cla_id = #{claId}
          AND a.actvtn_at = 'Y'
        order by b.num
    </select>

    <select id="findClassInfo" parameterType="map" resultType="camelHashMap">
        /* UserMapper.findClassInfo */
        select
            tci.id,
            tci.user_id,
            tci.yr,
            tci.smt,
            tci.schl_nm,
            tci.grade_cd,
            tci.cla_cd
        FROM tc_cla_user_info tcui
        INNER JOIN tc_cla_info tci ON tcui.cla_id = tci.cla_id
        WHERE tcui.user_id = #{userId}
          AND tcui.cla_id =  #{claId}
    </select>

    <select id="selectTeacherClassList" parameterType="map" resultType="camelHashMap">
        /* UserMapper.selectTeacherClassList */
        select
            id,
            user_id,
            yr,
            smt,
            schl_nm,
            grade_cd,
            cla_cd
        from
            tc_cla_info
        where
            1=1
          and user_id = #{userId}
          and cla_id = #{claId}
    </select>

    <insert id="saveUserClauseagre" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        /* UserMapper.saveUserClauseagre */
        insert into aidt_lms.conts_err_dclr (
            dclr_id,
            schl_cd,
            textbk_id,
            dclr_ty_cd,
            dclr_se_cd,
            dclr_cn
        )
        values (
                 #{dclrId}
               ,#{schlCd}
               ,#{textbkId}
               ,#{dclrTyCd}
               ,#{dclrSeCd}
               ,#{dclrCn}
               )
    </insert>

    <select id="findUserClauseAgre" parameterType="map" resultType="map">
        /* UserMapper.findUserClauseAgreList */
        select indvdlinfo_colct_usee_agre_at, rcptn_agre_ymd
        from aidt_lms.user
        where id = #{userId};
    </select>

    <update id="updateUserContsErrDclr" parameterType="map">
        /* UserMapper.updateUserContsErrDclr */
        update user
        set indvdlinfo_colct_usee_agre_at = #{IndvdlinfoColctUseeAgreAt},
            rcptn_agre_ymd = #{rcptn_agre_ymd}
        where id = #{userId};
    </update>

    <update id="updateLgnSttsAt" parameterType="map">
        UPDATE user
        SET lgn_stts_at = #{lgnSttsAt}
        WHERE user_id = #{uuid}
    </update>

    <update id="updateLgnSttsAtAll" parameterType="map">
        UPDATE user
        SET lgn_stts_at = #{lgnSttsAt}
        WHERE 1=1
    </update>

    <select id="findUserAccesslogList" parameterType="pagingParam" resultType="camelHashMap" >
        /* UserMapper.findUserAccesslogList */
        select count(*) over () as full_count
             , DATE_FORMAT(cl.cntn_dt, '%Y-%m-%d %H:%i:%s') as cntn_dt
             , ROW_NUMBER() over(partition by DATE_FORMAT(cl.cntn_dt,'%Y%m%d') order by cl.id) as cntnSeq
             , cl.device_info
             , cl.os_info
             , cl.brwr_info
             , cl.cntn_ip_addr
        from aidt_lms.cntn_log cl
        where cl.user_id = #{param.userId}
          and length(cl.cntn_ip_addr) <![CDATA[>]]> 0
        order by cntn_dt desc, cntnSeq desc
            limit #{pageable.pageSize} offset #{pageable.offset}
    </select>

    <!-- 학생이 속한 모든 학급 목록 조회 (동일 교과서 기준) -->
    <select id="findStudentClassList" parameterType="map" resultType="camelHashMap">
        /* UserMapper.findStudentClassList */
        select
            a.user_id, /* 교사 ID */
            b.textbk_id, /* 교과서 ID */
            b.textbk_idx_id, /* 교과서 목차 ID */
            a.cla_id, /* 학급 ID */
            c.course_rm_cd AS lecture_code
        from aidt_lms.tc_cla_mb_info a
                 inner join (
            select b.wrter_id, b.textbk_id, b.textbk_idx_id, b.cla_id
            from aidt_lms.tc_cla_mb_info a
                inner join aidt_lms.tc_curriculum b
                    on a.user_id = b.wrter_id and a.cla_id = b.cla_id and b.textbk_id = #{textbkId}
            where a.stdt_id = #{stdtId}
            group by b.wrter_id, b.textbk_id, b.textbk_idx_id, b.cla_id
        ) b
            on a.user_id = b.wrter_id and a.cla_id = b.cla_id
        inner join aidt_lms.tc_cla_info c on a.cla_id  = c.cla_id
        where 1=1
          and a.stdt_id = #{stdtId}
        order by a.reg_dt
    </select>

    <select id="findStudentClassInfoList" parameterType="map" resultType="camelHashMap">
        /* UserMapper.findStudentClassList */
        select tcmi.cla_id
             , tcmi.user_id
             , tcmi.stdt_id
             , tcmi.yr
             , tcmi.smt
             , tcmi.schl_nm
             , tcmi.grade_cd
             , tcmi.cla_cd
             , tcmi.cla_nm
             , tcmi.actvtn_at
             , tci.course_rm_cd AS lecture_code
          from aidt_lms.tc_cla_mb_info tcmi
         inner join aidt_lms.tc_cla_info tci on tcmi.cla_id = tci.cla_id
         where tcmi.stdt_id = #{stdtId}
         order by tcmi.reg_dt
    </select>

    <select id="findTchClassInfoList" parameterType="map" resultType="camelHashMap">
        /* UserMapper.findTchClassInfoList */
        select tcmi.cla_id
             , tcmi.user_id
             , tcmi.yr
             , tcmi.smt
             , tcmi.schl_nm
             , tcmi.grade_cd
             , tcmi.cla_cd
             , tcmi.cla_nm
             , tcmi.actvtn_at
             , tci.course_rm_cd AS lecture_code
        from aidt_lms.tc_cla_mb_info tcmi
        inner join aidt_lms.tc_cla_info tci on tcmi.cla_id = tci.cla_id
        where tcmi.user_id = #{userId}
        group by tcmi.cla_id, tcmi.user_id
        order by tcmi.reg_dt
    </select>

</mapper>