<?xml version="1.0" encoding="UTF-8" ?>
<!-- mapper DTD 선언 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.visang.aidt.lms.api.homework.mapper.TaskStatusChangeMapper">

    <!-- 과제 상태 진행 중으로 변경 -->
    <update id="updateTaskStatusChangeToInProgress">
        /** TaskStatusChangeMapper.modifyTaskStatusChangeToInProgress */
        UPDATE aidt_lms.task_info
        SET task_stts_cd = 2
        WHERE 1 = 1
          AND id in
              <foreach collection="list" item="id" open="(" close=")" separator=",">
                #{id}
              </foreach>
    </update>

    <select id="selectBulkTaskMqTarget" resultType="java.lang.String">
        /* TaskStatusChangeMapper.selectBulkTaskMqTarget */
        select id
        from aidt_lms.task_info
        WHERE 1 = 1
          AND task_stts_cd = 1
          AND now() <![CDATA[>=]]> task_prg_dt
          AND tmpr_strg_at = 'N'
    </select>

    <!-- 과제 상태 완료로 바뀔 교사들에게 알람 등록 -->
    <select id="findTaskNtcnToTchList" resultType="camelHashMap">
        /** TaskStatusChangeMapper.findTaskNtcnToTchList */
        <![CDATA[
        select
            textbk_id
             , "T" as trget_cd
             , "3" as ntcn_ty_cd
             , "6" as trget_ty_cd
             , "과제 리포트가 생성되었습니다. 과제 리포트를 확인해 보세요." as ntcn_cn
             , '' as link_url
             , flnm as stnt_nm
             , wrter_id as user_id
             , sets_id
             , cla_id
        from
            aidt_lms.task_info ti
                left join aidt_lms.user um ON ti.wrter_id = um.user_id
        WHERE 1 = 1
          AND task_stts_cd = 2
          AND now() > task_cp_dt
        ]]>
    </select>

    <!-- 과제 상태 완료로 변경 -->
    <update id="updateTaskStatusChangeToComplete">
        /** TaskStatusChangeMapper.modifyTaskStatusChangeToComplete */
        <![CDATA[
        UPDATE aidt_lms.task_info
        SET task_stts_cd = 3, mdfy_dt = now()
        WHERE 1 = 1
          AND task_stts_cd = 2
          AND now() >= task_cp_dt
        ]]>
    </update>

    <!-- task_result_info 제출 여부가 'N'인 건들 조회 -->
    <select id="findTaskResultInfoNotSubmitted" resultType="camelHashMap">
        /** TaskStatusChangeMapper.findTaskResultInfoNotSubmitted */
        <![CDATA[
              SELECT id, task_result_id, task_iem_id
              FROM aidt_lms.task_result_detail
              WHERE 1 = 1
                /* AND eak_stts_cd <> 5 */  /* 주석처리 */
                /* AND mrk_ty in (1,2) */ /* 채점유형 : 자동/수동, 개념-채점불가(3), 모든 유형이 '개념'인 경우도 있기때문에 주석처리함 */
                AND task_result_id IN (SELECT id
                                      FROM aidt_lms.task_result_info
                                      WHERE 1 = 1
                                        AND done_yn = 'Y'
                                        AND task_id IN (SELECT id
                                                       FROM aidt_lms.task_info
                                                       WHERE 1 = 1
                                                         AND task_stts_cd = 3
                                                         /* 조건추가 및 변경 */
                                                         /* 2024-06-28, 프론트에서 제출하기 API 처리시간을 고려해서 마감일 + 2분으로 처리 */
                                                         /* AND DATE_ADD(task_cp_dt, INTERVAL 2 MINUTE) < NOW() */
                                                         AND task_cp_dt < NOW()
                                                         )
                                        AND subm_at = 'N'
                                        /*
                                           2024-06-17. 타이머 마감 또는 기한 마감인 경우와 상관없이
                                           평가/과제 응시 시작한 학생의 경우 무조건 제출하기 처리로 프로세스 변경 (최지연 CP님)
                                        */
                                        /* 응시전 인 학생만 대상으로 미제출자 처리한다 (2024-06-17) */
                                        /* 2024-06-28 아래 쿼리로 원복 */
                                        /*AND eak_stts_cd = 1*/
                                        AND eak_stts_cd <> 5
                                      )
        ]]>
    </select>

    <!-- articleType이 NULL 인 경우 조회 -->
    <select id="findCodeIfNull" parameterType="String" resultType="String">
        /** TaskStatusChangeMapper.findCodeIfNull */
        SELECT code
        FROM aidt_lcms.meta
        WHERE name = 'articleType'
          AND id = (SELECT meta_id
                    FROM aidt_lcms.article_meta_map
                    WHERE article_id = #{taskIemId} AND meta_name = 'articleType' AND sub_id=0);
    </select>

    <!-- articleType이 NULL 이 아닌 경우 조회 -->
    <select id="findCodeIfNotNull" parameterType="String" resultType="String">
        /** TaskStatusChangeMapper.findCodeIfNotNull */
        SELECT code
        FROM aidt_lcms.meta
        WHERE name = 'articleType'
          AND id = (SELECT articleType FROM aidt_lcms.article WHERE id = #{taskIemId});
    </select>

    <!-- 과제 상세 최종 처리 -->
    <update id="updateTaskResultDetailFinalProcess" parameterType="String">
        /** TaskStatusChangeMapper.updateTaskFinalProcess */
        <![CDATA[
        UPDATE aidt_lms.task_result_detail
        SET
            /* 개념인 경우 4 */
            errata = if(mrk_ty = 3, 4, 2),
            eak_at = 'Y',
            eak_stts_cd = 5,
            mrk_cp_at = 'Y'
        WHERE 1=1
        AND id = #{id}
        ]]>
    </update>

    <!-- 과제 상세 최종 처리(Bulk 처리) -->
    <update id="bulkUpdateTaskResultDetailFinalProcess" parameterType="java.util.List">
        /** TaskStatusChangeMapper.bulkUpdateTaskResultDetailFinalProcess */
        UPDATE aidt_lms.task_result_detail
        SET
            /* 개념인 경우 4 */
            errata      = IF(mrk_ty = 3, 4, 2),
            eak_at      = 'Y',
            eak_stts_cd = 5,
            mrk_cp_at   = 'Y',
            mdfy_dt = now()
        WHERE id in
            <foreach collection="list" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
    </update>

    <!-- 과제 결과 최종 정리 -->
    <update id="updateTaskResultFinalProcesss" parameterType="String">
        /** TaskStatusChangeMapper.updateTaskResultFinalProcesss */
        <![CDATA[
        UPDATE aidt_lms.task_result_info
        SET eak_stts_cd = 5, mrk_cp_at = 'Y'
        WHERE 1=1
        AND id = #{id}
        ]]>
    </update>

    <!-- 과제 결과 최종 정리(Bulk 처리) -->
    <update id="bulkUpdateTaskResultFinalProcess" parameterType="java.util.List">
        /** TaskStatusChangeMapper.bulkUpdateTaskResultFinalProcess */
        UPDATE aidt_lms.task_result_info
        SET eak_stts_cd = 5, mrk_cp_at = 'Y', mdfy_dt = now()
        WHERE id in
            <foreach collection="list" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
    </update>


    <!-- 과제 최종 정리 -->
    <update id="updateTaskInfoFinalProcess">
        /** TaskStatusChangeMapper.updateTaskInfoFinalProcess */
        <![CDATA[
        UPDATE aidt_lms.task_info
        SET mrk_cp_dt = now(), task_stts_cd = 5, mdfy_dt = now()
        WHERE 1=1
        /* 조건추가 */
        AND task_stts_cd = 3
        AND task_cp_dt < NOW()
        AND id IN (
            SELECT X.task_id FROM (
                                     SELECT task_id,
                                            COUNT(DISTINCT mamoym_id) AS total_users,
                                            SUM(CASE WHEN eak_stts_cd = 5 THEN 1 ELSE 0 END) AS attended_users
                                     FROM aidt_lms.task_result_info
                                     GROUP BY task_id
                                     HAVING total_users = attended_users
                                 ) AS X
        )
        ]]>
    </update>

    <!-- 미제출자 중에 답안제출 이력이 있는 과제-학생 정보 조회 -->
    <select id="findTaskSubmAtN" resultType="camelHashMap">
        /** TaskStatusChangeMapper.findTaskSubmAtN */
        SELECT
        	A.*
        FROM (
        	SELECT
        		b.task_id,
        		b.mamoym_id as user_id,
        		b.id as resultInfoId,
                /* 조건 변경 : [학습이력이 있는 미제출자] -> [진입 흔적이 있는 미제출자] */
        		/* sum(c.sub_mit_anw is not null or c.sub_mit_anw_url is not null) as sub_mit_anw_cnt */
                   sum(IF(c.eak_at = 'Y',1,0)) as eak_at_cnt /* 진입 흔적이 있는지 체크 */
        	FROM aidt_lms.task_info a
        		INNER JOIN aidt_lms.task_result_info b
        			ON a.id = b.task_id
        				AND b.subm_at = 'N' /* 미제출 */
         				AND b.eak_stts_cd <![CDATA[<>]]> 5 /* 체점완료(5)가 아닌 */
        	            AND b.done_yn ='Y'
        		INNER JOIN aidt_lms.task_result_detail c
        			ON b.id = c.task_result_id
                        AND c.mrk_ty in (1,2) /* 문항/활동만, 개념은 eak_at이 Y임 */
        	WHERE 1=1
                AND a.task_stts_cd = 3
        		/* 조건추가 및 변경 */
        		/* 2024-06-28, 프론트에서 제출하기 API 처리시간을 고려해서 마감일 + 2분으로 처리 */
        		/* AND DATE_ADD(a.task_cp_dt, INTERVAL 2 MINUTE) <![CDATA[<]]> NOW() */
                AND a.task_cp_dt <![CDATA[<]]> NOW()
        	group by b.task_id, b.mamoym_id, b.id
        	order by b.task_id, b.mamoym_id
        ) A
        WHERE 1=1
        	/* AND sub_mit_anw_cnt > 0 */
               AND eak_at_cnt > 0
    </select>

    <update id="modifyStntTaskSubmitResultDetail" parameterType="java.util.List">
        /** TaskStatusChangeMapper.modifyStntTaskSubmitResultDetail */
        UPDATE aidt_lms.task_result_detail trd
          join aidt_lms.task_result_info tri on trd.task_result_id = tri.id
           SET trd.eak_at = 'Y'
             , trd.eak_stts_cd = if (trd.mrk_ty = 2,3,5)
             , trd.eak_st_dt = now()
             , trd.eak_ed_dt = now()
             , trd.errata=(case when trd.mrk_ty = 1 then 2 when trd.mrk_ty = 2 then 4 else trd.errata end)
             , trd.mrk_cp_at=(case when trd.mrk_ty = 1 then 'Y' when trd.mrk_ty = 2 then 'N' else trd.mrk_cp_at end)
         where tri.id in
            <foreach collection="list" item="map" open="(" close=")" separator=",">
                #{map.resultInfoId}
            </foreach>
           AND (trd.eak_at = 'N' or trd.errata is null)
    </update>

    <update id="modifyStntTaskSubmitResultInfo" parameterType="java.util.List">
        /** TaskStatusChangeMapper.modifyStntTaskSubmitResultInfo */
        UPDATE aidt_lms.task_result_info tri
        join (select a.id as resultInfoId
                     , sum(if (a.eak_stts_cd <![CDATA[<]]> 5,1,0)) eakSttsCdCnt
                  from (select in_tri.id, in_trd.eak_stts_cd
                          from aidt_lms.task_result_info in_tri
                          join aidt_lms.task_result_detail in_trd on in_tri.id = in_trd.task_result_id
                         where in_tri.id in
                        <foreach collection="list" item="map" open="(" close=")" separator=",">
                            #{map.resultInfoId}
                        </foreach>
                        ) a
                 group by a.id
                 ) trd  on tri.id = trd.resultInfoId
           SET tri.eak_ed_dt = now()
             , tri.subm_at = 'Y'
             , tri.eak_stts_cd = CASE WHEN trd.eakSttsCdCnt = 0 THEN 5 ELSE 3 END
             , tri.mrk_cp_at = CASE WHEN trd.eakSttsCdCnt = 0 THEN 'Y' ELSE mrk_cp_at END
         WHERE tri.id in
        <foreach collection="list" item="map" open="(" close=")" separator=",">
            #{map.resultInfoId}
        </foreach>
    </update>

    <!-- 리워드 지급 hist 생성 -->
    <insert id="createRwdEarnHist" parameterType="java.util.List" useGeneratedKeys="true" keyColumn="id">
        /** TaskStatusChangeMapper.createRwdEarnHist */
        INSERT INTO aidt_lms.rwd_earn_hist
        (
            id, user_id, cla_id, se_cd, menu_se_cd
            , sve_se_cd, trgt_id, rwd_se_cd, rwd_amt, rwd_use_amt
            , rgtr, reg_dt, mdfr, mdfy_dt
        )
        select null, tri.mamoym_id, ti.cla_id, 1, '2'
             , '3', ti.id, '1', 10, 0
             , tri.mamoym_id, now(), tri.mamoym_id, now()
        from aidt_lms.task_result_info tri
        join aidt_lms.task_info ti on tri.task_id = ti.id
        where tri.id in
        <foreach collection="list" item="map" open="(" close=")" separator=",">
            #{map.resultInfoId}
        </foreach>
    </insert>

    <!-- 리워드 존재 여부 확인 -->
    <select id="findRwdEarnInfo" parameterType="java.util.List" resultType="camelHashMap">
        /** TaskStatusChangeMapper.findRwdEarnInfo */
        select tri.id as resultInfoId, rei.id as rwdEarnInfoId
        from aidt_lms.task_result_info tri
        join aidt_lms.task_info ti on tri.task_id = ti.id
        left join aidt_lms.rwd_earn_info rei on tri.mamoym_id = rei.user_id and ti.cla_id = rei.cla_id
        where tri.id in
        <foreach collection="list" item="map" open="(" close=")" separator=",">
            #{map.resultInfoId}
        </foreach>
    </select>

    <!-- 리워드 미 존재 시 생성 -->
    <insert id="createRwdEarnInfo" parameterType="java.util.List" useGeneratedKeys="true" keyColumn="id">
        /** TaskStatusChangeMapper.createRwdEarnInfo */
        INSERT INTO aidt_lms.rwd_earn_info (
              id , user_id , cla_id
            , ht_earn_gramt , st_earn_gramt , ht_blnc , st_blnc
            , rgtr , reg_dt , mdfr , mdfy_dt
        )
        select null, tri.mamoym_id, ti.cla_id
             , 10, 0, 10, 0
             , tri.mamoym_id, now(), tri.mamoym_id, now()
        from aidt_lms.task_result_info tri
        join aidt_lms.task_info ti on tri.task_id = ti.id
        where tri.id in
        <foreach collection="list" item="resultInfoId" open="(" close=")" separator=",">
            #{resultInfoId}
        </foreach>
    </insert>

    <!-- 리워드 기 존재 시 갱신 -->
    <update id="modifyRwdEarnInfo" parameterType="java.util.List">
        /** TaskStatusChangeMapper.modifyRwdEarnInfo */
        UPDATE aidt_lms.rwd_earn_info
        SET
        ht_blnc = ht_blnc + 10
        ,ht_earn_gramt = ht_earn_gramt + 10
        ,mdfy_dt = NOW()
        WHERE id in
        <foreach collection="list" item="rwdEarnInfoId" open="(" close=")" separator=",">
            #{rwdEarnInfoId}
        </foreach>
    </update>

    <!-- 리워드 발급 알림 -->
    <insert id="createNtcnInfo" parameterType="java.util.List" useGeneratedKeys="true" keyColumn="id">
        /** TaskStatusChangeMapper.createNtcnInfo */
        INSERT INTO aidt_lms.ntcn_info
            ( rcve_id, textbk_id, cla_id, trget_cd, ntcn_ty_cd
            , trget_ty_cd, ntcn_cn, redng_at, link_url, encrg_at
            , stnt_nm, rgtr, mdfr)
        select tri.mamoym_id, ti.textbk_id, ti.cla_id, 'S', '3'
             , '9', '과제 풀이를 완료하여 하트리워드 10을 획득하였습니다.', 'N', '', 'N'
             , u.flnm, ti.wrter_id, ti.wrter_id
        from aidt_lms.task_result_info tri
        join aidt_lms.task_info ti on tri.task_id = ti.id
        left join aidt_lms.user u ON u.user_id = tri.mamoym_id
        where tri.id in
        <foreach collection="list" item="map" open="(" close=")" separator=",">
            #{map.resultInfoId}
        </foreach>
    </insert>

    <!-- 리포트 자동 공개 처리가 필요한 평가 조회 -->
    <select id="findTaskAutoRptList" resultType="camelHashMap">
        /** TaskStatusChangeMapper.findEvlAutoRptList */
        select id as taskId
        from aidt_lms.task_info
        WHERE 1 = 1
          AND task_stts_cd >= 3
          AND rpt_auto_othbc_at = 'Y'
          AND IFNULL(rpt_othbc_at, 'N') = 'N'
    </select>

    <update id="updateTaskResultStatusChangeToComplete">
        /** TaskStatusChangeMapper.updateTaskResultStatusChangeToComplete */
        <![CDATA[

        update aidt_lms.task_result_info tri
        join aidt_lms.task_info ti on ti.id = tri.task_id
        set tri.eak_stts_cd = 5, tri.mdfy_dt = now()
        where ti.task_stts_cd > 2
          and now() >= ti.task_cp_dt
          and tri.eak_stts_cd < 5
          and tri.subm_at = 'N'
          and tri.done_yn = 'N'

        ]]>
    </update>

</mapper>

