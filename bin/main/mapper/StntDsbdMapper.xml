<?xml version="1.0" encoding="UTF-8" ?>
<!-- mapper DTD 선언 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.visang.aidt.lms.api.dashboard.mapper.StntDsbdMapper">
    <!-- 2차 캐시 적용 -->
    <!--<cache/>-->

    <!-- 공통 -->
    <sql id = "incStntDsdbSearch">
        with recursive curriculum as (
            select
                a.id,
                a.wrter_id,
                a.cla_id,
                a.textbk_id,
                a.textbk_idx_id,
                a.key,
                a.parent,
                a.text,
                cast(lpad(a.key,5,'0') as char(100) character set utf8) as id_path,
                cast(a.text as char(1000) character set utf8) as id_path_nm,
                1 as depth
            from
                aidt_lms.tc_curriculum a
            where
                1=1
              and a.cla_id   = #{claId}
              and a.textbk_id = #{textbookId}
              and a.parent = 0
            union all
            select
                b.id,
                b.wrter_id,
                b.cla_id,
                b.textbk_id,
                b.textbk_idx_id,
                b.key,
                b.parent,
                b.text,
                concat(c.id_path, ' > ', lpad(b.key,5,'0')) as id_path,
                concat(c.id_path_nm, ' > ', b.text) as id_path_nm,
                1 + c.depth as depth
            from
                aidt_lms.tc_curriculum b
                    inner join curriculum c
                               on  c.cla_id   = b.cla_id
                                   and c.textbk_id = b.textbk_id
                                   and c.key = b.parent
        )
    </sql>

    <sql id = "incTcCurriculumTextTabId">
    with recursive curriculum as (
            select
                a.id,
                a.wrter_id,
                a.cla_id,
                a.textbk_id,
                a.textbk_idx_id,
                a.key,
                a.parent,
                a.text,
                cast(lpad(a.key,5,'0') as char(100) character set utf8) as id_path,
                cast(a.text as char(1000) character set utf8) as id_path_nm,
                1 as depth
            from aidt_lms.tab_info ti
            join aidt_lms.tc_curriculum a
                                        on a.cla_id = ti.cla_id
                                        and a.textbk_id = ti.textbk_id
                                        and a.parent = 0
            WHERE 1 = 1
            and ti.id = #{tabId}
            union all
            select
                b.id,
                b.wrter_id,
                b.cla_id,
                b.textbk_id,
                b.textbk_idx_id,
                b.key,
                b.parent,
                b.text,
                concat(c.id_path, ' > ', lpad(b.key,5,'0')) as id_path,
                case when c.depth >= 3 and c.depth <![CDATA[<]]> 4 then concat(c.id_path_nm, CHAR(10), '> ' ,b.text)
                     else concat(c.id_path_nm, ' > ', b.text)
                     end as id_path_nm,
                1 + c.depth as depth
            from
                aidt_lms.tc_curriculum b
                    inner join curriculum c
                                on c.cla_id   = b.cla_id
                                   and c.textbk_id = b.textbk_id
                                   and c.key = b.parent
        )
    </sql>

    <sql id = "incTcCurriculumTextElse">
    with recursive curriculum as (
            select
                a.id,
                a.wrter_id,
                a.cla_id,
                a.textbk_id,
                a.textbk_idx_id,
                a.key,
                a.parent,
                a.text,
                cast(lpad(a.key,5,'0') as char(100) character set utf8) as id_path,
                cast(a.text as char(1000) character set utf8) as id_path_nm,
                1 as depth
            from aidt_lms.tc_curriculum a
            WHERE 1 = 1
            and a.cla_id = #{claId}
            and a.textbk_id = #{textbkId}
            and a.parent = 0
            union all
            select
                b.id,
                b.wrter_id,
                b.cla_id,
                b.textbk_id,
                b.textbk_idx_id,
                b.key,
                b.parent,
                b.text,
                concat(c.id_path, ' > ', lpad(b.key,5,'0')) as id_path,
                case when c.depth >= 3 and c.depth <![CDATA[>=]]> 4 then concat(c.id_path_nm, CHAR(10), '> ' ,b.text)
                     else concat(c.id_path_nm, ' > ', b.text)
                     end as id_path_nm,
                1 + c.depth as depth
            from
                aidt_lms.tc_curriculum b
                    inner join curriculum c
                                on c.cla_id   = b.cla_id
                                   and c.textbk_id = b.textbk_id
                                   and c.key = b.parent
        )
    </sql>

    <!-- 사용하지 않음 -->
    <select id="selectStntDsbdReportTotStd" parameterType="map" resultType="camelHashMap">
        /* StntMapper.selectStntDsbdReportTotStd down */
        #과제항목수
        SELECT
                   IFNULL(sum(f.cnt), 0) as cnt
               FROM (
                   select IFNULL(count(*), 0) as cnt
                   from aidt_lms.task_result_detail a
                   where a.task_result_id in (select id
                        from aidt_lms.task_result_info
                        where task_id in
                           (select id from aidt_lms.task_info where cla_id = #{claId} and textbk_id = #{textbkId} and mamoym_id = #{stntId}))
                        and (
                        <if test="smstr == 1 ">
                            DATE_FORMAT(a.eak_ed_dt, '%Y%m%d') BETWEEN
                            DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                        </if>
                        <if test="smstr == 2 ">
                            DATE_FORMAT(a.eak_ed_dt, '%Y%m%d') BETWEEN
                            DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                        </if>
                        )
                        group by a.task_iem_id

                       UNION ALL

                   # 평가 항목 수
                   select IFNULL(count(*), 0) as cnt
                   from aidt_lms.evl_result_detail b
                   where b.evl_result_id in (select id
                       from aidt_lms.evl_result_info
                       where evl_id in
                           (select id from aidt_lms.evl_info where cla_id = #{claId} and textbook_id = #{textbkId} and mamoym_id = #{stntId}))
                    and (
                    <if test="smstr == 1 ">
                       DATE_FORMAT(b.eak_ed_dt, '%Y%m%d') BETWEEN
                       DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                    </if>
                    <if test="smstr == 2 ">
                       DATE_FORMAT(b.eak_ed_dt, '%Y%m%d') BETWEEN
                       DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                    </if>
                )
                   group by b.evl_iem_id

                       UNION ALL
                   #학습 항목 수
                   select IFNULL(count(*), 0) as cnt
                   from aidt_lms.std_dta_result_detail c
                   where c.dta_result_id in (select id
                       from aidt_lms.std_dta_result_info
                       where textbk_tab_id in
                           (select id from aidt_lms.tab_info where wrter_id = #{stntId} and cla_id = #{claId} and textbk_id = #{textbkId})
                       and mamoym_id = #{stntId}    )
                    and (
                        <if test="smstr == 1 ">
                            DATE_FORMAT(c.eak_ed_dt, '%Y%m%d') BETWEEN
                            DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                        </if>
                        <if test="smstr == 2 ">
                            DATE_FORMAT(c.eak_ed_dt, '%Y%m%d') BETWEEN
                            DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                        </if>
                    )
                   group by c.dta_iem_id
               ) f
    </select>

    <!-- 사용하지 않음 -->
    <select id="selectStntDsbdReportCrrRateForTch" parameterType="map" resultType="camelHashMap">
        /* StntDsbdMapper.selectStntDsbdReportCrrRateForTch */
        # 과제 항목 수
            select
                IFNULL((
            ## 총 정답 수
                       (select IFNULL(count(*), 0)
                        from aidt_lms.task_result_detail
                        where task_result_id in (select id
                                                 from aidt_lms.task_result_info
                                                 where task_id in
                                                       (select id from aidt_lms.task_info where cla_id = #{claId} and textbk_id = #{textbkId} and mamoym_id = #{stntId}))
                          and errata = 1
                            and (
                                <if test="smstr == 1 ">
                                    DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                    DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                                </if>
                                <if test="smstr == 2 ">
                                    DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                    DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                                </if>
                            )
        ) +
            # 평가 항목 수
                       (select IFNULL(count(*), 0)
                        from aidt_lms.evl_result_detail
                        where evl_result_id in (select id
                                                from aidt_lms.evl_result_info
                                                where evl_id in
                                                      (select id from aidt_lms.evl_info where cla_id = #{claId} and textbook_id = #{textbkId} and mamoym_id = #{stntId}))
                          and errata = 1
                        and (
                            <if test="smstr == 1 ">
                                DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                            </if>
                            <if test="smstr == 2 ">
                                DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                            </if>
                            )
        ) +

            #학습 항목 수
                       (select IFNULL(count(*), 0)
                        from aidt_lms.std_dta_result_detail
                        where dta_result_id in (select id
                                                from aidt_lms.std_dta_result_info
                                                where textbk_tab_id in
                                                      (select id
                                                       from aidt_lms.tab_info
                                                       where wrter_id = #{stntId}
                                                         and cla_id = #{claId}
                                                         and textbk_id = #{textbkId})
                                                and mamoym_id = #{stntId})
                          and errata = 1
                            and (
                            <if test="smstr == 1 ">
                                DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                            </if>
                            <if test="smstr == 2 ">
                                DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                            </if>
                            )
        )
                       )
                       /
            # 과제 항목 수

                   (
                       ## 총 항목 수
                       (select IFNULL(count(*), 0)
                        from aidt_lms.task_result_detail
                        where task_result_id in (select id
                                                 from aidt_lms.task_result_info
                                                 where task_id in
                                                       (select id from aidt_lms.task_info where cla_id = #{claId} and textbk_id = #{textbkId})
                                                and mamoym_id = #{stntId}
                            )
                        and (
                                <if test="smstr == 1 ">
                                    DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                    DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                                </if>
                                <if test="smstr == 2 ">
                                    DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                    DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                                </if>
                                )
            ) +
            # 평가 항목 수
                       (select IFNULL(count(*), 0)
                        from aidt_lms.evl_result_detail
                        where evl_result_id in (select id
                                                from aidt_lms.evl_result_info
                                                where evl_id in
                                                      (select id from aidt_lms.evl_info where cla_id = #{claId} and textbook_id = #{textbkId})
                                                and mamoym_id = #{stntId}
                        )
                    and (
                           <if test="smstr == 1 ">
                               DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                               DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                           </if>
                           <if test="smstr == 2 ">
                               DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                               DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                           </if>
                           )
        ) +

            #학습 항목 수
                       (select IFNULL(count(*), 0)
                        from aidt_lms.std_dta_result_detail
                        where dta_result_id in (select id
                                                from aidt_lms.std_dta_result_info
                                                where textbk_tab_id in
                                                      (select id
                                                       from aidt_lms.tab_info
                                                       where wrter_id = #{stntId}
                                                         and cla_id = #{claId}
                                                         and textbk_id = #{textbkId})
                                                and mamoym_id = #{stntId}
                        )
                    and (
                            <if test="smstr == 1 ">
                                DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                            </if>
                            <if test="smstr == 2 ">
                                DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                            </if>
                            )
        )
                       ) * 100, 0)
            as crr_rate
    </select>

    <!-- 사용하지 않음 -->
    <select id="selectStntDsbdReportCrrRate" parameterType="map" resultType="camelHashMap">
        /* stntDsbdMapper.selectStntDsbdReportCrrRate up */
        # 과제 항목 수
            select
                IFNULL((
            ## 총 정답 수
                       (select IFNULL(count(*), 0)
                        from aidt_lms.task_result_detail
                        where task_result_id in (select id
                                                 from aidt_lms.task_result_info
                                                 where task_id in
                                                       (select id from aidt_lms.task_info where cla_id = #{claId} and textbk_id = #{textbkId} and mamoym_id = #{stntId}))
                          and errata = 1
                            and (
                                <if test="smstr == 1 ">
                                    DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                    DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                                </if>
                                <if test="smstr == 2 ">
                                    DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                    DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                                </if>
                            )
        ) +
            # 평가 항목 수
                       (select IFNULL(count(*), 0)
                        from aidt_lms.evl_result_detail
                        where evl_result_id in (select id
                                                from aidt_lms.evl_result_info
                                                where evl_id in
                                                      (select id from aidt_lms.evl_info where cla_id = #{claId} and textbook_id = #{textbkId} and mamoym_id = #{stntId}))
                          and errata = 1
                        and (
                            <if test="smstr == 1 ">
                                DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                            </if>
                            <if test="smstr == 2 ">
                                DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                            </if>
                            )
        ) +

            #학습 항목 수
                       (select IFNULL(count(*), 0)
                        from aidt_lms.std_dta_result_detail
                        where dta_result_id in (select id
                                                from aidt_lms.std_dta_result_info
                                                where textbk_tab_id in
                                                      (select id
                                                       from aidt_lms.tab_info
                                                       where wrter_id = #{stntId}
                                                         and cla_id = #{claId}
                                                         and textbk_id = #{textbkId})
                                                and mamoym_id = #{stntId})
                          and errata = 1
                            and (
                            <if test="smstr == 1 ">
                                DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                            </if>
                            <if test="smstr == 2 ">
                                DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                            </if>
                            )
        )
                       )
                       /
            # 과제 항목 수

                   (
                       ## 총 항목 수
                       (select IFNULL(count(*), 0)
                        from aidt_lms.task_result_detail
                        where task_result_id in (select id
                                                 from aidt_lms.task_result_info
                                                 where task_id in
                                                       (select id from aidt_lms.task_info where cla_id = #{claId} and textbk_id = #{textbkId})
                                                and mamoym_id = #{stntId}
                            )
                        and (
                                <if test="smstr == 1 ">
                                    DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                    DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                                </if>
                                <if test="smstr == 2 ">
                                    DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                    DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                                </if>
                                )
            ) +
            # 평가 항목 수
                       (select IFNULL(count(*), 0)
                        from aidt_lms.evl_result_detail
                        where evl_result_id in (select id
                                                from aidt_lms.evl_result_info
                                                where evl_id in
                                                      (select id from aidt_lms.evl_info where cla_id = #{claId} and textbook_id = #{textbkId})
                                                and mamoym_id = #{stntId}
                        )
                    and (
                           <if test="smstr == 1 ">
                               DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                               DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                           </if>
                           <if test="smstr == 2 ">
                               DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                               DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                           </if>
                           )
        ) +

            #학습 항목 수
                       (select IFNULL(count(*), 0)
                        from aidt_lms.std_dta_result_detail
                        where dta_result_id in (select id
                                                from aidt_lms.std_dta_result_info
                                                where textbk_tab_id in
                                                      (select id
                                                       from aidt_lms.tab_info
                                                       where wrter_id = #{stntId}
                                                         and cla_id = #{claId}
                                                         and textbk_id = #{textbkId})
                                                and mamoym_id = #{stntId}
                        )
                    and (
                            <if test="smstr == 1 ">
                                DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                            </if>
                            <if test="smstr == 2 ">
                                DATE_FORMAT(eak_ed_dt, '%Y%m%d') BETWEEN
                                DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                            </if>
                            )
        )
                       ) * 100, 0)
            as crr_rate
    </select>

    <!-- 사용하지 않음 -->
    <select id="findStntDsbdReportStdTotList" parameterType="map" resultType="camelHashMap" >
        /* TchReportMapper.findTchReportStdTotList */
        SELECT
            x.val           as unit_name
            , count(y.id)   as slf_std_num
            ,TRUNCATE(IFNULL(AVG(y.usd_scr), 0) ,1) as curr_undstn
            ,IFNULL(SUM(UNIX_TIMESTAMP(y.std_st_dt)), 0) as a
            , IFNULL(SUM(UNIX_TIMESTAMP(y.std_ed_dt)), 0) as b
            , CONCAT(count(y.id), '회 | ', TIME_FORMAT( SEC_TO_TIME( SUM(TIMEDIFF(y.std_ed_dt, y.std_st_dt))/count(y.id)), '%H:%i:%s')) as slf_std_smry
        FROM (
            SELECT row_number() over() as unit_num
                , b.*
            FROM aidt_lcms.meta a
                inner join aidt_lcms.meta b
                    ON a.code = b.description
                        AND b.is_active = 1
                        AND b.name = 'studyMap1'
                inner join aidt_lcms.meta c
                    on c.id = b.parent_id
                        and c.is_active = 1
            WHERE a.parent_id = (select curriBook FROM aidt_lcms.textbook WHERE id = #{textbkId}) and a.is_active = 1
            ORDER BY b.parent_id, b.code
        ) x LEFT JOIN (
            SELECT a.id
                    , a.usd_scr
                    , a.unit_num
                    , a.textbk_id
                    , b.std_st_dt
                    , b.std_ed_dt
                    , b.std_at
            FROM aidt_lms.slf_std_info a
                LEFT JOIN aidt_lms.slf_std_result_info b
                ON a.id = b.std_id

            UNION ALL

            SELECT a.id
                   , b.usd_scr
                   , a.unit_num
                   , a.textbk_id
                   , b.std_st_dt
                   , b.std_ed_dt
                   , b.std_at
            FROM aidt_lms.slf_ai_std_info a
               LEFT JOIN aidt_lms.slf_ai_std_result_info b
               ON a.id = b.std_ai_id
        ) y
            ON y.std_at = 'Y'
            AND y.textbk_id = #{textbkId}
            AND x.unit_num = y.unit_num
        <if test="smstr == 1 ">
            AND (
                DATE_FORMAT(y.std_ed_dt, '%Y%m%d') BETWEEN
                DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
            )
        </if>
        <if test="smstr == 2 ">
            AND (
            DATE_FORMAT(y.std_ed_dt, '%Y%m%d') BETWEEN
            DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
            )
        </if>
        GROUP BY x.val, x.unit_num, x.parent_id
    </select>

    <!-- 사용하지 않음 -->
    <select id="findStntDsbdReportEvlTotList" parameterType="map" resultType="camelHashMap" >
        select id  /* 밑 */                                                                             as evl_id
            , eam_mth                                                                          as eam_mth
            , F_CODE_NM('eam_mth', eam_mth)                                                    as eam_mth_nm
            , evl_nm
            , IFNULL(
               (select evl_result_scr from aidt_lms.evl_result_info where evl_id = id and mamoym_id = #{stntId} ##개별 학생에 대한 정보##
               ), 0)                                                                           as score
            , SEC_TO_TIME(IFNULL((select TIMEDIFF(eak_ed_dt, eak_st_dt)
                                  from aidt_lms.evl_result_info
                                  where evl_id = id
                                    and mamoym_id = #{stntId} ##개별 학생에 대한 정보##
                                 ), 0))                                                          as avg_time
            , evl_stdr_set
            , evl_stdr_set_at
            , case evl_stdr_set_at
                  when 'Y' then
                      case evl_stdr_set
                          when 1 then
                              (select case evl_result_scr
                                          when evl_result_scr /
                                               IFNULL((select sum(evl_iem_scr) from aidt_lms.evl_iem_info where evl_id = id), 0) * 100 <![CDATA[>=]]> evl_gd_stdr_scr
                                              then concat(evl_result_scr, '점(상)')
                                          when evl_result_scr /
                                               IFNULL((select sum(evl_iem_scr) from aidt_lms.evl_iem_info where evl_id = id), 0) * 100 <![CDATA[<]]> evl_gd_stdr_scr and evl_result_scr <![CDATA[>=]]> evl_av_stdr_scr
                                              then concat(evl_result_scr, '점(중)')
                                          else concat(evl_result_scr, '점(하)')
                                          end
                               from aidt_lms.evl_result_info
                               where evl_id = id
                                 and mamoym_id = #{stntId} ##개별 학생에 대한 정보##
                              )
                          when 2 then
                              (select case evl_result_scr
                                          when evl_result_scr /
                                               IFNULL((select sum(evl_iem_scr) from aidt_lms.evl_iem_info where evl_id = id), 0) *
                                               100 <![CDATA[>=]]> evl_ps_stdr_scr
                                              then concat(evl_result_scr, '점(통과)')
                                          else concat(evl_result_scr, '점(실패)')
                                          end
                               from aidt_lms.evl_result_info
                               where evl_id = id
                                 and mamoym_id = #{stntId} ##개별 학생에 대한 정보##
                              )
                          else concat(IFNULL((select evl_result_scr
                                              from aidt_lms.evl_result_info
                                              where evl_id = id
                                                and mamoym_id = #{stntId} ##개별 학생에 대한 정보##
                                             ), 0), '점')
                          end #as evlResult
                  when 'N' then
                      (select case subm_at
                                  when 'Y' then concat(evl_result_scr, '점(완료)')
                                  else concat(evl_result_scr, '점(미완료)')
                                  end
                       from aidt_lms.evl_result_info
                       where evl_id = id
                         and subm_at = 'Y'
                         and mamoym_id = #{stntId} ##개별 학생에 대한 정보##
                      )
           end                                                                                 as evl_result
            , (select subm_at from aidt_lms.evl_result_info where evl_id = id and mamoym_id = #{stntId}) as subm_at #제출여부
            , (select genrvw from aidt_lms.evl_result_info where evl_id = id and mamoym_id = #{stntId})  as genrvw #총평문구
       from aidt_lms.evl_info
       where cla_id = #{claId}
         and textbook_id = #{textbkId}
           <if test="smstr == 1 ">
               AND (
               DATE_FORMAT(evl_cp_dt, '%Y0101') BETWEEN
               DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0831')
               )
           </if>
           <if test="smstr == 2 ">
               AND (
               DATE_FORMAT(evl_cp_dt, '%Y0101') BETWEEN
               DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
               )
           </if>
    </select>

    <!-- 사용하지 않음 -->
    <select id="findStntDsbdReportEvlTotListForTch" parameterType="map" resultType="camelHashMap" >
        /* StntDsbdMapper.findStntDsbdReportEvlTotListForTch */
        select id    as evl_id
        , eam_mth    as eam_mth
        , F_CODE_NM('eam_mth', eam_mth)   as eam_mth_nm
        , evl_nm
        , IFNULL((
            select (select sum(erd.evl_iem_scr_result) from aidt_lms.evl_result_detail erd where erd.evl_result_id = t1.id) as evl_result_scr
            from aidt_lms.evl_result_info t1
            where t1.evl_id = ei.id
              and t1.mamoym_id = #{stntId} ##개별 학생에 대한 정보##
            ), 0)    as score
        , SEC_TO_TIME(IFNULL((
            select TIMEDIFF(eak_ed_dt, eak_st_dt)
            from aidt_lms.evl_result_info
            where evl_id = ei.id
            and mamoym_id = #{stntId} ##개별 학생에 대한 정보##
            ), 0))   as avg_time
        , evl_stdr_set
        , evl_stdr_set_at
        , case evl_stdr_set_at
          when 'Y' then
                case evl_stdr_set
                when 1 then
                    (select case tt1.evl_result_scr
                            when tt1.evl_result_scr /
                                IFNULL((select sum(evl_iem_scr) from aidt_lms.evl_iem_info where evl_id = ei.id), 0) * 100 <![CDATA[>=]]> ei.evl_gd_stdr_scr
                                then concat(tt1.evl_result_scr, '점(상)')
                            when tt1.evl_result_scr /
                                IFNULL((select sum(evl_iem_scr) from aidt_lms.evl_iem_info where evl_id = ei.id), 0) * 100 <![CDATA[<]]> ei.evl_gd_stdr_scr and tt1.evl_result_scr <![CDATA[>=]]> ei.evl_av_stdr_scr
                                then concat(tt1.evl_result_scr, '점(중)')
                            else concat(tt1.evl_result_scr, '점(하)')
                        end
                        from (
                            select (select sum(erd.evl_iem_scr_result) from aidt_lms.evl_result_detail erd where erd.evl_result_id = t1.id) as evl_result_scr
                            from aidt_lms.evl_result_info t1
                            where t1.evl_id = ei.id
                            and t1.mamoym_id = #{stntId} ##개별 학생에 대한 정보##
                        ) tt1
                    )
                when 2 then
                    (select case tt1.evl_result_scr
                            when tt1.evl_result_scr /
                                IFNULL((select sum(evl_iem_scr) from aidt_lms.evl_iem_info where evl_id = ei.id), 0) * 100 <![CDATA[>=]]> ei.evl_ps_stdr_scr
                                then concat(tt1.evl_result_scr, '점(통과)')
                            else concat(tt1.evl_result_scr, '점(실패)')
                        end
                        from (
                            select (select sum(erd.evl_iem_scr_result) from aidt_lms.evl_result_detail erd where erd.evl_result_id = t1.id) as evl_result_scr
                            from aidt_lms.evl_result_info t1
                            where t1.evl_id = ei.id
                            and t1.mamoym_id = #{stntId} ##개별 학생에 대한 정보##
                        ) tt1
                    )
                else concat(IFNULL((
                    select (select sum(erd.evl_iem_scr_result) from aidt_lms.evl_result_detail erd where erd.evl_result_id = t1.id) as evl_result_scr
                    from aidt_lms.evl_result_info t1
                    where t1.evl_id = ei.id
                    and t1.mamoym_id = #{stntId} ##개별 학생에 대한 정보##
                    ), 0), '점')
                end #as evlResult
          when 'N' then
                (select case tt1.subm_at
                        when 'Y' then concat(tt1.evl_result_scr, '점(완료)')
                        else concat(tt1.evl_result_scr, '점(미완료)')
                    end
                    from (
                        select (select sum(erd.evl_iem_scr_result) from aidt_lms.evl_result_detail erd where erd.evl_result_id = t1.id) as evl_result_scr
                        , t1.subm_at
                        from aidt_lms.evl_result_info t1
                        where t1.evl_id = ei.id
                        and t1.subm_at = 'Y'
                        and t1.mamoym_id = #{stntId} ##개별 학생에 대한 정보##
                    ) tt1
                )
          end   as evl_result
        , (select subm_at from aidt_lms.evl_result_info where evl_id = id and mamoym_id = #{stntId}) as subm_at #제출여부
        , (select genrvw from aidt_lms.evl_result_info where evl_id = id and mamoym_id = #{stntId})  as genrvw #총평문구
        from aidt_lms.evl_info ei
        where cla_id = #{claId}
        and textbook_id = #{textbkId}
        <if test="smstr == 1 ">
            AND (
            DATE_FORMAT(evl_cp_dt, '%Y0101') BETWEEN
            DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0831')
            )
        </if>
        <if test="smstr == 2 ">
            AND (
            DATE_FORMAT(evl_cp_dt, '%Y0101') BETWEEN
            DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
            )
        </if>
    </select>

    <!-- 사용하지 않음 -->
    <select id="findStntDsbdReportTaskTotList" parameterType="map" resultType="camelHashMap">
        /* down */
        select id                                                                                 as task_id
                 , eam_mth
                 , F_CODE_NM('eam_mth', eam_mth)                                                      as eam_mth_nm
                 , task_nm
                 , (select F_CODE_NM('eam_mth', task_result_anct)
                    from aidt_lms.task_result_info
                    where task_id = id
                      and mamoym_id = #{stntId} ##개별 학생에 대한 정보##
            )                                                                                         as evl_result_cd
                 , SEC_TO_TIME(IFNULL((select sum(TIMEDIFF(eak_ed_dt, eak_st_dt))
                                       from aidt_lms.task_result_info
                                       where task_id = id
                                         and mamoym_id = #{stntId} ##개별 학생에 대한 정보##
                                      ), 0) /
                               IFNULL((select count(*)
                                       from aidt_lms.task_result_info
                                       where task_id = id
                                         and subm_at = 'Y'
                                         and mamoym_id = #{stntId} ##개별 학생에 대한 정보##
                                      ), 0))                                                            as avg_time
                 , (select subm_at from aidt_lms.task_result_info where task_id = id and mamoym_id = #{stntId}) as subm_at #제출여부
                 , (select genrvw from aidt_lms.task_result_info where task_id = id and mamoym_id = #{stntId})  as genrvw #총평문구
            from aidt_lms.task_info
            where cla_id = #{claId}
              and textbk_id = #{textbkId}
            <if test="smstr == 1 ">
               AND (
                    DATE_FORMAT(pd_evl_ed_dt, '%Y%m%d') BETWEEN
                    DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
               )
            </if>
            <if test="smstr == 2 ">
               AND (
                    DATE_FORMAT(pd_evl_ed_dt, '%Y%m%d') BETWEEN
                    DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
               )
            </if>
    </select>

    <select id="findTotalStdCntInfo" parameterType="map" resultType="camelHashMap">
        /* stntDsbdMapper.findTotalStdCntInfo */
        select sum(a.std_cnt) as total_std_cnt
        from (
                select count(*) as std_cnt
                from aidt_lms.slf_std_info a
                where 1=1
                  and a.stdt_id = #{userId}
                  and a.textbk_id = #{textbkId}
                  and a.cla_id = #{claId}
                  and a.id in (select std_id from aidt_lms.slf_std_result_info r where r.std_id = a.id and r.std_at = 'Y')
                union all
                select count(*) as std_cnt
                from aidt_lms.slf_ai_std_info a
                where 1=1
                  and a.stdt_id = #{userId}
                  and a.textbk_id = #{textbkId}
                  and a.cla_id = #{claId}
                  and a.id in (select std_ai_id from aidt_lms.slf_ai_std_result_info r where r.std_ai_id = a.id and r.std_at = 'Y')
        ) a
    </select>

    <select id="findMnthInfo" parameterType="map" resultType="camelHashMap">
        /* stntDsbdMapper.findMnthInfo */
        select DATE_FORMAT(std_ed_dt, '%Y%m%d') as submDt
               , 0 as submCnt
        from (
                select a.std_ed_dt
                from aidt_lms.slf_std_result_info a
                where 1=1
                    and a.std_at = 'Y'
                    and a.std_id in (select id
                                     from aidt_lms.slf_std_info
                                     where ed_at = 'Y'
                                       and textbk_id = #{textbkId}
                                       and cla_id = #{claId}
                                       and stdt_id = #{userId})
                    and DATE_FORMAT(a.std_ed_dt, '%Y%m') = #{searchDt}
                union all
                select a.std_ed_dt
                from aidt_lms.slf_ai_std_result_info a
                where 1=1
                    and a.std_at = 'Y'
                    and a.std_ai_id in (select id
                                        from aidt_lms.slf_ai_std_info
                                        where ed_at = 'Y'
                                          and textbk_id = #{textbkId}
                                          and cla_id = #{claId}
                                          and stdt_id = #{userId})
                    and DATE_FORMAT(a.std_ed_dt, '%Y%m') = #{searchDt}
        ) a
        group by DATE_FORMAT(std_ed_dt, '%Y%m%d')
        order by submDt
    </select>

    <select id="findAvgTime" parameterType="map" resultType="camelHashMap">
        /* stntDsbdMapper.findAvgTime */
        select
            <choose>
                <when test="mnthStdCnt > 0">
                    ifnull(TIME_FORMAT(SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(std_ed_dt, std_st_dt))) / #{mnthStdCnt}),'%H:%i:%s'), 0)
                </when>
                <otherwise>0</otherwise>
            </choose>
            AS avgTime
        from (
                select std_ed_dt, std_st_dt
                from aidt_lms.slf_std_result_info
                where 1 = 1
                    and std_id in (select id
                                   from aidt_lms.slf_std_info
                                   where textbk_id = #{textbkId} and cla_id = #{claId} and stdt_id = #{userId})
                    and DATE_FORMAT(std_ed_dt, '%Y%m') = #{searchDt}
                union all
                select std_ed_dt, std_st_dt
                from aidt_lms.slf_ai_std_result_info
                where 1 = 1
                    and std_ai_id in (select id
                                      from aidt_lms.slf_ai_std_info
                                      where textbk_id = #{textbkId} and cla_id = #{claId} and stdt_id = #{userId})
                    and DATE_FORMAT(std_ed_dt, '%Y%m') = #{searchDt}
        ) a
    </select>

    <select id="findAvgWeekStdCnt" parameterType="map" resultType="camelHashMap">
        /* stntDsbdMapper.findAvgWeekStdCnt */
<!--        /* SELECT ROUND(ifnull(#{mnthStdCnt} / (WEEK(CURRENT_DATE, 2) - WEEK(DATE_SUB(CURRENT_DATE, INTERVAL DAYOFMONTH(CURRENT_DATE) - 1 DAY), 2) + 1), 0),1) as avgWeekStdCnt */-->
        select ifnull(round(t.submDtCnt / t.submWeekCnt, 1),0) as avgWeekStdCnt
        from (
            select count(distinct DATE_FORMAT(std_ed_dt, '%Y%m%d')) as submDtCnt
            , count( distinct WEEK(std_ed_dt, 2))  as submWeekCnt
            from (
                    select a.std_ed_dt
                    from aidt_lms.slf_std_result_info a
                    where a.std_at = 'Y'
                      and a.std_id in (select id
                                        from aidt_lms.slf_std_info
                                        where textbk_id = #{textbkId} and cla_id = #{claId} and stdt_id = #{userId})
                      and DATE_FORMAT(a.std_ed_dt, '%Y%m') = #{searchDt}
                    union all
                    select a.std_ed_dt
                    from aidt_lms.slf_ai_std_result_info a
                    where a.std_at = 'Y'
                      and a.std_ai_id in (select id
                                            from aidt_lms.slf_ai_std_info
                                            where textbk_id = #{textbkId} and cla_id = #{claId} and stdt_id = #{userId})
                    and DATE_FORMAT(a.std_ed_dt, '%Y%m') = #{searchDt}
            ) a
        ) t
    </select>

    <!-- 사용하지 않음 -->
    <select id="findStdAnalyInfo_BACK" parameterType="map" resultType="camelHashMap">
        /* stntDsbdMapper.findStdAnalyInfo */
        select
            IFNULL((select val from aidt_lcms.meta where id =
                                                         (select kwg_main_id
                                                          from aidt_lms.std_usd_info
                                                          where textbk_id = #{textbkId}
                                                            and meta_id = #{metaId}
                                                            and stdt_id = #{userId}
                                                            and std_at = 'Y'
                                                          order by usd_scr
                limit 1)), "-")  as worstStd
             ,IFNULL((select val from aidt_lcms.meta where id =
                                                           (select kwg_main_id
                                                            from aidt_lms.std_usd_info
                                                            where textbk_id = #{textbkId}
                                                              and meta_id = #{metaId}
                                                              and stdt_id = #{userId}
                                                              and std_at = 'Y'
                                                            order by usd_scr desc
            limit 1)),"-")  as bsetStd
    </select>

    <select id="findStdAnalyInfo" parameterType="map" resultType="camelHashMap">
        /* stntDsbdMapper.findStdAnalyInfo */
        with temp as (
            select kwg_main_id, usd_scr
            from aidt_lms.std_usd_info
            where textbk_id = #{textbkId}
              and cla_id  = #{claId}
              and meta_id = #{metaId}
              and stdt_id = #{userId}
              and std_at = 'Y'
        ),
             score_check as (
                 /* 점수 관련 기본 체크 */
                 select
                     count(*) as valid_count,
                     min(usd_scr) as min_score,
                     max(usd_scr) as max_score,
                     (select usd_scr from temp limit 1) as common_score
                 from temp
             ),
             recent_concept as (
                 /* 가장 최근 학습한 개념 */
                 select val as recent_concept_name
                 from aidt_lcms.meta m
                          join temp t on m.id = t.kwg_main_id
                 order by t.kwg_main_id desc  /* 또는 최근 학습 순서에 맞는 필드 */
                 limit 1
             ),
             min_concept as (
                 /* 최저 점수의 개념 */
                 select val as min_concept_name
                 from aidt_lcms.meta
                 where id = (select kwg_main_id from temp order by usd_scr limit 1)
             ),
             max_concept as (
                 /* 최고 점수의 개념 */
                 select val as max_concept_name
                 from aidt_lcms.meta
                 where id = (select kwg_main_id from temp order by usd_scr desc limit 1)
             )
        select
            /* worstStd 계산 */
            case
                when (select valid_count from score_check) = 0 then '학습을 하면 볼 수 있어요'
                when (select min_score from score_check) <![CDATA[<>]]> (select max_score from score_check) then
                    case
                        when (select min_score from score_check) <![CDATA[>=]]> 50 then '잘하고 있어요!'
                        else (select min_concept_name from min_concept)
                        end
                else
                    case
                        when (select common_score from score_check) <![CDATA[>=]]> 80 then '잘하고 있어요!'
                        when (select common_score from score_check) <![CDATA[>=]]> 50 then '조금 더 학습해 볼까요?'
                        else (select recent_concept_name from recent_concept)
                        end
                end as worstStd,

            /* bsetStd 계산 */
            case
                when (select valid_count from score_check) = 0 then '학습을 하면 볼 수 있어요'
                when (select min_score from score_check) <![CDATA[<>]]> (select max_score from score_check) then
                    case
                        when (select max_score from score_check) <![CDATA[>=]]> 80 then (select max_concept_name from max_concept)
                        when (select max_score from score_check) <![CDATA[>=]]> 50 then '조금 더 학습해 볼까요?'
                        else '조금 더 학습해 볼까요?'
                        end
                else
                    case
                        when (select common_score from score_check) <![CDATA[>=]]> 80 then (select recent_concept_name from recent_concept)
                        when (select common_score from score_check) <![CDATA[>=]]> 50 then '조금 더 학습해 볼까요?'
                        else '조금 더 학습해 볼까요?'
                        end
                end as bsetStd
    </select>

    <!-- 사용하지 않음 -->
    <select id="findStdAnalyInfoForEng_back" parameterType="map" resultType="camelHashMap">
        /* stntDsbdMapper.findStdAnalyInfoForEng */
        select
            IFNULL((
                (select usd_ach_id
                 from aidt_lms.usd_ach_src2_info
                 where 1=1
                   and textbk_id = #{textbkId}
                   and meta_id = #{metaId}
                   and stdt_id = #{userId}
                   and std_at = 'Y'
                 order by usd_ach_scr, reg_dt desc
                limit 1)), '-')  as worstStd
             ,IFNULL((
            (select usd_ach_id
             from aidt_lms.usd_ach_src2_info
             where 1=1
               and textbk_id = #{textbkId}
               and meta_id = #{metaId} /* 목차아이디 */
               and stdt_id = #{userId}
               and std_at = 'Y'
             order by usd_ach_scr desc, reg_dt desc
            limit 1)),'-')  as bsetStd
    </select>

    <select id="findStdAnalyInfoForEng" parameterType="map" resultType="camelHashMap">
        /* stntDsbdMapper.findStdAnalyInfoForEng */
        with
            lr_data as (
                /* listening, reading 데이터 추출 및 가장 최근 데이터 감지 */
                select
                    max(a.id) as id
                     , a.usd_ach_id as usdAchId
                     , sum(a.usd_ach_scr) as usd_ach_scr
                     , sum(a.rflt_actv_cnt) as rflt_actv_cnt
                     , a.unit_num
                     , round((sum(a.usd_ach_scr) / sum(a.rflt_actv_cnt)) * 100, 2) as usd_ach_scr_percent
                     , (select mt.id from aidt_lcms.meta mt where mt.code = a.usd_ach_id) as meta_id
                     , a.mdfy_dt
                     , a.std_dt
                     , IF(lag(sum(a.usd_ach_scr)) over (partition by a.usd_ach_id order by a.std_dt) = sum(a.usd_ach_scr)
                              and
                          lag(sum(a.rflt_actv_cnt)) over (partition by a.usd_ach_id order by a.std_dt) = sum(a.rflt_actv_cnt), 0, 1) as is_changed
                     , row_number() over (partition by a.usd_ach_id order by a.std_dt) as rn
                from aidt_lms.usd_ach_src2_info a
                where a.usd_ach_id in ('listening','reading')
                  and a.cla_id = #{claId}
                  and a.stdt_id = #{userId}
                  and a.textbk_id = #{textbkId}
                  and a.unit_num = #{unitNum}
                group by a.usd_ach_id, a.std_dt
            ),
            gv_data as (
                /* grammar, vocabulary 데이터 추출 및 가장 최근 데이터 감지 */
                select
                    max(uasi.id) as id
                     , uasi.usd_ach_id as usdAchId
                     , sum(uasd.usd_ach_scr) as usd_ach_scr
                     , sum(uasd.rflt_actv_cnt) as rflt_actv_cnt
                     , uasi.unit_num
                     , round(sum(uasd.usd_ach_scr) / sum(uasd.rflt_actv_cnt) * 100, 2) as usd_ach_scr_percent
                     , (select mt.id from aidt_lcms.meta mt where mt.code = uasi.usd_ach_id) as meta_id
                     , uasi.mdfy_dt
                     , uasi.std_dt
                     , IF(lag(sum(uasd.usd_ach_scr)) over (partition by uasi.usd_ach_id order by uasi.std_dt) =
                          sum(uasd.usd_ach_scr)
                              and lag(sum(uasd.rflt_actv_cnt)) over (partition by uasi.usd_ach_id order by uasi.std_dt) =
                                  sum(uasd.rflt_actv_cnt), 0, 1) as is_changed
                     , row_number() over (partition by uasi.usd_ach_id order by uasi.std_dt) as rn
                from aidt_lms.usd_ach_src2_info uasi
                         join aidt_lms.usd_ach_src2_detail uasd on uasi.id = uasd.usd_ach_src_id
                where uasi.usd_ach_id in ('grammar', 'vocabulary')
                  and uasi.cla_id = #{claId}
                  and uasi.stdt_id = #{userId}
                  and uasi.textbk_id = #{textbkId}
                  and uasi.unit_num = #{unitNum}
                group by uasi.usd_ach_id, uasi.std_dt
            ),
            p_data as (
                /* pronunciation 데이터 추출 및 가장 최근 데이터 감지 */
                /* 발음의 경우 백분율 계산 X */
                select
                    max(uasi.id) as id
                     , uasi.usd_ach_id as usdAchId
                     , sum(uasd.usd_ach_scr) as usd_ach_scr
                     , sum(uasd.rflt_actv_cnt) as rflt_actv_cnt
                     , uasi.unit_num
                     , round(sum(uasd.usd_ach_scr) / sum(uasd.rflt_actv_cnt), 2) as usd_ach_scr_percent
                     , (select mt.id from aidt_lcms.meta mt where mt.code = uasi.usd_ach_id) as meta_id
                     , uasi.mdfy_dt
                     , uasi.std_dt
                     , IF(lag(sum(uasd.usd_ach_scr)) over (partition by uasi.usd_ach_id order by uasi.std_dt) =
                          sum(uasd.usd_ach_scr)
                              and lag(sum(uasd.rflt_actv_cnt)) over (partition by uasi.usd_ach_id order by uasi.std_dt) =
                                  sum(uasd.rflt_actv_cnt), 0, 1) as is_changed
                     , row_number() over (partition by uasi.usd_ach_id order by uasi.std_dt) as rn
                from aidt_lms.usd_ach_src2_info uasi
                         join aidt_lms.usd_ach_src2_detail uasd on uasi.id = uasd.usd_ach_src_id
                where uasi.usd_ach_id in ('pronunciation')
                  and uasi.cla_id = #{claId}
                  and uasi.stdt_id = #{userId}
                  and uasi.textbk_id = #{textbkId}
                  and uasi.unit_num = #{unitNum}
                group by uasi.usd_ach_id, uasi.std_dt
            ),
            temp as (
                /* 메타 데이터와 실제 학습 데이터 결합 */
                select aa.id as stdMetaId
                     , bb.id as ach_id
                     , aa.code as stdNm
                     , ifnull(bb.usd_ach_scr, 0) as usd_ach_scr
                     , ifnull(bb.rflt_actv_cnt, 0) as rflt_actv_cnt
                     , ifnull(bb.usd_ach_scr_percent, 0) as usd_ach_scr_percent
                     , case when bb.id is not null then 'Y' else 'N' end as stdAt
                     , mdfy_dt
                from (
                         select * from aidt_lcms.meta
                         where code in ('vocabulary', 'grammar', 'listening', 'reading', 'pronunciation')
                     ) aa
                         left join (
                    /* 실제 값이 변경된 데이터 또는 첫 데이터 선택 */
                    select id, usdAchId, usd_ach_scr, rflt_actv_cnt, unit_num, usd_ach_scr_percent, meta_id, mdfy_dt
                    from lr_data
                    where (
                        is_changed = 1 and std_dt = (
                            select max(std_dt) from lr_data l2
                            where l2.usdAchId = lr_data.usdAchId and l2.is_changed = 1
                        )) or (is_changed = 0 and rn = 1)

                    union all

                    select id, usdAchId, usd_ach_scr, rflt_actv_cnt, unit_num, usd_ach_scr_percent, meta_id, mdfy_dt
                    from gv_data where (is_changed = 1 and std_dt = (
                        select max(std_dt) from gv_data g2
                        where g2.usdAchId = gv_data.usdAchId and g2.is_changed = 1
                    )) or (is_changed = 0 and rn = 1)

                    union all

                    select id, usdAchId, usd_ach_scr, rflt_actv_cnt, unit_num, usd_ach_scr_percent, meta_id, mdfy_dt
                    from p_data where (is_changed = 1 and std_dt = (
                        select max(std_dt) from p_data p2
                        where p2.usdAchId = p_data.usdAchId and p2.is_changed = 1
                    )) or (is_changed = 0 and rn = 1)
                ) bb
                                   on aa.id = bb.meta_id and aa.code in ('vocabulary', 'grammar', 'listening', 'reading', 'pronunciation')
            ),
            score_check as (
                /* 점수 관련 공통 체크 */
                select count(*) as valid_count,
                       min(usd_ach_scr_percent) as min_score,
                       max(usd_ach_scr_percent) as max_score,
                    /* 점수가 같은 경우 사용할 공통 점수 */
                       (select usd_ach_scr_percent from temp where stdAt = 'Y' limit 1) as common_score
                from temp
                where stdAt = 'Y'
            ),
            recent_subject as (
                /* 가장 최근 학습한 과목 */
                select CONCAT(UPPER(SUBSTRING(stdNm, 1, 1)), LOWER(SUBSTRING(stdNm, 2))) as subject_name
                from temp
                where stdAt = 'Y'
                order by mdfy_dt desc
                limit 1
            )
        /* 최종 결과 계산 */
        select
            /* worstStd 계산 - 수정된 로직 */
            case
                when sc.valid_count = 0 then '-'
                when sc.min_score <![CDATA[<>]]> sc.max_score then
                    case
                        when sc.min_score <![CDATA[>=]]> 50 then '잘하고 있어요'  /* 기획에 의해 변경(05/27) */
                        else (select CONCAT(UPPER(SUBSTRING(stdNm, 1, 1)), LOWER(SUBSTRING(stdNm, 2)))
                              from temp
                              where stdAt = 'Y'
                              order by usd_ach_scr_percent limit 1)
                    end
                    else
                                case
                                    when sc.common_score <![CDATA[>=]]> 80 then '잘하고 있어요'
                                    when sc.common_score <![CDATA[>=]]> 50 then '조금 더 학습해 볼까요?'
                                    else rs.subject_name
                    end
                    end as worstStd,
                        /* bsetStd 계산 - 수정된 로직 */
                        case
                            when sc.valid_count = 0 then '-'
                            when sc.min_score <![CDATA[<>]]> sc.max_score then
                                case
                                    when sc.max_score <![CDATA[>=]]> 80 then (select CONCAT(UPPER(SUBSTRING(stdNm, 1, 1)), LOWER(SUBSTRING(stdNm, 2)))
                                                                              from temp
                                                                              where stdAt = 'Y'
                                                                              order by usd_ach_scr_percent desc limit 1)
                                    when sc.max_score <![CDATA[>=]]> 50 then '조금 더 학습해 볼까요?'
                                    else '조금 더 학습해 볼까요?'
                    end
                    else
                                case
                                    when sc.common_score <![CDATA[>=]]> 80 then rs.subject_name
                                    when sc.common_score <![CDATA[>=]]> 50 then '조금 더 학습해 볼까요?'
                                    else '조금 더 학습해 볼까요?'
                    end
                    end as bsetStd
        from score_check sc
                 cross join recent_subject rs
    </select>

    <!-- 사용하지 않음 -->
    <select id="findStntDsbdReportTotalUndstn" parameterType="map" resultType="camelHashMap" >
          /* stntDsbdMapper.findStntDsbdReportTotalUndstn */
            SELECT TRUNCATE(IFNULL(AVG(usd_scr), 0) ,1) as undstn
            FROM aidt_lms.std_usd_unit_day_hist
            WHERE std_at = 'Y'
            AND textbk_id = #{textbkId}
            AND stdt_id = #{stntId}
            AND cla_id = #{claId}
            <if test="smstr == 1 ">
                AND (
                DATE_FORMAT(std_dt, '%Y%m%d') BETWEEN
                    DATE_FORMAT(NOW(), '%Y0301') AND DATE_FORMAT(NOW(), '%Y0831')
                )
            </if>
            <if test="smstr == 2 ">
                AND (
                DATE_FORMAT(std_dt, '%Y%m%d') BETWEEN
                DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 6 MONTH), '%Y0901') AND DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 12 MONTH), '%Y0229')
                )
            </if>
        </select>


    <select id="findStntDsbdStatusSelflrnChapterDetailList" parameterType="map" resultType="camelHashMap" >
        /* stntDsbdMapper.findStntDsbdStatusSelflrnChapterDetailList */
        select
            COUNT(*) over () AS full_count
	        , t.*
        from
            (select
                    b.id
                  , b.unit_num
                  , SUBSTRING_INDEX(b.std_nm, '> Lv.', 1) as std_nm
                  /* , ifnull(SEC_TO_TIME(UNIX_TIMESTAMP(std_ed_dt) - UNIX_TIMESTAMP(std_st_dt)), 0)as stdTime */
                  , TIME_FORMAT(SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(a.std_ed_dt, a.std_st_dt)))), '%H:%i:%s') AS stdTime
                  , b.mdfy_dt
             from aidt_lms.slf_std_result_info a
                      inner join aidt_lms.slf_std_info b on a.std_id = b.id
             where a.std_at = 'Y'
               and a.std_id in (select id
                              from aidt_lms.slf_std_info
                              where textbk_id = #{param.textbkId}
                                and cla_id = #{param.claId}
                                and stdt_id = #{param.userId}
                                and std_cd = 2
                                )
               and DATE_FORMAT(a.std_ed_dt, '%Y%m%d') = #{param.searchDt}
               and ifnull(a.std_ed_dt, 0)  <![CDATA[>=]]>   ifnull(a.std_st_dt, 0)
             group by b.id, b.unit_num, SUBSTRING_INDEX(b.std_nm, '> Lv.', 1)
             union all
             select
                    b.id
                  , b.unit_num as unit_num
                  , CONCAT(b.std_nm, ' >  AI 학습')  as std_nm
                  /* , ifnull(SEC_TO_TIME(UNIX_TIMESTAMP(std_ed_dt) - UNIX_TIMESTAMP(std_st_dt)), 0)as stdTime */
                  , TIME_FORMAT(SEC_TO_TIME(SUM(TIME_TO_SEC(TIMEDIFF(a.std_ed_dt, a.std_st_dt)))), '%H:%i:%s') AS stdTime
                  , b.mdfy_dt
             from aidt_lms.slf_ai_std_result_info a
                      inner join aidt_lms.slf_ai_std_info b on a.std_ai_id  = b.id
             where a.std_at = 'Y'
               and a.std_ai_id in (select id
                                 from aidt_lms.slf_ai_std_info
                                 where textbk_id = #{param.textbkId}
                                   and cla_id = #{param.claId}
                                   and stdt_id = #{param.userId}
                                   )
               and DATE_FORMAT(a.std_ed_dt, '%Y%m%d') = #{param.searchDt}
               and ifnull(a.std_ed_dt, 0)  <![CDATA[>=]]>   ifnull(a.std_st_dt, 0)
             group by b.id, b.unit_num, CONCAT(b.std_nm, ' >  AI 학습')
            ) t
            order by mdfy_dt desc
            limit #{pageable.pageSize} offset #{pageable.offset}
    </select>

    <select id="findStntDsbdStatusHomewkList" parameterType="map" resultType="camelHashMap" >
        /* stntDsbdMapper.findStntDsbdStatusHomewkList */
        select
        COUNT(*) over () AS full_count
        , ti.id
        , ti.task_nm
        , DATE_FORMAT(ti.task_prg_dt, "%Y-%m-%d %H:%i:%s") as task_prg_dt
        , DATE_FORMAT(ti.task_cp_dt, "%Y-%m-%d %H:%i:%s") as task_cp_dt
        , ti.task_stts_cd
        , aidt_lms.F_CODE_NM('task_stts_cd', ti.task_stts_cd) AS task_stts_nm
        , tri.subm_at
        , ti.rpt_othbc_at
        from
        aidt_lms.task_info ti
        join aidt_lms.task_result_info tri on tri.task_id = ti.id
        where ti.tmpr_strg_at = 'N'
        and tri.mamoym_id = #{param.userId}
        and ti.cla_id = #{param.claId}
        and ti.textbk_id = #{param.textbookId}
        order by
            case when ti.task_stts_cd = 1 then ti.reg_dt END DESC,
            case when ti.task_stts_cd > 1 then task_prg_dt END DESC
        LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}
    </select>

    <select id="findStntDsbdStatusEvalList" parameterType="map" resultType="camelHashMap" >
        /* stntDsbdMapper.findStntDsbdStatusEvalList */
        select
        COUNT(*) over () AS full_count
        , ei.id
        , ei.evl_nm
        , DATE_FORMAT(ei.evl_prg_dt, "%Y-%m-%d %H:%i:%s") as evl_prg_dt
        , DATE_FORMAT(ei.evl_cp_dt, "%Y-%m-%d %H:%i:%s") as evl_cp_dt
        , ei.evl_stts_cd
        , aidt_lms.F_CODE_NM('evl_stts_cd', ei.evl_stts_cd) AS evl_stts_nm
        , eri.subm_at
        , ei.rpt_othbc_at
        from
        aidt_lms.evl_info ei
        join aidt_lms.evl_result_info eri on eri.evl_id = ei.id
        where ei.tmpr_strg_at = 'N'
        and eri.mamoym_id = #{param.userId}
        and ei.cla_id = #{param.claId}
        and ei.textbook_id = #{param.textbookId}
        order by
            case when ei.evl_stts_cd = 1 then ei.reg_dt END DESC,
            case when ei.evl_stts_cd > 1 then evl_prg_dt END DESC
        LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}
    </select>

    <select id="selectStntDsbdStatusAreausdContAreaList" parameterType="map" resultType="camelHashMap">
            /* StntDsbdMapper.selectStntDsbdStatusAreausdContAreaList */
            select
               a.meta_id_b as area_id
               , b.val    as area_nm
            from aidt_lcms.meta_meta_map a
                inner join aidt_lcms.meta b
                     on a.meta_id_b = b.id
                     and a.meta_name_b = 'contentArea'
                inner join aidt_lcms.meta c
                     on a.meta_id_a = c.id
            where 1=1
            and a.meta_id_a in (
                select id from aidt_lcms.v_curri_tree a where 1=1
                and a.textbk_id = #{textbookId}
                and a.depth = 1
            )
            group by a.meta_id_b
       </select>

       <select id="selectStntDsbdStatusAreausdAreaUsdList" parameterType="map" resultType="camelHashMap">
           /* StntDsbdMapper.selectStntDsbdStatusAreausdAreaUsdList */
           SELECT a.area_id
           ,a.area_nm
           ,IFNULL(ROUND(avg(b.usd_scr),2), 0) as usd_scr
          FROM
           (
                select a.meta_id_a as meta_id
                     , a.meta_id_b as area_id
                      , c.name   as unit_cd
                      , c.val    as unit_nm
                      , b.name   as area_cd
                      , b.val    as area_nm
                from aidt_lcms.meta_meta_map a
                      inner join aidt_lcms.meta b
                            on a.meta_id_b = b.id
                            and a.meta_name_b = 'contentArea'
                      inner join aidt_lcms.meta c
                            on a.meta_id_a = c.id
                where 1=1
                 /* 영역별 전체 구하기 */
                and a.meta_id_a in (
                     select id from aidt_lcms.v_curri_tree a where 1=1
                     and a.textbk_id = #{textbookId}
                     and a.depth = 1
                    )
                group by a.meta_id_a
           ) a
            LEFT JOIN
           (
               SELECT
                   a.stdt_id
                   ,a.meta_id
                   ,IFNULL(a.usd_scr, 0) AS usd_scr
               FROM
                   aidt_lms.std_usd_unit_info a
                   JOIN aidt_lms.tc_cla_mb_info c
                       ON a.stdt_id = c.stdt_id AND a.cla_id = c.cla_id and c.actvtn_at = 'Y'
               WHERE 1=1
                    AND a.textbk_id = #{textbookId}
                    AND a.cla_id    = #{claId}
                    AND a.stdt_id   = #{userId}
                    AND a.std_at    = 'Y'
           ) b
           ON a.meta_id = b.meta_id
           GROUP BY a.area_id
       </select>

       <select id="selectStntDsbdStatusAreausdDetail" parameterType="pagingParam" resultType="camelHashMap">
           /* StntDsbdMapper.selectStntDsbdStatusAreausdDetail */
           SELECT
               t.row_no
               ,t.std_dt
               ,t.trgt_se_cd
               ,t.trgt_se_nm
               ,t.trgt_nm
               ,t.rp_othbc_at
               , count(*) over () as full_count
           FROM (
               SELECT
                    row_number() over (order by a.std_dt) as row_no
                   ,DATE_FORMAT(a.std_dt, '%Y-%m-%d') AS std_dt
                   ,a.trgt_se_cd
                   ,aidt_lms.f_code_nm('trgt_se_cd', a.trgt_se_cd ) as trgt_se_nm
                   ,(CASE WHEN a.trgt_se_cd = 1 THEN (
                            select
                                if(a.tab_id > 0,concat('[', (select tab_nm from aidt_lms.tab_info where id = a.tab_id), '] ',tc.`text`), tc.`text`)
                            from aidt_lms.tc_curriculum tc
                            where 1=1
                                AND tc.textbk_id = #{param.textbookId}
                                AND tc.cla_id = #{param.claId}
                                AND tc.wrter_id = (SELECT user_id FROM aidt_lms.tc_cla_mb_info WHERE stdt_id = #{param.userId} AND cla_id = #{param.claId} and actvtn_at = 'Y')
                                AND tc.`key`= a.trgt_id
                       )
                       WHEN a.trgt_se_cd = 2 THEN (SELECT task_nm FROM aidt_lms.task_info WHERE id = a.trgt_id)
                       WHEN a.trgt_se_cd = 3 THEN (SELECT evl_nm FROM aidt_lms.evl_info WHERE id = a.trgt_id)
                       /* 자기주도학습 : AI학습 */
                       WHEN a.trgt_se_cd = 4 and a.std_cd = 1 THEN (SELECT std_nm FROM aidt_lms.slf_ai_std_info WHERE id = a.trgt_id)
                       /* 자기주도학습 : 선택학습 */
                       ELSE (SELECT std_nm FROM aidt_lms.slf_std_info WHERE id = a.trgt_id)
                   END) AS trgt_nm
                   ,(CASE WHEN a.trgt_se_cd = 1 THEN 'Y'
                       WHEN a.trgt_se_cd = 2 THEN (SELECT IFNULL(rpt_othbc_at, 'N') FROM aidt_lms.task_info WHERE id = a.trgt_id)
                       WHEN a.trgt_se_cd = 3 THEN (SELECT IFNULL(rpt_othbc_at, 'N') FROM aidt_lms.evl_info WHERE id = a.trgt_id)
                       ELSE 'Y' END)
                       AS rp_othbc_at
               FROM aidt_lms.std_usd_day_hist a
                    inner join aidt_lms.tc_cla_mb_info b
                        on a.cla_id = b.cla_id and a.stdt_id = b.stdt_id and b.actvtn_at = 'Y'
               WHERE 1=1
                   AND a.textbk_id = #{param.textbookId}
                   AND a.cla_id = #{param.claId}
                   AND a.stdt_id = #{param.userId}
                   AND a.std_at = 'Y'
                   AND a.meta_id in (  select a.meta_id_a as unit_id
                                       from aidt_lcms.meta_meta_map a
                                       where 1=1
                                       and a.meta_name_b = 'contentArea'
                                       and a.meta_id_b = #{param.areaId} /* area_id (영역) */
                                       and a.meta_id_a in (
                                               select id from aidt_lcms.v_curri_tree a where 1=1
                                               and a.textbk_id = #{param.textbookId}
                                               and a.depth = 1
                                       )
                   )
           ) t
           order by t.row_no desc
           limit #{pageable.pageSize} offset #{pageable.offset}
       </select>

       <select id="selectAreaName" parameterType="map" resultType="camelHashMap">
           /* StntDsbdMapper.selectAreaName */
           select
              a.meta_id_b as area_id
              , b.val    as area_nm
              , a.meta_id_a as unit_id
           from aidt_lcms.meta_meta_map a
               inner join aidt_lcms.meta b
                    on a.meta_id_b = b.id
                    and a.meta_name_b = 'contentArea'
               inner join aidt_lcms.meta c
                    on a.meta_id_a = c.id
           where 1=1
             and a.meta_id_b = #{areaId} /* area_id (영역) */
             /* and a.meta_id_a = 'unit_id'  unit_id (단원) */
           and a.meta_id_a in (
               select id from aidt_lcms.v_curri_tree a where 1=1
               and a.textbk_id = #{textbookId}
               and a.depth = 1
           )
           group by a.meta_id_b
       </select>

    <select id="findStntDsbdStatusChapterunitList" parameterType="map" resultType="camelHashMap">
        /* StntDsbdMapper.findStntDsbdStatusChapterunitList */
        with maxStdDtInfo as (
            select DATE_FORMAT(ifnull(max(std_dt),now()), '%Y-%m%-%d') as max_std_dt
            from aidt_lms.std_usd_unit_day_hist
            where std_at = 'Y'
              and textbk_id = #{textbookId}
              and cla_id = #{claId}
              and stdt_id = #{userId}
        )
        select
            a.meta_id
             , a.unit_nm
             , unit_num
             , if(b.meta_id is not null,1,0) as is_study
             , ifnull(ROUND(past_usd_scr, 2), 0) as past_usd_scr
             , ifnull(ROUND(curr_usd_scr, 2), 0) as curr_usd_scr
             , ifnull(ROUND((curr_usd_scr - past_usd_scr), 2), 0) as diff_usd_scr
             , c.flnm as stntNm
        from
            (
                select
                    b.id  as meta_id
                     , b.val as unit_nm
                     , row_number() over () as unit_num
                from aidt_lcms.meta a
                        inner join aidt_lcms.meta b
                            on a.code = b.description
                                and b.is_active = 1
                                and b.name = 'studyMap1'
                        inner join aidt_lcms.meta c
                            on c.id = b.parent_id
                                and c.is_active = 1
                where 1=1
                  and a.parent_id = (select curriBook from aidt_lcms.textbook where id = #{textbookId})
                  and a.is_active = 1
            ) a left join
            (
                select
                    s.meta_id
                     , s.stdt_id
                     , ifnull(sum((select usd_scr
                                   from aidt_lms.std_usd_unit_day_hist ss
                                   where s.id = ss.id
                                     and DATE_FORMAT(ss.std_dt, '%Y-%m%-%d') = DATE_FORMAT(m.max_std_dt, '%Y-%m%-%d'))), 0) as curr_usd_scr
                     , ifnull(sum((select usd_scr
                                   from aidt_lms.std_usd_unit_day_hist ss
                                   where s.id = ss.id
                                     and DATE_FORMAT(ss.std_dt, '%Y-%m%-%d') = DATE_FORMAT(m.max_std_dt-INTERVAL 1 DAY, '%Y-%m%-%d'))), 0) as past_usd_scr
                from aidt_lms.std_usd_unit_day_hist s,
                     (select max_std_dt from maxStdDtInfo) m
                where
                    1=1
                    and s.textbk_id = #{textbookId}
                    and s.stdt_id = #{userId}
                    and s.cla_id = #{claId}
                    and s.std_at = 'Y'
                    and usd_scr is not null
                    and DATE_FORMAT(s.std_dt, '%Y-%m%-%d') between DATE_FORMAT(m.max_std_dt-INTERVAL 1 DAY, '%Y-%m%-%d') and DATE_FORMAT(m.max_std_dt, '%Y-%m%-%d')
                group by meta_id
            ) b on a.meta_id = b.meta_id
                left join aidt_lms.`user` c on b.stdt_id = c.user_id
        order by a.unit_num
    </select>

    <select id="selectUnitName" parameterType="map" resultType="camelHashMap">
        /* StntDsbdMapper.selectUnitName */
        select
            b.id  as meta_id
            , b.val as unit_nm
        from aidt_lcms.meta a
                inner join aidt_lcms.meta b
                    on a.code = b.description
                        and b.is_active = 1
                        and b.name = 'studyMap1'
                inner join aidt_lcms.meta c
                    on c.id = b.parent_id
                        and c.is_active = 1
        where 1=1
          and a.parent_id = (select curriBook from aidt_lcms.textbook where id = #{textbookId})
          and a.is_active = 1
          and b.id = #{metaId}
    </select>

    <select id="selectStntDsbdStatusChapterunitDetail" parameterType="pagingParam" resultType="camelHashMap">
        /* StntDsbdMapper.selectStntDsbdStatusChapterunitDetail */
        SELECT a.*
        FROM (
            SELECT
                   row_number() over (order by t.std_dt) as row_no
                 , t.*
                 , count(*) over () as full_count
            FROM (
                    SELECT
                        /* DATE_FORMAT(a.std_dt, '%Y-%m-%d') AS std_dt */
                        /* 2024-10-22일 추가 */
                        /* 학습한 날짜 */
                        (
                            CASE WHEN a.trgt_se_cd = 1 THEN ( /* 교과서 */
                                CASE
                                    WHEN a.tab_id = 0 THEN (  /* 현재는 필요는 없는데, 예전 데이터 처리하기 위해 추가 */
                                        select DATE_FORMAT(max(b.mdfy_dt) ,'%Y-%m-%d') as std_dt
                                        from aidt_lms.tab_info a
                                            inner join aidt_lms.std_dta_result_info b
                                                on a.id = b.textbk_tab_id and b.mamoym_id = #{param.userId}
                                        where 1=1
                                          and a.wrter_id = (
                                            select a.user_id from aidt_lms.tc_cla_mb_info a where a.cla_id = #{param.claId} and a.stdt_id = #{param.userId} and a.actvtn_at = 'Y'
                                          )
                                          and a.cla_id = #{param.claId}
                                          and a.textbk_id = #{param.textbookId}
                                          and a.crcul_id = a.trgt_id
                                    )
                                    WHEN a.tab_id > 0 THEN (
                                        select DATE_FORMAT(mdfy_dt,'%Y-%m-%d') as std_dt
                                        from aidt_lms.std_dta_result_info
                                        where 1=1
                                          and textbk_tab_id = a.tab_id
                                          and mamoym_id = #{param.userId}
                                    )
                                    END
                                 )
                                 WHEN a.trgt_se_cd = 2 THEN ( /* 과제 */
                                     select DATE_FORMAT(mdfy_dt,'%Y-%m-%d') as std_dt
                                     from aidt_lms.task_result_info a
                                     where 1=1
                                       and a.task_id = a.trgt_id
                                       and a.mamoym_id = #{param.userId}
                                 )
                                 WHEN a.trgt_se_cd = 3 THEN ( /* 평가 */
                                     select DATE_FORMAT(mdfy_dt,'%Y-%m-%d') as std_dt
                                     from aidt_lms.evl_result_info a
                                     where 1=1
                                       and a.evl_id = a.trgt_id
                                       and a.mamoym_id = #{param.userId}
                                 )
                                 WHEN a.trgt_se_cd = 4 THEN ( /* 자기주도학습 */
                                     CASE WHEN a.std_cd = 1 THEN (
                                              select DATE_FORMAT(mdfy_dt,'%Y-%m-%d') as std_dt
                                              from aidt_lms.slf_ai_std_info a
                                              where a.id = a.trgt_id
                                          )
                                          WHEN a.std_cd = 2 THEN (
                                              select DATE_FORMAT(mdfy_dt,'%Y-%m-%d') as std_dt
                                              from aidt_lms.slf_std_info a
                                              where a.id = a.trgt_id
                                          )
                                     END
                                 )
                                 ELSE DATE_FORMAT(a.std_dt,'%Y-%m-%d')
                            END
                        ) AS std_dt
                        ,a.trgt_se_cd
                        ,aidt_lms.f_code_nm('trgt_se_cd', a.trgt_se_cd ) as trgt_se_nm
                        ,a.tab_id
                        ,(CASE WHEN a.trgt_se_cd = 1 THEN (
                                select
                                    if(a.tab_id > 0,concat('[', (select tab_nm from aidt_lms.tab_info where id = a.tab_id), '] ',tc.`text`), tc.`text`)
                                from aidt_lms.tc_curriculum tc
                                where 1=1
                                    AND tc.textbk_id = #{param.textbookId}
                                    AND tc.cla_id = #{param.claId}
                                    AND tc.wrter_id = (SELECT user_id FROM aidt_lms.tc_cla_mb_info WHERE stdt_id = #{param.userId} AND cla_id = #{param.claId} and actvtn_at = 'Y')
                                    AND tc.`key`= a.trgt_id
                             )
                             WHEN a.trgt_se_cd = 2 THEN (SELECT task_nm FROM aidt_lms.task_info WHERE id = a.trgt_id)
                             WHEN a.trgt_se_cd = 3 THEN (SELECT evl_nm FROM aidt_lms.evl_info WHERE id = a.trgt_id)
                             /* 자기주도학습 : AI학습 */
                             WHEN a.trgt_se_cd = 4 and a.std_cd = 1 THEN (SELECT std_nm FROM aidt_lms.slf_ai_std_info WHERE id = a.trgt_id)
                             /* 자기주도학습 : 선택학습 */
                             ELSE (SELECT std_nm FROM aidt_lms.slf_std_info WHERE id = a.trgt_id)
                        END) AS trgt_nm
                        ,(CASE WHEN a.trgt_se_cd = 1 THEN 'Y'
                             WHEN a.trgt_se_cd = 2 THEN (SELECT IFNULL(rpt_othbc_at, 'N') FROM aidt_lms.task_info WHERE id = a.trgt_id)
                             WHEN a.trgt_se_cd = 3 THEN (SELECT IFNULL(rpt_othbc_at, 'N') FROM aidt_lms.evl_info WHERE id = a.trgt_id)
                             ELSE 'Y' END)  AS rp_othbc_at
                        , a.trgt_id
                        FROM
                        (
                            SELECT
                                a.trgt_se_cd, a.std_cd, a.trgt_id, a.tab_id, a.unit_num, a.meta_id,
                                min(a.std_dt) as std_dt
                            FROM
                                aidt_lms.std_usd_day_hist a
                                    INNER JOIN aidt_lms.tc_cla_mb_info c
                                        ON a.cla_id = c.cla_id and a.stdt_id = c.stdt_id and c.actvtn_at = 'Y'
                            WHERE 1=1
                              AND a.textbk_id = #{param.textbookId}
                              AND a.cla_id = #{param.claId}
                              AND a.stdt_id = #{param.userId}
                              AND a.std_at = 'Y'
                              AND a.meta_id = #{param.metaId}
                            <if test='param.stdDt != null and param.stdDt != ""'> /* 수정일을 기준으로처리*/
                                AND a.std_dt = #{param.stdDt}
                            </if>
                            GROUP BY a.trgt_se_cd, a.std_cd, a.trgt_id, a.tab_id, a.unit_num, a.meta_id
                            ORDER BY a.id
                        ) a
                ) t
        ) a
        order by a.row_no DESC
        limit #{pageable.pageSize} offset #{pageable.offset}
    </select>

    <!-- [학생] 학습관리 > AI튜터 / 과제 AI튜터챗봇 사용횟수 -->
    <select id="selectTaskAitutorCount" parameterType="map" resultType="int">
        /* StntDsbdMapper.selectTaskAitutorCount */
        select  count(*)
        from    aidt_lms.task_info a
            inner join aidt_lms.task_result_info b on b.task_id = a.id
            inner join aidt_lms.task_result_detail c on c.task_result_id = b.id
        where   b.mamoym_id = #{userId}
          and   b.subm_at = 'Y'
          and   c.ai_tut_use_at = 'Y'
        <choose>
            <when test='searchChtCn != null and searchChtCn != ""'>
          and   c.ai_tut_cht_cn like concat('%', #{searchChtCn}, '%')
            </when>
            <otherwise>
          and   c.ai_tut_cht_cn > ''
            </otherwise>
        </choose>
          and   a.textbk_id = #{textBkId}
          and   a.cla_id = #{claId}
    </select>

    <!-- [학생] 학습관리 > AI튜터 / 평가 AI튜터챗봇 사용횟수 -->
    <select id="selectEvlAitutorCount" parameterType="map" resultType="int">
        /* StntDsbdMapper.selectEvlAitutorCount */
        select count(*)
        from aidt_lms.evl_info a
                 inner join aidt_lms.evl_result_info b on b.evl_id = a.id
                 inner join aidt_lms.evl_result_detail c on c.evl_result_id = b.id
        where b.mamoym_id = #{userId}
          and b.subm_at = 'Y'
          and c.ai_tut_use_at = 'Y'
        <choose>
            <when test='searchChtCn != null and searchChtCn != ""'>
          and c.ai_tut_cht_cn like concat('%', #{searchChtCn}, '%')
            </when>
            <otherwise>
          and c.ai_tut_cht_cn > ''
            </otherwise>
        </choose>
          and a.textbook_id = #{textBkId}
          and a.cla_id = #{claId}
    </select>

    <!-- [학생] 학습관리 > AI튜터 / 자기주도학습 AI튜터챗봇 사용횟수 -->
    <select id="selectSlfStdAitutorCount" parameterType="map" resultType="int">
        /* StntDsbdMapper.selectSlfStdAitutorCount */
        select  count(*)
        from    aidt_lms.slf_std_info a1
            inner join aidt_lms.slf_std_result_info b1 on a1.id = b1.std_id
        where   a1.stdt_id = #{userId}
          and   a1.ed_at = 'Y'
          and   b1.ai_tut_use_at = 'Y'
        <if test='stdId != null and stdId != ""'>
            and a1.id = #{stdId}
        </if>
        <choose>
            <when test='searchChtCn != null and searchChtCn != ""'>
          and   b1.ai_tut_cht_cn like concat('%', #{searchChtCn}, '%')
            </when>
            <otherwise>
          and   b1.ai_tut_cht_cn > ''
            </otherwise>
        </choose>
          and   a1.textbk_id = #{textBkId}
          and   a1.cla_id = #{claId}
    </select>

    <!-- [학생] 학습관리 > AI튜터 / 과제 AI튜터챗봇 채팅 list -->
    <select id="selectTaskAitutorList" parameterType="map" resultType="map">
        /* StntDsbdMapper.selectTaskAitutorList */
        select b1.task_iem_id as articleId
             , b1.sub_id as subId
             , b1.id as resultId
             , b1.ai_tut_cht_cn as aiTutChtCn
             , date_format(b1.reg_dt, '%Y%m%d') as stdDt
             , concat('과제 > ', c1.task_nm) as stdNm
        from  aidt_lms.task_result_info a1
            inner join aidt_lms.task_result_detail b1 on a1.id = b1.task_result_id
            inner join aidt_lms.task_info c1 on c1.id = a1.task_id
        where a1.mamoym_id = #{userId}
          and   a1.subm_at = 'Y'
          and   b1.ai_tut_use_at = 'Y'
        <if test='learningDate != null and learningDate != ""'>
          and   b1.reg_dt like concat(date_format(str_to_date(#{learningDate}, '%Y%m%d'),'%Y-%m-%d '), '%')
        </if>
          and   c1.textbk_id = #{textBkId}
          and   c1.cla_id = #{claId}
        <choose>
            <when test='searchChtCn != null and searchChtCn != ""'>
          and   b1.ai_tut_cht_cn like concat('%', #{searchChtCn}, '%')
            </when>
            <otherwise>
          and   b1.ai_tut_cht_cn > ''
            </otherwise>
        </choose>
    </select>

    <!-- [학생] 학습관리 > AI튜터 / 평가 AI튜터챗봇 채팅 list -->
    <select id="selectEvlAitutorList" parameterType="map" resultType="map">
        /* StntDsbdMapper.selectEvlAitutorList */
        select b.evl_iem_id as articleId
             , b.sub_id as subId
             , b.id as resultId
             , b.ai_tut_cht_cn as aiTutChtCn
             , date_format(b.reg_dt, '%Y%m%d') as stdDt
             , concat('평가 > ', c.evl_nm) as stdNm
        from aidt_lms.evl_result_info a
            inner join aidt_lms.evl_result_detail b on b.evl_result_id = a.id
            inner join aidt_lms.evl_info c on c.id = a.evl_id
        where a.mamoym_id = #{userId}
          and a.subm_at = 'Y'
          and b.ai_tut_use_at = 'Y'
        <if test='learningDate != null and learningDate != ""'>
          and b.reg_dt like concat(date_format(str_to_date(#{learningDate}, '%Y%m%d'),'%Y-%m-%d '), '%')
        </if>
          and c.textbook_id = #{textBkId}
          and c.cla_id = #{claId}
        <choose>
            <when test='searchChtCn != null and searchChtCn != ""'>
          and b.ai_tut_cht_cn like concat('%', #{searchChtCn}, '%')
            </when>
            <otherwise>
          and b.ai_tut_cht_cn > ''
            </otherwise>
        </choose>
    </select>

    <!-- [학생] 학습관리 > AI튜터 / 자기주도학습 AI튜터챗봇 채팅 list -->
    <select id="selectSlfStdAitutorList" parameterType="map" resultType="map">
        /* StntDsbdMapper.selectSlfStdAitutorList */
        select b1.id as resultId
             , b1.module_id as articleId
             , b1.sub_id as subId
             , b1.ai_tut_cht_cn as aiTutChtCn
             , date_format(b1.reg_dt, '%Y%m%d') as stdDt
             , concat('스스로학습 > ', a1.std_nm) as stdNm
        from  aidt_lms.slf_std_info a1
            inner join aidt_lms.slf_std_result_info b1 on a1.id = b1.std_id
        where a1.stdt_id = #{userId}
          and a1.ed_at = 'Y'
          and a1.textbk_id = #{textBkId}
          and a1.cla_id = #{claId}
          and b1.ai_tut_use_at = 'Y'
        <if test='stdId != null and stdId != ""'>
            and a1.id = #{stdId}
        </if>
        <choose>
            <when test='searchChtCn != null and searchChtCn != ""'>
          and b1.ai_tut_cht_cn like concat('%', #{searchChtCn}, '%')
            </when>
            <otherwise>
          and b1.ai_tut_cht_cn > ''
            </otherwise>
        </choose>
        <if test='learningDate != null and learningDate != ""'>
          and b1.reg_dt like concat(date_format(str_to_date(#{learningDate}, '%Y%m%d'),'%Y-%m-%d '), '%')
        </if>
        order by <if test='stdId != null and stdId != ""'>b1.module_num, </if>b1.reg_dt
    </select>

    <!-- [학생] 학습관리 > 나의 학습공간 > 학습 내역 / 영어 자기주도학습 AI튜터학습 학습내용 list -->
    <select id="selectSlfStdAitutorLrnList" parameterType="map" resultType="map">
        /* StntDsbdMapper.selectSlfStdAitutorLrnList */
        select b1.id as resultId
             , case when t.brand_id = 1 then concat(a1.unit_num, '단원')
                    when t.brand_id = 3 then concat('Lesson ', a1.unit_num)
            end as lessonNm
             , b1.ai_tut_result as aiTutResult
             , case when c1.id > 0 then ( select group_concat(a2_2.meta_id)
                                                  from   aidt_lcms.article_meta_map a2_2
                                                             inner join aidt_lms.slf_std_aitutor_lrng_info b2_2 on a2_2.meta_id = b2_2.en_lrng_div_id and b2_2.low_rank_udstd_rate_at = 'Y'
                                                  where  a2_2.article_id = c1.`id`
                                                    and  b2_2.std_id = a1.`id`
                                                    and a2_2.sub_id = 0
        )
                    when d1.id > 0 then 2157
                    when ifnull(c1.id, 0) = 0 and ifnull(d1.id, 0) = 0 then
                        (case when b1.ai_tut_cht_cn like '%speaking-subject%' then 2153
                              when b1.ai_tut_cht_cn like '%writing-subject%' then 2154
                              else null end
                            )
                    else null
            end as enLrngDivIds
             , date_format(b1.reg_dt, '%Y%m%d') as stdDt
             , a1.std_nm as stdNm
        from  aidt_lms.slf_std_info a1
                  inner join aidt_lms.slf_std_result_info b1 on a1.id = b1.std_id
                  inner join aidt_lcms.textbook t on t.id = a1.textbk_id
                  left outer join aidt_lcms.article c1 on b1.module_id = c1.id
                  left outer join aidt_lcms.libtext d1 on b1.libtext_id = d1.id
        where 1=1
          and a1.textbk_id = #{textBkId}
          and a1.cla_id = #{claId}
          and a1.stdt_id = #{userId}
          and a1.ed_at = 'Y'
          and b1.ai_tut_use_at = 'Y'
        <choose>
            <when test='searchChtCn != null and searchChtCn != ""'>
          and   b1.ai_tut_result like concat('%', #{searchChtCn}, '%')
            </when>
            <otherwise>
          and   b1.ai_tut_result > ''
            </otherwise>
        </choose>
          and b1.reg_dt like concat(date_format(str_to_date(#{learningDate}, '%Y%m%d'),'%Y-%m-%d '), '%')
        order by b1.reg_dt
    </select>

    <!-- [학생] 학급관리 > 홈 대시보드 > 단원정보 -->
    <select id="selectStntDsbdUnitInfo" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectStntDsbdUnitInfo */
        SELECT
            row_number() over (order by b.`code`) as unitNum
            , b.id as meta_id
            , b.parent_id
            , b.code
            , b.val AS unit_nm
            <choose>
                <when test="textbookId == 6981 or textbookId == 6982"> /* 초등영어는 lesson을 한글로 표시 */
                    /* Lesson n 은 n단원, 그 외는 문자열 그대로 */
                    ,CASE
                        WHEN b.val RLIKE '^Lesson [0-9]+' THEN
                            CONCAT(
                                REGEXP_SUBSTR(b.val, '[0-9]+'),
                                '단원'
                            )
                    ELSE
                        SUBSTRING_INDEX(b.val, '_', 1)
                    END AS unit
                </when>
                <when test="textbookId == 6979"> /* 중등 영어 2*/
                    , SUBSTRING_INDEX(b.val, '_', 1) AS unit
                </when>
                <otherwise>
                    , SUBSTRING_INDEX(b.val, ' ', 2) AS unit
                </otherwise>
            </choose>
            , b.depth - 1 as depth
        FROM    aidt_lcms.meta a
            inner join aidt_lcms.meta b on a.`code` = b.description and b.is_active = 1 and b.name = 'studyMap1'
            inner join aidt_lcms.meta c on c.id = b.parent_id and c.is_active = 1
            left join aidt_lcms.meta_extension d on b.meta_extension_id = d.meta_extension_id
        WHERE   a.is_active = 1
          and   a.parent_id = (select curriBook from aidt_lcms.textbook where id = #{textbookId})
        <if test="isProject == 0">
          and   ifnull(d.val1,'1') = '1' /* Project 노출여부가 1인 것만 노출 */
        </if>
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 영역별 그래프 AreaAchievementCount -->
    <select id="selectTchDsbdAreaAchievementCount" resultType="java.lang.Integer">
        /* StntSelfLrnMapper.selectTchDsbdAreaAchievementCount */
        select count(*)
        from    (
                select
                    a.usd_ach_id
                     , sum(a.usd_ach_scr) as usd_ach_scr
                     , sum(a.rflt_actv_cnt) as rflt_actv_cnt
                     , round((sum(a.usd_ach_scr)/sum(a.rflt_actv_cnt))*100,2) as usd_ach_scr_percent
                     , (case when round((sum(a.usd_ach_scr)/sum(a.rflt_actv_cnt))*100,2) >= 80 then 1 when round((sum(a.usd_ach_scr)/sum(a.rflt_actv_cnt))*100,2) > 50 then 2 else 3 end) as dfclt_lvl_ty
                from    aidt_lms.usd_ach_src2_info a
                where   a.usd_ach_id in ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')
                  and   a.cla_id      = #{claId}
                  and   a.stdt_id     = #{userId}
                  and   a.textbk_id   = #{textbookId}
                  <if test="unitNum > 0">
                  and   a.unit_num        = #{unitNum} /* 단원번호 */
                  </if>
                  and   a.std_dt      = (
                      select max(b.std_dt)
                      from aidt_lms.usd_ach_src2_info b
                      where   1=1
                        and b.usd_ach_id in ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')
                        and b.cla_id     = #{claId}
                        and b.textbk_id  = #{textbookId}
                        and b.stdt_id    = #{userId}
                        <if test="unitNum > 0">
                        and b.unit_num   = #{unitNum} /* 단원번호 */
                        </if>
                      )
                group by a.usd_ach_id, a.unit_num
        ) T
    </select>

    <!-- [학생] 학급관리 > 홈 대시보드 > 영역별 그래프 AreaAchievementCount -->
    <select id="selectTchDsbdAreaAchievementCountAll" resultType="java.lang.Integer">
        /* StntSelfLrnMapper.selectTchDsbdAreaAchievementCount */
        select count(*)
        from    (
        select
        usd_ach_id
        , sum(usd_ach_scr) as usd_ach_scr
        , sum(rflt_actv_cnt) as rflt_actv_cnt
        , round((sum(usd_ach_scr)/sum(rflt_actv_cnt))*100,2) as usd_ach_scr_percent
        , (case when round((sum(usd_ach_scr)/sum(rflt_actv_cnt))*100,2) >= 80 then 1 when round((sum(usd_ach_scr)/sum(rflt_actv_cnt))*100,2) > 50 then 2 else 3 end) as dfclt_lvl_ty
        from    aidt_lms.usd_ach_src2_info
        where   usd_ach_id in ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting', 'vocabulary', 'grammar', 'pronunciation')
        and   cla_id      = #{claId}
        and   stdt_id     = #{userId}
        and   textbk_id   = #{textbookId}
        <if test="unitNum > 0">
            and   unit_num        = #{unitNum} /* 단원번호 */
        </if>
        group by usd_ach_id,unit_num
        ) T
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 영역별 그래프 AreaAchievementList -->
    <select id="selectStntDsbdAreaAchievementList" resultType="camelHashMap">
        select	a.code, a.val as code_nm
              ,       ifnull(b.usd_ach_scr, 0) as usd_ach_scr
              ,       ifnull(b.rflt_actv_cnt, 0) as rflt_actv_cnt
              ,       ifnull(b.usd_ach_scr_percent, 0) as usd_ach_scr_percent
              ,       ifnull(b.dfclt_lvl_ty, 0) as dfclt_lvl_ty
              ,       ifnull((
                                 select   round((sum(c.usd_ach_scr)/sum(c.rflt_actv_cnt))*100,2) as usd_ach_scr
                                 from     aidt_lms.usd_ach_src2_info c
                                 where  c.usd_ach_id    = a.code
                                   and  c.cla_id        = #{claId}
                                   and  c.stdt_id       = #{userId}
                                   and  c.textbk_id     = #{textbookId}
                                   <if test="unitNum > 0">
                                   and  c.unit_num      = #{unitNum}
                                   </if>
                                   and  c.std_dt        = (
                                       select max(d.std_dt)
                                       from aidt_lms.usd_ach_src2_info d
                                       where  1=1
                                        and d.usd_ach_id = a.code
                                        and d.cla_id     = #{claId}
                                        and d.textbk_id  = #{textbookId}
                                        and d.stdt_id    = #{userId}
                                        <if test="unitNum > 0">
                                        and d.unit_num   = #{unitNum}
                                        </if>
                                       )
                                 group by c.usd_ach_id
                                 ), 0) as prev_usd_ach_scr_percent
        from    (
        select	id, code, val
        from	aidt_lcms.meta
        where	name = 'evaluationArea'
          and		brand_id = '3'
        ) a
            left join (
        -- 학습 이력 + 단원정보 포함
            select 	e.usd_ach_id, sum(e.usd_ach_scr) as usd_ach_scr, sum(e.rflt_actv_cnt) as rflt_actv_cnt
                 ,       round((sum(e.usd_ach_scr)/sum(e.rflt_actv_cnt))*100,2) as usd_ach_scr_percent
                 ,       (case when round((sum(e.usd_ach_scr)/sum(e.rflt_actv_cnt))*100,2) >= 70 then 1 when round((sum(e.usd_ach_scr)/sum(e.rflt_actv_cnt))*100,2) > 30 then 2 else 3 end) as dfclt_lvl_ty
            from    aidt_lms.usd_ach_src2_info e
            where   e.usd_ach_id in ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')
              and   e.cla_id      = #{claId}
              and   e.stdt_id     = #{userId}
              and   e.textbk_id   = #{textbookId}
              <if test="unitNum > 0">
              and   e.unit_num    = #{unitNum} /* 단원번호 */
              </if>
              and   e.std_dt      = (
                  select max(f.std_dt)
                  from aidt_lms.usd_ach_src2_info f
                  where   1=1
                    and f.usd_ach_id in ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')
                    and f.cla_id     = #{claId}
                    and f.textbk_id  = #{textbookId}
                    and f.stdt_id    = #{userId}
                    <if test="unitNum > 0">
                    and f.unit_num   = #{unitNum} /* 단원번호 */
                    </if>
                  )
            group by e.usd_ach_id
            ) b on a.code = b.usd_ach_id
        order by id
    </select>

    <!-- [학생] 학급관리 > 홈 대시보드 > 영역별 그래프 AreaAchievementList -->
    <select id="selectStntDsbdAreaAchievementListAll" resultType="camelHashMap">
        /* StntDsbdMapper.selectTchDsbdAreaAchievementListAll */
        select  a.code,
                    CASE
                    WHEN a.val = '어휘' THEN 'Vocabulary'
                    WHEN a.val = '문법' THEN 'Grammar'
                    WHEN a.val = '발음' THEN 'Pronunciation'
                    ELSE a.val
                    END as code_nm
             ,       ifnull(b.usd_ach_scr, 0) as usd_ach_scr
             ,       ifnull(b.rflt_actv_cnt, 0) as rflt_actv_cnt
             ,       ifnull(b.usd_ach_scr_percent, 0) as usd_ach_scr_percent
             ,       ifnull(b.dfclt_lvl_ty, 0) as dfclt_lvl_ty
             ,       ifnull(b.std_at, 'N') as std_at
        from (
                 select  id, code, val
                 from    aidt_lcms.meta
                 where 1=1
                   and name in ('evaluationArea','contentsItem','evaluationArea3')
                   and   brand_id = '3'
                    /* 초등영어 2,5,6  grammar 제외 */
                    <if test="textbookId == 6981 or textbookId == 6982">
                        and code != 'grammar' /*문장 사용 안함*/
                    </if>
                   and code != 'sentence' /*문장 사용 안함*/
             ) a
                 left join (
            /* 학습 이력 + 단원정보 포함 */
            select
                usd_ach_id
                 , sum(c.usd_ach_scr) as usd_ach_scr
                 , sum(c.rflt_actv_cnt) as rflt_actv_cnt
                 ,  case
                        when c.usd_ach_id in ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting') then round((sum(c.usd_ach_scr_percent) * 100 / count(c.stdt_id)), 2)
                        when c.usd_ach_id = 'pronunciation' then round(avg(c.usd_ach_scr_percent), 2)
                        else round((avg(c.usd_ach_scr_percent) * 100),2)
                end as usd_ach_scr_percent
                 ,	case
                          when c.usd_ach_id in ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting') then
                              case
                                  when round((sum(c.usd_ach_scr_percent) * 100 / count(c.stdt_id)), 2) >= 70 then 1
                                  when round((sum(c.usd_ach_scr_percent) * 100 / count(c.stdt_id)), 2) > 30 then 2
                                  else 3
                                  end
                /* 'vocabulary', 'grammar', 'pronunciation' */
                          when c.usd_ach_id in ('vocabulary', 'grammar', 'pronunciation') then
                              case
                                  when c.usd_ach_scr_percent >= 70 then 1
                                  when c.usd_ach_scr_percent > 30 then 2
                                  else 3
                                  end
                end as dfclt_lvl_ty
                 , c.std_at
            from    (
                        select
                            usd_ach_id
                             , sum(usd_ach_scr) as usd_ach_scr
                             , sum(rflt_actv_cnt) as rflt_actv_cnt
                             , sum(usd_ach_scr)/sum(rflt_actv_cnt) as usd_ach_scr_percent
                             , stdt_id
                             , std_at
                        from aidt_lms.usd_ach_src2_info
                        where   usd_ach_id in ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')
                          and   cla_id      = #{claId}
                          and   stdt_id     = #{userId}
                          and   textbk_id   = #{textbookId}
                        <if test="unitNum > 0">
                            and   unit_num    = #{unitNum} /* 단원번호 */
                        </if>
                            and   std_dt  = (
                                                select max(dt.std_dt)
                                                  from aidt_lms.usd_ach_src2_info dt
                                                 where  1=1
                                                   and   dt.cla_id          = #{claId}
                                                   and   dt.textbk_id       = #{textbookId}
                                              )

                        group by usd_ach_id,stdt_id

                        union all

                        select
                            b.usd_ach_id
                             , sum(b.usd_ach_scr) as usd_ach_scr
                             , sum(b.rflt_actv_cnt) as rflt_actv_cnt
                             , AVG(b.usd_ach_scr_percent) as usd_ach_scr_percen
                             , b.stdt_id
                             , b.std_at
                        from (
                                 select
                                     a.usd_ach_id
                                      , sum(a.usd_ach_scr) as usd_ach_scr
                                      , sum(a.rflt_actv_cnt) as rflt_actv_cnt
                                      , AVG(a.usd_ach_scr_percent) as usd_ach_scr_percent
                                      , a.iem_cd
                                      , a.iem_id
                                      , a.stdt_id
                                      , a.std_at
                                 from (
                                          select
                                              a.usd_ach_id
                                               , b.iem_id
                                               , b.iem_cd
                                               , sum(b.usd_ach_scr) as usd_ach_scr
                                               , sum(b.rflt_actv_cnt) as rflt_actv_cnt
                                               , sum(b.usd_ach_scr)/sum(b.rflt_actv_cnt) as usd_ach_scr_percent
                                               , a.stdt_id
                                               , a.std_at
                                          from aidt_lms.usd_ach_src2_info a
                                                   inner join  aidt_lms.usd_ach_src2_detail b
                                                               on a.id = b.usd_ach_src_id
                                          where 1=1
                                            and a.usd_ach_id in ('vocabulary', 'grammar', 'pronunciation')
                                            and a.cla_id      = #{claId}
                                            and a.stdt_id     = #{userId}
                                            and a.textbk_id   = #{textbookId}
                                            <if test="unitNum > 0">
                                                and a.unit_num    = #{unitNum} /* 단원번호 */
                                            </if>
                                            and   a.std_dt  = (
                                                                select max(dt.std_dt)
                                                                  from aidt_lms.usd_ach_src2_info dt
                                                                 where  1=1
                                                                   and   dt.cla_id          = #{claId}
                                                                   and   dt.textbk_id       = #{textbookId}
                                                               )
                                          group by a.usd_ach_id, a.stdt_id, b.iem_cd
                                      ) a
                                 group by a.usd_ach_id, a.iem_id
                             ) b
                        group by b.usd_ach_id
                    ) c
            group by c.usd_ach_id
        ) b on a.code = b.usd_ach_id
        order by  FIELD(code, 'listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting','vocabulary','grammar','pronunciation')
    </select>

    <!-- [학생] 학급관리 > 홈 대시보드 > 영역별 단원별 상세 -->
    <select id="selectTchDsbdAreaAchievementStudentList" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectTchDsbdAreaAchievementStudentList */
        WITH filtered_history AS (
            SELECT
                a.id,
                a.tab_id,
                a.cla_id,
                a.stdt_id,
                a.textbk_id,
                a.unit_num,
                a.meta_id,
                a.usd_tg_id AS trgt_id,
                a.usd_clsf_cd,
                a.std_at,
                a.usd_ach_scr,
                a.dfclt_lvl_ty,
                a.rflt_actv_cnt,
                a.std_dt,
                a.usd_ach_id
            FROM usd_ach_src2_info a
            WHERE a.usd_ach_id = #{param.code}
            AND a.cla_id = #{param.claId}
            AND a.stdt_id = #{param.userId}
            AND a.textbk_id = #{param.textbookId}
            <if test="param.unitNum > 0">
                AND a.unit_num = #{param.unitNum}
            </if>
            AND a.std_dt <![CDATA[<=]]> DATE_FORMAT(#{param.stdDtYmd}, '%Y%m%d')
        ),
        actual_study_dates AS (
            SELECT DISTINCT
                DATE_FORMAT(ed_dt, '%Y-%m-%d') AS ed_dt,
                (SELECT code FROM aidt_lcms.meta WHERE id = b.meta_id AND code = #{param.code}) AS code,
                trgt_id,
                tab_id
                <if test="param.metaId !=null and param.metaId != ''">
                        , unit_meta_id
                </if>
            FROM (
                    -- 학습자료
                    select
                        sdrd.eak_ed_dt AS ed_dt,
                        amm.meta_id,
                        amm2.meta_id AS unit_meta_id,
                        ti.crcul_id AS trgt_id,
                        ti.id AS tab_id
                    FROM aidt_lms.tab_info ti
                    INNER JOIN aidt_lms.std_dta_result_info sdri
                        ON ti.id = sdri.textbk_tab_id
                    INNER JOIN aidt_lms.std_dta_result_detail sdrd
                        ON sdri.id = sdrd.dta_result_id
                        AND sdrd.eak_at = 'Y'
                        AND sdrd.mrk_ty <![CDATA[<>]]> 3
                    INNER JOIN aidt_lcms.article_meta_map amm
                        ON amm.article_id = sdrd.dta_iem_id
                        AND amm.sub_id = sdrd.sub_id
                        AND amm.meta_name = 'evaluationArea'
                        AND amm.meta_id = (SELECT id FROM aidt_lcms.meta WHERE id = amm.meta_id AND code = #{param.code})
                    INNER JOIN aidt_lcms.article_meta_map amm2
                        ON amm2.article_id = sdrd.dta_iem_id
                        AND amm2.sub_id = sdrd.sub_id
                        AND amm2.meta_name = 'studyMap1'
                       <if test="param.metaId !=null and param.metaId != ''">
                           AND amm2.meta_id = #{param.metaId}
                       </if>
                    WHERE ti.cla_id = #{param.claId}
                    AND ti.textbk_id = #{param.textbookId}
                    AND sdri.mamoym_id = #{param.userId}
                    AND DATE_FORMAT(sdrd.eak_ed_dt, '%Y-%m-%d')  <![CDATA[<=]]>  STR_TO_DATE(#{param.stdDtYmd}, '%Y%m%d')

                    UNION

                    -- 평가
                    SELECT
                        ei.evl_cp_dt AS ed_dt,
                        amm.meta_id,
                        amm2.meta_id AS unit_meta_id,
                        ei.id AS trgt_id,
                        0 AS tab_id
                    FROM aidt_lms.evl_info ei
                    JOIN aidt_lms.evl_result_info eri
                        ON ei.id = eri.evl_id
                        AND eri.eak_stts_cd = 5
                        AND eri.mrk_cp_at = 'Y'
                        AND ei.rpt_othbc_at = 'Y'
                    JOIN aidt_lms.evl_result_detail erd
                        ON eri.id = erd.evl_result_id
                        AND erd.eak_at = 'Y'
                        AND erd.mrk_ty <![CDATA[<>]]> 3
                    INNER JOIN aidt_lcms.article_meta_map amm
                        ON amm.article_id = erd.evl_iem_id
                        AND amm.sub_id = erd.sub_id
                        AND amm.meta_name = 'evaluationArea'
                        AND amm.meta_id = (SELECT id FROM aidt_lcms.meta WHERE id = amm.meta_id AND code = #{param.code})
                    INNER JOIN aidt_lcms.article_meta_map amm2
                        ON amm2.article_id = erd.evl_iem_id
                        AND amm2.sub_id = erd.sub_id
                        AND amm2.meta_name = 'studyMap1'
                        <if test="param.metaId !=null and param.metaId != ''">
                            AND amm2.meta_id = #{param.metaId}
                        </if>
                    WHERE ei.cla_id = #{param.claId}
                    AND ei.textbook_id = #{param.textbookId}
                    AND eri.mamoym_id = #{param.userId}
                    AND DATE_FORMAT(erd.eak_ed_dt, '%Y-%m-%d')  <![CDATA[<=]]>  STR_TO_DATE(#{param.stdDtYmd}, '%Y%m%d')

                    UNION

                    -- 과제
                    SELECT
                        ti.task_prg_dt AS ed_dt,
                        amm.meta_id,
                        amm2.meta_id AS unit_meta_id,
                        ti.id AS trgt_id,
                        0 AS tab_id
                    FROM aidt_lms.task_info ti
                    JOIN aidt_lms.task_result_info tri
                        ON ti.id = tri.task_id
                        AND tri.subm_at = 'Y'
                        AND ti.rpt_othbc_at = 'Y'
                    JOIN aidt_lms.task_result_detail trd
                        ON tri.id = trd.task_result_id
                        AND trd.eak_at = 'Y'
                        AND trd.mrk_ty <![CDATA[<>]]> 3
                        AND trd.mrk_cp_at = 'Y'
                    INNER JOIN aidt_lcms.article_meta_map amm
                        ON amm.article_id = trd.task_iem_id
                        AND amm.sub_id = trd.sub_id
                        AND amm.meta_name = 'evaluationArea'
                        AND amm.meta_id = (SELECT id FROM aidt_lcms.meta WHERE id = amm.meta_id AND code = #{param.code})
                    INNER JOIN aidt_lcms.article_meta_map amm2
                        ON amm2.article_id = trd.task_iem_id
                        AND amm2.sub_id = trd.sub_id
                        AND amm2.meta_name = 'studyMap1'
                        <if test="param.metaId !=null and param.metaId != ''">
                            AND amm2.meta_id = #{param.metaId}
                        </if>
                    WHERE ti.cla_id = #{param.claId}
                    AND ti.textbk_id = #{param.textbookId}
                    AND tri.mamoym_id = #{param.userId}
                    AND DATE_FORMAT(trd.eak_ed_dt, '%Y-%m-%d')  <![CDATA[<=]]>  STR_TO_DATE(#{param.stdDtYmd}, '%Y%m%d')

                    UNION

                    -- 자기주도학습
                    SELECT
                        ssri.std_ed_dt AS ed_dt,
                        amm.meta_id,
                        amm2.meta_id AS unit_meta_id,
                        ssi.id AS trgt_id,
                        0 AS tab_id
                    FROM aidt_lms.slf_std_info ssi
                    JOIN aidt_lms.slf_std_result_info ssri
                        ON ssi.id = ssri.std_id
                        AND ssi.ed_at = 'Y'
                    INNER JOIN aidt_lcms.article_meta_map amm
                        ON amm.article_id = ssri.module_id
                        AND amm.sub_id = ssri.sub_id
                        AND amm.meta_name = 'evaluationArea'
                        AND amm.meta_id = (SELECT id FROM aidt_lcms.meta WHERE id = amm.meta_id AND code = #{param.code})
                    INNER JOIN aidt_lcms.article_meta_map amm2
                        ON amm2.article_id = ssri.module_id
                        AND amm2.sub_id = ssri.sub_id
                        AND amm2.meta_name = 'studyMap1'
                        <if test="param.metaId !=null and param.metaId != ''">
                            AND amm2.meta_id = #{param.metaId}
                        </if>
                    WHERE ssi.cla_id = #{param.claId}
                    AND ssi.textbk_id = #{param.textbookId}
                    AND ssi.stdt_id = #{param.userId}
                    AND DATE_FORMAT(ssri.std_ed_dt, '%Y-%m-%d')  <![CDATA[<=]]>  STR_TO_DATE(#{param.stdDtYmd}, '%Y%m%d')
            ) b
            WHERE ed_dt IS NOT NULL
        )
        SELECT
            COUNT(*) OVER () AS full_count,
            ROW_NUMBER() OVER (ORDER BY std_dt) AS row_no,
            std_dt,
            trgt_se_nm,
            trgt_nm,
            rp_othbc_at,
            trgt_id
            FROM (
                SELECT
                    asd.ed_dt AS std_dt,
                    aidt_lms.f_code_nm('trgt_se_cd', a.usd_clsf_cd) AS trgt_se_nm,
                    (
                        CASE
                        WHEN a.usd_clsf_cd = 1 THEN (
                                                    SELECT
                                                        IF(a.tab_id > 0,
                                                        CONCAT('[', (SELECT tab_nm FROM aidt_lms.tab_info WHERE id = a.tab_id), '] ', tc.`text`),
                                                        tc.`text`)
                                                    FROM aidt_lms.tc_curriculum tc
                                                    WHERE tc.textbk_id = #{param.textbookId}
                                                    AND tc.cla_id = #{param.claId}
                                                    AND tc.wrter_id = (SELECT user_id FROM aidt_lms.tc_cla_mb_info
                                                    WHERE stdt_id = #{param.userId}
                                                    AND cla_id = #{param.claId}
                                                    AND actvtn_at = 'Y')
                                                    AND tc.`key` = a.trgt_id
                                                    )
                        WHEN a.usd_clsf_cd = 2 THEN (SELECT task_nm FROM aidt_lms.task_info WHERE id = a.trgt_id)
                        WHEN a.usd_clsf_cd = 3 THEN (SELECT evl_nm FROM aidt_lms.evl_info WHERE id = a.trgt_id)
                        WHEN a.usd_clsf_cd = 4 THEN (SELECT std_nm FROM aidt_lms.slf_std_info WHERE id = a.trgt_id)
                        END
                    ) AS trgt_nm,
                    (
                        CASE
                            WHEN a.usd_clsf_cd = 1 THEN 'Y'
                            WHEN a.usd_clsf_cd = 2 THEN (SELECT IFNULL(rpt_othbc_at, 'N') FROM aidt_lms.task_info WHERE id = a.trgt_id)
                            WHEN a.usd_clsf_cd = 3 THEN (SELECT IFNULL(rpt_othbc_at, 'N') FROM aidt_lms.evl_info WHERE id = a.trgt_id)
                            ELSE 'Y'
                        END
                    ) AS rp_othbc_at,
                    a.trgt_id
                FROM actual_study_dates asd
                INNER JOIN filtered_history a
                    ON a.std_dt=asd.ed_dt
                           <if test="param.metaId != null and param.metaId != ''">
                                AND a.meta_id = asd.unit_meta_id
                           </if>
                    AND a.trgt_id = asd.trgt_id
                    AND a.tab_id = asd.tab_id
                    AND a.usd_ach_id = asd.code
                GROUP BY trgt_id, trgt_nm, std_dt
            ) grouped_data
        ORDER BY row_no DESC
        limit #{pageable.pageSize} offset #{pageable.offset}
    </select>

    <select id="selectTchDsbdAreaAchievementStudentList_back" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectTchDsbdAreaAchievementStudentList_back */
        select  count(*) over () as full_count, row_number() over (order by trgt_std_dt) as row_no
        /*,       date_format(std_dt, '%Y-%m-%d') as std_dt*/
        ,       trgt_std_dt as std_dt
        ,       aidt_lms.f_code_nm('trgt_se_cd', usd_clsf_cd) as trgt_se_nm
        ,       trgt_nm
        ,       rp_othbc_at
        ,       T.usd_tg_id as trgt_id
        from    (
                select  a.id, a.std_dt, a.usd_clsf_cd, a.usd_tg_id, a.meta_id, a.std_at, a.textbk_id, a.cla_id, a.stdt_id, a.usd_ach_scr, a.dfclt_lvl_ty, a.rflt_actv_cnt
                ,       (
                            /*case when a.usd_clsf_cd = 1 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.tc_curriculum tc where tc.textbk_id = a.textbk_id and tc.cla_id = a.cla_id and tc.`key` = a.usd_tg_id)*/
                    case when a.usd_clsf_cd = 1 then (select date_format(eak_st_dt, '%Y-%m-%d')
                                                      from std_dta_result_info
                                                      where 1 = 1
                                                        and mamoym_id =  a.stdt_id
                                                        and textbk_tab_id in (select id
                                                                              from tab_info
                                                                              where cla_id = a.cla_id and textbk_id = a.textbk_id and crcul_id = a.usd_tg_id and tab_nm = '교과서' and setCategory = 31))
                         when a.usd_clsf_cd = 2 then (select date_format(task_prg_dt, '%Y-%m-%d') from aidt_lms.task_info where id = a.usd_tg_id)
                         when a.usd_clsf_cd = 3 then (select date_format(evl_prg_dt, '%Y-%m-%d')  from aidt_lms.evl_info where id = a.usd_tg_id)
                         when a.usd_clsf_cd = 4 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.slf_std_info where id = a.usd_tg_id)
                     else ''
                            end
                    ) as trgt_std_dt
            ,       (
                        case when a.usd_clsf_cd = 1 then (select
                                                                 if(a.tab_id > 0,concat('[', (select tab_nm from aidt_lms.tab_info where id = a.tab_id), '] ',tc.`text`), tc.`text`)
                                                            from aidt_lms.tc_curriculum tc
                                                           where 1=1
                                                             and tc.textbk_id = #{param.textbookId}
                                                             and tc.cla_id = #{param.claId}
                                                             and tc.wrter_id = (select user_id from aidt_lms.tc_cla_mb_info where stdt_id = #{param.userId} and cla_id = #{param.claId} and actvtn_at = 'Y')
                                                             and tc.`key`= a.usd_tg_id
                                                          )
                             when a.usd_clsf_cd = 2 then (select task_nm from aidt_lms.task_info where id = a.usd_tg_id)
                             when a.usd_clsf_cd = 3 then (select evl_nm from aidt_lms.evl_info where id = a.usd_tg_id)
                             when a.usd_clsf_cd = 4 then (select std_nm from aidt_lms.slf_std_info where id = a.usd_tg_id)
                             else ''
                        end
                    ) as trgt_nm
            ,       (
                        case when a.usd_clsf_cd = 1 then 'Y'
                             when a.usd_clsf_cd = 2 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.task_info where id = a.usd_tg_id)
                             when a.usd_clsf_cd = 3 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.evl_info where id = a.usd_tg_id)
                             when a.usd_clsf_cd = 4 then 'Y'
                             else ''
                        end
                    ) as rp_othbc_at
                from    aidt_lms.usd_ach_src2_info a
                where   a.usd_ach_id  = #{param.code}
                  and   a.cla_id      = #{param.claId}
                  and   a.stdt_id     = #{param.userId}
                  and   a.textbk_id   = #{param.textbookId}
                  <if test="param.unitNum > 0">
                    and a.unit_num = #{param.unitNum}
                  </if>
                  <choose>
                        <when test="param.stdDtYmd != null and param.stdDtYmd != ''">
                            and a.std_dt = DATE_FORMAT(#{param.stdDtYmd}, '%Y%m%d')
                        </when>

                        <otherwise>
                            and a.std_dt = (
                                select max(b.std_dt)
                                from aidt_lms.usd_ach_src2_info b
                                where 1=1
                                and b.usd_ach_id = #{param.code}
                                and b.cla_id     = #{param.claId}
                                and b.textbk_id  = #{param.textbookId}
                                and b.stdt_id    = #{param.userId}
                                <if test="param.unitNum > 0">
                                and b.unit_num = #{param.unitNum}
                                </if>
                            )
                        </otherwise>
                  </choose>

                union all
                /* AI 맞춤학습 */
                select  a.id, a.std_dt, a.usd_clsf_cd, a.usd_tg_id, a.meta_id, a.std_at, a.textbk_id, a.cla_id, a.stdt_id, a.usd_ach_scr, a.dfclt_lvl_ty, a.rflt_actv_cnt
                     ,       (
                    case when a.usd_clsf_cd = 1 then (
                                                        select max(date_format(resultInfo.eak_st_dt, '%Y-%m-%d'))
                                                        from std_dta_info dtaInfo
                                                                 inner join std_dta_result_info resultInfo
                                                                            on resultInfo.dta_id = dtaInfo.id
                                                                                and dtaInfo.eam_mth = 5
                                                                                and dtaInfo.cla_id = a.cla_id
                                                                                and resultInfo.mamoym_id = a.stdt_id
                                                                                and dtaInfo.textbk_id = a.textbk_id
                                                                                and dtaInfo.crcul_id = a.usd_tg_id
                                                    )
                        end
                    ) as trgt_std_dt
                     ,(
                         case when a.usd_clsf_cd = 1 then (
                                                           select
                                                                 if(a.tab_id > 0,concat('[', (select tab_nm from aidt_lms.tab_info where id = a.tab_id), '] ',tc.`text`), tc.`text`)
                                                            from aidt_lms.tc_curriculum tc
                                                           where 1=1
                                                             and tc.textbk_id = #{param.textbookId}
                                                             and tc.cla_id = #{param.claId}
                                                             and tc.wrter_id = (select user_id from aidt_lms.tc_cla_mb_info where stdt_id = #{param.userId} and cla_id = #{param.claId} and actvtn_at = 'Y')
                                                             and tc.`key`= a.usd_tg_id
                                                           )
                             end
                         ) as trgt_nm
                     ,  (
                    case when a.usd_clsf_cd = 1 then 'Y'
                        end
                    ) as rp_othbc_at
                from    aidt_lms.usd_ach_src2_info a
                where   a.usd_ach_id  = #{param.code}
                  and   a.cla_id      = #{param.claId}
                  and   a.stdt_id     = #{param.userId}
                  and   a.textbk_id   = #{param.textbookId}
                  <if test="param.unitNum > 0">
                  and   a.unit_num    = #{param.unitNum}
                  </if>
                  and   a.usd_clsf_cd = '1'
                  and   exists( select unit_num
                                from (select row_number() over (order by b.parent_id, b.`code`) as unit_num, b.id
                                      from aidt_lcms.meta a
                                               inner join aidt_lcms.meta b on a.`code` = b.description and b.is_active = 1 and b.name = 'studyMap1'
                                               inner join aidt_lcms.meta c on c.id = b.parent_id and c.is_active = 1
                                      where 1 = 1
                                        and a.parent_id = (select curriBook from aidt_lcms.textbook where id = #{param.textbookId})
                                        and a.is_active = 1) s
                                where id = (select map.meta_id
                                            from aidt_lms.std_dta_result_info stdInfo
                                                     inner join tab_info tabInfo on stdInfo.textbk_tab_id = tabInfo.id
                                                     inner join aidt_lms.std_dta_info dtaInfo on stdInfo.dta_id = dtaInfo.id and eam_mth = 5
                                                and tabInfo.cla_id = #{param.claId}
                                                and tabInfo.textbk_id = #{param.textbookId}
                                                and tabInfo.crcul_id = a.usd_tg_id
                                                     inner join std_dta_result_detail detailInfo on stdInfo.id = detailInfo.dta_result_id
                                                     inner join aidt_lcms.article_meta_map map
                                                                on map.meta_name = 'studyMap1' and map.article_id = detailInfo.dta_iem_id
                                                limit 1)
                                  <if test="param.unitNum > 0">
                                  and unit_num = #{param.unitNum}
                                  </if>
                                )
                    <choose>
                        <when test="param.stdDtYmd != null and param.stdDtYmd != ''">
                            and a.std_dt = DATE_FORMAT(#{param.stdDtYmd}, '%Y%m%d')
                        </when>

                        <otherwise>
                            and a.std_dt = (
                                        select max(b.std_dt)
                                        from aidt_lms.usd_ach_src2_info b
                                        where 1=1
                                        and b.usd_ach_id = #{param.code}
                                        and b.cla_id     = #{param.claId}
                                        and b.textbk_id  = #{param.textbookId}
                                        and b.stdt_id    = #{param.userId}
                                        <if test="param.unitNum > 0">
                                        and b.unit_num   = #{param.unitNum}
                                        </if>
                            )
                        </otherwise>
                    </choose>

                ) T
        where  1=1
        group by trgt_id,trgt_nm
        order by row_no desc
        limit #{pageable.pageSize} offset #{pageable.offset}
    </select>

    <!-- [학생] 학급관리 > 홈 대시보드 > 영역별 단원별 상세 daily  - 사용 안함  -->
    <select id="selectTchDsbdAreaAchievementStudentList_daily" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectTchDsbdAreaAchievementStudentList_daily - 사용 안함 */
        select  count(*) over () as full_count, row_number() over (order by trgt_std_dt) as row_no
        /*,       date_format(std_dt, '%Y-%m-%d') as std_dt*/
        ,       trgt_std_dt as std_dt
        ,       aidt_lms.f_code_nm('trgt_se_cd', usd_clsf_cd) as trgt_se_nm
        ,       trgt_nm
        ,       rp_othbc_at
        ,       T.usd_tg_id as trgt_id
        from    (
                select  a.id, a.std_dt, a.usd_clsf_cd, a.usd_tg_id, a.meta_id, a.std_at, a.textbk_id, a.cla_id, a.stdt_id, a.usd_ach_scr, a.dfclt_lvl_ty, a.rflt_actv_cnt
                ,       (
                            /*case when a.usd_clsf_cd = 1 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.tc_curriculum tc where tc.textbk_id = a.textbk_id and tc.cla_id = a.cla_id and tc.`key` = a.usd_tg_id)*/
                    case when a.usd_clsf_cd = 1 then (select date_format(eak_st_dt, '%Y-%m-%d')
                                                      from std_dta_result_info
                                                      where 1 = 1
                                                        and mamoym_id =  a.stdt_id
                                                        and textbk_tab_id in (select id
                                                                              from tab_info
                                                                              where cla_id = a.cla_id and textbk_id = a.textbk_id and crcul_id = a.usd_tg_id and tab_nm = '교과서' and setCategory = 31))
                         when a.usd_clsf_cd = 2 then (select date_format(task_prg_dt, '%Y-%m-%d') from aidt_lms.task_info where id = a.usd_tg_id)
                         when a.usd_clsf_cd = 3 then (select date_format(evl_prg_dt, '%Y-%m-%d')  from aidt_lms.evl_info where id = a.usd_tg_id)
                         when a.usd_clsf_cd = 4 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.slf_std_info where id = a.usd_tg_id)
                     else ''
                            end
                    ) as trgt_std_dt
            ,       (
                        case when a.usd_clsf_cd = 1 then (select
                                                                 if(a.tab_id > 0,concat('[', (select tab_nm from aidt_lms.tab_info where id = a.tab_id), '] ',tc.`text`), tc.`text`)
                                                            from aidt_lms.tc_curriculum tc
                                                           where 1=1
                                                             and tc.textbk_id = #{param.textbookId}
                                                             and tc.cla_id = #{param.claId}
                                                             and tc.wrter_id = (select user_id from aidt_lms.tc_cla_mb_info where stdt_id = #{param.userId} and cla_id = #{param.claId} and actvtn_at = 'Y')
                                                             and tc.`key`= a.usd_tg_id
                                                          )
                             when a.usd_clsf_cd = 2 then (select task_nm from aidt_lms.task_info where id = a.usd_tg_id)
                             when a.usd_clsf_cd = 3 then (select evl_nm from aidt_lms.evl_info where id = a.usd_tg_id)
                             when a.usd_clsf_cd = 4 then (select std_nm from aidt_lms.slf_std_info where id = a.usd_tg_id)
                             else ''
                        end
                    ) as trgt_nm
            ,       (
                        case when a.usd_clsf_cd = 1 then 'Y'
                             when a.usd_clsf_cd = 2 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.task_info where id = a.usd_tg_id)
                             when a.usd_clsf_cd = 3 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.evl_info where id = a.usd_tg_id)
                             when a.usd_clsf_cd = 4 then 'Y'
                             else ''
                        end
                    ) as rp_othbc_at
                from    aidt_lms.usd_ach_src2_info_daily a
                where   a.usd_ach_id  = #{param.code}
                  and   a.cla_id      = #{param.claId}
                  and   a.stdt_id     = #{param.userId}
                  and   a.textbk_id   = #{param.textbookId}
                  <if test="param.unitNum > 0">
                    and a.unit_num = #{param.unitNum}
                  </if>
                  <choose>
                        <when test="param.stdDtYmd != null and param.stdDtYmd != ''">
                            and a.std_dt = DATE_FORMAT(#{param.stdDtYmd}, '%Y%m%d')
                        </when>
                  </choose>
                union all
                /* AI 맞춤학습 */
                select  a.id, a.std_dt, a.usd_clsf_cd, a.usd_tg_id, a.meta_id, a.std_at, a.textbk_id, a.cla_id, a.stdt_id, a.usd_ach_scr, a.dfclt_lvl_ty, a.rflt_actv_cnt
                     ,       (
                    case when a.usd_clsf_cd = 1 then (
                                                        select max(date_format(resultInfo.eak_st_dt, '%Y-%m-%d'))
                                                        from std_dta_info dtaInfo
                                                                 inner join std_dta_result_info resultInfo
                                                                            on resultInfo.dta_id = dtaInfo.id
                                                                                and dtaInfo.eam_mth = 5
                                                                                and dtaInfo.cla_id = a.cla_id
                                                                                and resultInfo.mamoym_id = a.stdt_id
                                                                                and dtaInfo.textbk_id = a.textbk_id
                                                                                and dtaInfo.crcul_id = a.usd_tg_id
                                                    )
                        end
                    ) as trgt_std_dt
                     ,(
                         case when a.usd_clsf_cd = 1 then (
                                                           select
                                                                 if(a.tab_id > 0,concat('[', (select tab_nm from aidt_lms.tab_info where id = a.tab_id), '] ',tc.`text`), tc.`text`)
                                                            from aidt_lms.tc_curriculum tc
                                                           where 1=1
                                                             and tc.textbk_id = #{param.textbookId}
                                                             and tc.cla_id = #{param.claId}
                                                             and tc.wrter_id = (select user_id from aidt_lms.tc_cla_mb_info where stdt_id = #{param.userId} and cla_id = #{param.claId} and actvtn_at = 'Y')
                                                             and tc.`key`= a.usd_tg_id
                                                           )
                             end
                         ) as trgt_nm
                     ,  (
                    case when a.usd_clsf_cd = 1 then 'Y'
                        end
                    ) as rp_othbc_at
                from    aidt_lms.usd_ach_src2_info_daily a
                where   a.usd_ach_id  = #{param.code}
                  and   a.cla_id      = #{param.claId}
                  and   a.stdt_id     = #{param.userId}
                  and   a.textbk_id   = #{param.textbookId}
                  <if test="param.unitNum > 0">
                  and   a.unit_num    = #{param.unitNum}
                  </if>
                  and   a.usd_clsf_cd = '1'
                  and   exists( select unit_num
                                from (select row_number() over (order by b.parent_id, b.`code`) as unit_num, b.id
                                      from aidt_lcms.meta a
                                               inner join aidt_lcms.meta b on a.`code` = b.description and b.is_active = 1 and b.name = 'studyMap1'
                                               inner join aidt_lcms.meta c on c.id = b.parent_id and c.is_active = 1
                                      where 1 = 1
                                        and a.parent_id = (select curriBook from aidt_lcms.textbook where id = #{param.textbookId})
                                        and a.is_active = 1) s
                                where id = (select map.meta_id
                                            from aidt_lms.std_dta_result_info stdInfo
                                                     inner join tab_info tabInfo on stdInfo.textbk_tab_id = tabInfo.id
                                                     inner join aidt_lms.std_dta_info dtaInfo on stdInfo.dta_id = dtaInfo.id and eam_mth = 5
                                                and tabInfo.cla_id = #{param.claId}
                                                and tabInfo.textbk_id = #{param.textbookId}
                                                and tabInfo.crcul_id = a.usd_tg_id
                                                     inner join std_dta_result_detail detailInfo on stdInfo.id = detailInfo.dta_result_id
                                                     inner join aidt_lcms.article_meta_map map
                                                                on map.meta_name = 'studyMap1' and map.article_id = detailInfo.dta_iem_id
                                                limit 1)
                                  <if test="param.unitNum > 0">
                                  and unit_num = #{param.unitNum}
                                  </if>
                                )
                    <choose>
                        <when test="param.stdDtYmd != null and param.stdDtYmd != ''">
                            and a.std_dt = DATE_FORMAT(#{param.stdDtYmd}, '%Y%m%d')
                        </when>
                    </choose>

                ) T
        where  1=1
        order by row_no desc
        limit #{pageable.pageSize} offset #{pageable.offset}
    </select>

    <!-- [학생] 학급관리 > 홈 대시보드 > 단어/문법/발음 > Vocabulary 그래프 VocabularyCount -->
    <select id="selectStntDsbdStatusVocabularyCount" resultType="java.lang.Integer">
        /* StntSelfLrnMapper.selectStntDsbdStatusVocabularyCount */
        select  count(*)
        from    aidt_lms.usd_ach_src2_info a
        where   a.usd_ach_id      = 'vocabulary'
          and   a.cla_id          = #{claId} /* 클래스 아이디 */
          and   a.stdt_id         = #{userId}
          and   a.textbk_id       = #{textbookId}
          <if test="unitNum > 0">
          and   a.unit_num        = #{unitNum} /* 단원번호 */
          </if>
          and   a.std_dt          = (
              select max(b.std_dt)
              from aidt_lms.usd_ach_src2_info b
              where   1=1
                and b.usd_ach_id = 'vocabulary'
                and b.cla_id     = #{claId}
                and b.textbk_id  = #{textbookId}
                and b.stdt_id    = #{userId}
                <if test="unitNum > 0">
                and b.unit_num   = #{unitNum} /* 단원번호 */
                </if>
        )
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 단어/문법/발음 > Vocabulary 그래프 VocabularyList -->
    <select id="selectStntDsbdStatusVocabularyList" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectStntDsbdStatusVocabularyList */
        with usd_ach_src2_data as (
            select  a.usd_ach_id
            ,       b.iem_id
            ,       b.iem_cd
            ,       sum(b.usd_ach_scr) as usd_ach_scr
            ,       sum(b.rflt_actv_cnt) as rflt_actv_cnt
            ,       sum(b.usd_ach_scr) / sum(b.rflt_actv_cnt) as total_usd_src
            from aidt_lms.usd_ach_src2_info a
                inner join aidt_lms.usd_ach_src2_detail b
                    on a.id = b.usd_ach_src_id
            where   a.usd_ach_id    = 'vocabulary'
              and   a.cla_id        = #{param.claId} /* 클래스 아이디 */
              and   a.stdt_id       = #{param.userId}
              and   a.textbk_id     = #{param.textbookId}
              <if test="param.unitNum > 0">
              and   a.unit_num      = #{param.unitNum} /* 단원번호 */
              </if>
              and   a.std_dt        = (
                  select max(c.std_dt)
                  from aidt_lms.usd_ach_src2_info c
                  where   1=1
                    and c.usd_ach_id = 'vocabulary'
                    and c.cla_id     = #{param.claId}
                    and c.textbk_id  = #{param.textbookId}
                    and c.stdt_id    = #{param.userId}
                    <if test="param.unitNum > 0">
                    and c.unit_num   = #{param.unitNum} /* 단원번호 */
                    </if>
                  )
            group by b.iem_id
        )

        select  count(*) over () as full_count, row_number() over() as row_Num
        ,       usd_ach_id
        ,       round(T.usd_ach_scr/T.rflt_actv_cnt,2) as total_usd_src_temp
        /*,       (select round(avg(total_usd_src), 2) * 100 from usd_ach_src2_data) as total_usd_src        정답률 총 평균 */
        ,       (select round(sum(usd_ach_scr) / sum(rflt_actv_cnt), 2)*100 from usd_ach_src2_data) as total_usd_src       /* 정답률 총 평균 */
        ,       (select (case when ROUND(AVG(total_usd_src), 2) * 100 >= 70 then 1 when ROUND(AVG(total_usd_src), 2) * 100 > 30 then 2 else 3 end) from usd_ach_src2_data ) as total_lvl_ty
        ,       iem_id, iem_cd, usd_ach_scr, rflt_actv_cnt
        ,       round((usd_ach_scr/rflt_actv_cnt)*100,2) as usd_ach_scr_percent
        ,       (case when round((usd_ach_scr/rflt_actv_cnt)*100,2) >= 70 then 1 when round((usd_ach_scr/rflt_actv_cnt)*100,2) > 30 then 2 else 3 end) as dfclt_lvl_ty
        from    usd_ach_src2_data T
        <if test="param.sortGbCd != null and param.sortGbCd != ''">
            <choose>
                <when test="param.sortGbCd == 'A1'">
                    order by iem_cd asc
                </when>
                <when test="param.sortGbCd == 'A2'">
                    order by iem_cd desc
                </when>
                <when test="param.sortGbCd == 'B1'">
                    order by round((usd_ach_scr/rflt_actv_cnt)*100,2) asc
                </when>
                <when test="param.sortGbCd == 'B2'">
                    order by round((usd_ach_scr/rflt_actv_cnt)*100,2) desc
                </when>
                <otherwise>
                    order by round((usd_ach_scr/rflt_actv_cnt)*100,2) asc
                </otherwise>
            </choose>
        </if>
        limit #{pageable.pageSize} offset #{pageable.offset}
    </select>

    <!-- [학생] 학급관리 > 홈 대시보드 > 단어/문법/발음 > Vocabulary 단원별 상세 -->
    <select id="selectTchDsbdVocabularyStudentList" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectTchDsbdVocabularyStudentList */
        select  count(*) over () as full_count, row_number() over (order by trgt_std_dt) as row_no
        ,       trgt_std_dt as std_dt
        ,       aidt_lms.f_code_nm('trgt_se_cd', usd_clsf_cd) as trgt_se_nm
        ,       trgt_nm
        ,       rp_othbc_at
        ,       T.usd_tg_id as trgt_id
        from    (

                with stdData as (select a.tab_id
                                      , a.cla_id
                                      , a.stdt_id
                                      , a.textbk_id
                                      , a.unit_num
                                      , a.meta_id
                                      , a.usd_tg_id
                                      , a.usd_clsf_cd
                                      , a.std_at
                                      , substring_index(article, '-', 1) collate utf8mb4_general_ci  AS articleId
                                      , substring_index(article, '-', -1) collate utf8mb4_general_ci AS subId
                                      , a.usd_ach_scr
                                      , a.dfclt_lvl_ty
                                      , a.rflt_actv_cnt
                                   from usd_ach_src2_info a
                                      , json_table(
                                           concat('["', replace(article_list, ',', '","'), '"]'),
                                           '$[*]' columns (article varchar(255) path '$')
                                        ) as jt,
                                        aidt_lms.usd_ach_src2_detail b
                                  where a.usd_ach_id = 'vocabulary'
                                    and a.cla_id     = #{param.claId}
                                    and a.stdt_id    = #{param.userId}
                                    and a.textbk_id  = #{param.textbookId}
                                    and b.iem_id = #{param.iemId}
                                    and a.id = b.usd_ach_src_id
                                    <if test="param.unitNum > 0">
                                        and a.unit_num = #{param.unitNum}
                                    </if>
                                    <choose>
                                    <when test="param.stdDtYmd != null and param.stdDtYmd != ''">
                                        and a.std_dt = DATE_FORMAT(#{param.stdDtYmd}, '%Y%m%d')
                                    </when>
                                    <otherwise>
                                        and a.std_dt = (
                                            select max(b.std_dt)
                                            from aidt_lms.usd_ach_src2_info b
                                            where 1=1
                                            and b.usd_ach_id = 'vocabulary'
                                            and b.cla_id     = #{param.claId}
                                            and b.textbk_id  = #{param.textbookId}
                                            and b.stdt_id    = #{param.userId}
                                            <if test="param.unitNum > 0">
                                            and b.unit_num = #{param.unitNum}
                                            </if>
                                        )
                                    </otherwise>
                              </choose>
                                    and a.usd_clsf_cd = '1'
                                    )
              select r.dta_result_id                      as id
                   , r.eak_st_dt
                   , s.usd_clsf_cd
                   , s.usd_tg_id
                   , s.meta_id
                   , s.std_at
                   , s.textbk_id
                   , s.cla_id
                   , s.stdt_id
                   , s.usd_ach_scr
                   , s.dfclt_lvl_ty
                   , s.rflt_actv_cnt
                   , date_format(r.eak_ed_dt, '%Y-%m-%d') as trgt_std_dt
                   , (select if(s.tab_id > 0,
                                concat('[', (select tab_nm from aidt_lms.tab_info where id = s.tab_id), '] ', tc.`text`),
                                tc.`text`)
                        from aidt_lms.tc_curriculum tc
                       where 1 = 1
                         and tc.textbk_id = s.textbk_id
                         and tc.cla_id = s.cla_id
                         and tc.wrter_id =
                             (select user_id from aidt_lms.tc_cla_mb_info where stdt_id = s.stdt_id and cla_id = s.cla_id and actvtn_at = 'Y')
                         and tc.`key` = s.usd_tg_id)      as trgt_nm
                   , 'Y'                                  as rp_othbc_at

                from aidt_lms.std_dta_result_detail r
                         join stdData s
                              on r.dta_iem_id = s.articleid and r.sub_id = s.subid
               where r.dta_result_id =
                     (select id from aidt_lms.std_dta_result_info where textbk_tab_id = s.tab_id and mamoym_id = s.stdt_id)

               union all

                select  b.id, b.std_dt, usd_clsf_cd, usd_tg_id, meta_id, std_at, textbk_id, cla_id, stdt_id, b.usd_ach_scr, b.dfclt_lvl_ty, b.rflt_actv_cnt
                ,       (
                            case when a.usd_clsf_cd = 2 then (select date_format(task_prg_dt, '%Y-%m-%d') from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select date_format(evl_prg_dt, '%Y-%m-%d')  from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.slf_std_info where id = a.usd_tg_id)
                                 else ''
                            end
                        ) as trgt_std_dt
                ,       (
                            case when a.usd_clsf_cd = 2 then (select task_nm from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select evl_nm from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then (select std_nm from aidt_lms.slf_std_info where id = a.usd_tg_id)
                                 else ''
                            end
                        ) as trgt_nm
                ,       (
                            case when a.usd_clsf_cd = 2 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then 'Y'
                                 else ''
                            end
                        ) as rp_othbc_at
                from    aidt_lms.usd_ach_src2_info a
                    inner join aidt_lms.usd_ach_src2_detail b
                        on a.id = b.usd_ach_src_id
                               and b.iem_id = #{param.iemId}
                where   a.usd_ach_id    = 'vocabulary'
                  and   a.cla_id        = #{param.claId} /* 클래스 아이디 */
                  and   a.stdt_id       = #{param.userId}
                  and   a.textbk_id     = #{param.textbookId}
                  <if test="param.unitNum > 0">
                  and   a.unit_num      = #{param.unitNum} /* 단원번호 */
                  </if>
                  and   a.std_dt        = (
                            select max(c.std_dt)
                            from aidt_lms.usd_ach_src2_info c
                            where   1=1
                            and c.usd_ach_id = 'vocabulary'
                            and c.cla_id     = #{param.claId}
                            and c.textbk_id  = #{param.textbookId}
                            and c.stdt_id    = #{param.userId}
                            <if test="param.unitNum > 0">
                            and c.unit_num      = #{param.unitNum} /* 단원번호 */
                            </if>
                      )
                  and a.usd_clsf_cd != '1'
                ) T
        group by trgt_id, trgt_nm, trgt_std_dt
        order by row_no desc
        limit #{pageable.pageSize} offset #{pageable.offset}
    </select>

    <select id="selectTchDsbdVocabularyStudentList_back" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectTchDsbdVocabularyStudentList */
        select  count(*) over () as full_count, row_number() over (order by trgt_std_dt) as row_no
        ,       trgt_std_dt as std_dt
        ,       aidt_lms.f_code_nm('trgt_se_cd', usd_clsf_cd) as trgt_se_nm
        ,       trgt_nm
        ,       rp_othbc_at
        ,       T.usd_tg_id as trgt_id
        from    (
                select  b.id, b.std_dt, usd_clsf_cd, usd_tg_id, meta_id, std_at, textbk_id, cla_id, stdt_id, b.usd_ach_scr, b.dfclt_lvl_ty, b.rflt_actv_cnt
                ,       (
                            /*case when a.usd_clsf_cd = 1 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.tc_curriculum tc where tc.textbk_id = a.textbk_id and tc.cla_id = a.cla_id and tc.`key` = a.usd_tg_id)*/
                            case when a.usd_clsf_cd = 1 then (
                                                                select
                                                                    date_format(eak_st_dt, '%Y-%m-%d')
                                                                from std_dta_result_info
                                                                where 1 = 1
                                                                  and mamoym_id =  a.stdt_id
                                                                  and textbk_tab_id in (
                                                                                        select id
                                                                                        from tab_info
                                                                                        where cla_id = a.cla_id and textbk_id = a.textbk_id and crcul_id = a.usd_tg_id
                                                                                    )
                                                                limit 1
                                                            )
                                 when a.usd_clsf_cd = 2 then (select date_format(task_prg_dt, '%Y-%m-%d') from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select date_format(evl_prg_dt, '%Y-%m-%d')  from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.slf_std_info where id = a.usd_tg_id)
                                 else ''
                            end
                        ) as trgt_std_dt
                ,       (
                            case when a.usd_clsf_cd = 1 then (
                                                                select
                                                                    if(a.tab_id > 0,concat('[', (select tab_nm from aidt_lms.tab_info where id = a.tab_id), '] ',tc.`text`), tc.`text`)
                                                                from aidt_lms.tc_curriculum tc
                                                                where 1=1
                                                                 and tc.textbk_id = #{param.textbookId}
                                                                 and tc.cla_id = #{param.claId}
                                                                 and tc.wrter_id = (select user_id from aidt_lms.tc_cla_mb_info where stdt_id = #{param.userId} and cla_id = #{param.claId} and actvtn_at = 'Y')
                                                                 and tc.`key`= a.usd_tg_id
                                                            )
                                 when a.usd_clsf_cd = 2 then (select task_nm from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select evl_nm from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then (select std_nm from aidt_lms.slf_std_info where id = a.usd_tg_id)
                                 else ''
                            end
                        ) as trgt_nm
                ,       (
                            case when a.usd_clsf_cd = 1 then 'Y'
                                 when a.usd_clsf_cd = 2 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then 'Y'
                                 else ''
                            end
                        ) as rp_othbc_at
                from    aidt_lms.usd_ach_src2_info a
                    inner join aidt_lms.usd_ach_src2_detail b
                        on a.id = b.usd_ach_src_id
                               and b.iem_id = #{param.iemId}
                where   a.usd_ach_id    = 'vocabulary'
                  and   a.cla_id        = #{param.claId} /* 클래스 아이디 */
                  and   a.stdt_id       = #{param.userId}
                  and   a.textbk_id     = #{param.textbookId}
                  <if test="param.unitNum > 0">
                  and   a.unit_num      = #{param.unitNum} /* 단원번호 */
                  </if>
                  and   a.std_dt        = (
                            select max(c.std_dt)
                            from aidt_lms.usd_ach_src2_info c
                            where   1=1
                            and c.usd_ach_id = 'vocabulary'
                            and c.cla_id     = #{param.claId}
                            and c.textbk_id  = #{param.textbookId}
                            and c.stdt_id    = #{param.userId}
                            <if test="param.unitNum > 0">
                            and c.unit_num      = #{param.unitNum} /* 단원번호 */
                            </if>
                      )
                ) T
        order by row_no desc
        limit #{pageable.pageSize} offset #{pageable.offset}
    </select>
    
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 단어/문법/발음 > Grammar 그래프 GrammarCount -->
    <select id="selectStntDsbdStatusGrammarCount" resultType="java.lang.Integer">
        /* StntSelfLrnMapper.selectStntDsbdStatusGrammarCount */
        select  count(*)
        from    aidt_lms.usd_ach_src2_info a
        where   a.usd_ach_id      = 'grammar'
          and   a.cla_id          = #{claId} /* 클래스 아이디 */
          and   a.stdt_id         = #{userId}
          and   a.textbk_id       = #{textbookId}
          <if test="unitNum > 0">
          and   a.unit_num        = #{unitNum} /* 단원번호 */
          </if>
          and a.std_dt = (
              select max(b.std_dt)
              from aidt_lms.usd_ach_src2_info b
              where  1=1
                and b.usd_ach_id = 'grammar'
                and b.cla_id     = #{claId}
                and b.textbk_id  = #{textbookId}
                and b.stdt_id    = #{userId}
                <if test="unitNum > 0">
                and b.unit_num   = #{unitNum} /* 단원번호 */
                </if>
              )
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 단어/문법/발음 > Grammar 그래프 GrammarList -->
    <select id="selectStntDsbdStatusGrammarList" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectStntDsbdStatusGrammarList */
        with usd_ach_src2_data as (
            select  a.usd_ach_id
            ,       b.iem_id
            ,       b.iem_cd
            ,       sum(b.usd_ach_scr) as usd_ach_scr
            ,       sum(b.rflt_actv_cnt) as rflt_actv_cnt
            ,       sum(b.usd_ach_scr) / sum(b.rflt_actv_cnt) as total_usd_src
            from aidt_lms.usd_ach_src2_info a
                inner join aidt_lms.usd_ach_src2_detail b on a.id = b.usd_ach_src_id
            where   a.usd_ach_id    = 'grammar'
              and   a.cla_id        = #{param.claId} /* 클래스 아이디 */
              and   a.stdt_id       = #{param.userId}
              and   a.textbk_id     = #{param.textbookId}
            <if test="param.unitNum > 0">
              and   a.unit_num      = #{param.unitNum} /* 단원번호 */
            </if>
              and   a.std_dt        = (
                select max(c.std_dt)
                from aidt_lms.usd_ach_src2_info c
                where   1=1
                  and   c.usd_ach_id    = 'grammar'
                  and   c.cla_id        = #{param.claId} /* 클래스 아이디 */
                  and   c.textbk_id     = #{param.textbookId}
                  and   c.stdt_id       = #{param.userId}
                  <if test="param.unitNum > 0">
                  and   c.unit_num      = #{param.unitNum} /* 단원번호 */
                  </if>
                )
            group by b.iem_id
        )

        select  count(*) over () as full_count, row_number() over() as row_Num
        ,       usd_ach_id
        ,       round(T.usd_ach_scr/T.rflt_actv_cnt,2) as total_usd_src_temp
        ,       (select round(avg(total_usd_src), 2) * 100 from usd_ach_src2_data) as total_usd_src       /* 정답률 총 평균 */
        ,       (select (case when ROUND(AVG(total_usd_src), 2) * 100 >= 70 then 1 when ROUND(AVG(total_usd_src), 2) * 100 > 30 then 2 else 3 end) from usd_ach_src2_data ) as total_lvl_ty
        ,       iem_id, iem_cd, usd_ach_scr, rflt_actv_cnt
        ,       round((usd_ach_scr/rflt_actv_cnt)*100,2) as usd_ach_scr_percent
        ,       (case when round((usd_ach_scr/rflt_actv_cnt)*100,2) >= 70 then 1 when round((usd_ach_scr/rflt_actv_cnt)*100,2) > 30 then 2 else 3 end) as dfclt_lvl_ty
        from    usd_ach_src2_data T
        <if test="param.sortGbCd != null and param.sortGbCd != ''">
            <choose>
                <when test="param.sortGbCd == 'A1'">
                    order by iem_cd asc
                </when>
                <when test="param.sortGbCd == 'A2'">
                    order by iem_cd desc
                </when>
                <when test="param.sortGbCd == 'B1'">
                    order by round((usd_ach_scr/rflt_actv_cnt)*100,2) asc
                </when>
                <when test="param.sortGbCd == 'B2'">
                    order by round((usd_ach_scr/rflt_actv_cnt)*100,2) desc
                </when>
                <otherwise>
                    order by round((usd_ach_scr/rflt_actv_cnt)*100,2) asc
                </otherwise>
            </choose>
        </if>
        limit #{pageable.pageSize} offset #{pageable.offset}
    </select>

    <!-- [학생] 학급관리 > 홈 대시보드 > 단어/문법/발음 > Grammar 단원별 상세 -->
    <select id="selectTchDsbdGrammarStudentList" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectTchDsbdGrammarStudentList */
        select  count(*) over () as full_count, row_number() over (order by trgt_std_dt) as row_no
        ,       trgt_std_dt as std_dt
        ,       aidt_lms.f_code_nm('trgt_se_cd', usd_clsf_cd) as trgt_se_nm
        ,       trgt_nm
        ,       rp_othbc_at
        ,       T.usd_tg_id as trgt_id
        from    (
                with stdData as (select a.tab_id
                                      , a.cla_id
                                      , a.stdt_id
                                      , a.textbk_id
                                      , a.unit_num
                                      , a.meta_id
                                      , a.usd_tg_id
                                      , a.usd_clsf_cd
                                      , a.std_at
                                      , substring_index(article, '-', 1) collate utf8mb4_general_ci  AS articleId
                                      , substring_index(article, '-', -1) collate utf8mb4_general_ci AS subId
                                      , a.usd_ach_scr
                                      , a.dfclt_lvl_ty
                                      , a.rflt_actv_cnt
                                   from usd_ach_src2_info a
                                      , json_table(
                                           concat('["', replace(article_list, ',', '","'), '"]'),
                                           '$[*]' columns (article varchar(255) path '$')
                                        ) as jt,
                                        aidt_lms.usd_ach_src2_detail b
                                  where a.usd_ach_id = 'grammar'
                                    and a.cla_id     = #{param.claId}
                                    and a.stdt_id    = #{param.userId}
                                    and a.textbk_id  = #{param.textbookId}
                                    and b.iem_id = #{param.iemId}
                                    and a.id = b.usd_ach_src_id
                                    <if test="param.unitNum > 0">
                                        and a.unit_num = #{param.unitNum}
                                    </if>
                                    <choose>
                                    <when test="param.stdDtYmd != null and param.stdDtYmd != ''">
                                        and a.std_dt = DATE_FORMAT(#{param.stdDtYmd}, '%Y%m%d')
                                    </when>
                                    <otherwise>
                                        and a.std_dt = (
                                            select max(b.std_dt)
                                            from aidt_lms.usd_ach_src2_info b
                                            where 1=1
                                            and b.usd_ach_id = 'grammar'
                                            and b.cla_id     = #{param.claId}
                                            and b.textbk_id  = #{param.textbookId}
                                            and b.stdt_id    = #{param.userId}
                                            <if test="param.unitNum > 0">
                                            and b.unit_num = #{param.unitNum}
                                            </if>
                                        )
                                    </otherwise>
                              </choose>
                                    and a.usd_clsf_cd = '1'
                                    )
              select r.dta_result_id                      as id
                   , r.eak_st_dt
                   , s.usd_clsf_cd
                   , s.usd_tg_id
                   , s.meta_id
                   , s.std_at
                   , s.textbk_id
                   , s.cla_id
                   , s.stdt_id
                   , s.usd_ach_scr
                   , s.dfclt_lvl_ty
                   , s.rflt_actv_cnt
                   , date_format(r.eak_ed_dt, '%Y-%m-%d') as trgt_std_dt
                   , (select if(s.tab_id > 0,
                                concat('[', (select tab_nm from aidt_lms.tab_info where id = s.tab_id), '] ', tc.`text`),
                                tc.`text`)
                        from aidt_lms.tc_curriculum tc
                       where 1 = 1
                         and tc.textbk_id = s.textbk_id
                         and tc.cla_id = s.cla_id
                         and tc.wrter_id =
                             (select user_id from aidt_lms.tc_cla_mb_info where stdt_id = s.stdt_id and cla_id = s.cla_id and actvtn_at = 'Y')
                         and tc.`key` = s.usd_tg_id)      as trgt_nm
                   , 'Y'                                  as rp_othbc_at

                from aidt_lms.std_dta_result_detail r
                         join stdData s
                              on r.dta_iem_id = s.articleid and r.sub_id = s.subid
               where r.dta_result_id =
                     (select id from aidt_lms.std_dta_result_info where textbk_tab_id = s.tab_id and mamoym_id = s.stdt_id)

               union all
                select  b.id, b.std_dt, usd_clsf_cd, usd_tg_id, meta_id, std_at, textbk_id, cla_id, stdt_id, b.usd_ach_scr, b.dfclt_lvl_ty, b.rflt_actv_cnt
                ,       (
                            /*case when a.usd_clsf_cd = 1 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.tc_curriculum tc where tc.textbk_id = a.textbk_id and tc.cla_id = a.cla_id and tc.`key` = a.usd_tg_id)*/
                            case when a.usd_clsf_cd = 2 then (select date_format(task_prg_dt, '%Y-%m-%d') from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select date_format(evl_prg_dt, '%Y-%m-%d')  from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.slf_std_info where id = a.usd_tg_id)
                                 else ''
                            end
                        ) as trgt_std_dt
                ,       (
                            case when a.usd_clsf_cd = 2 then (select task_nm from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select evl_nm from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then (select std_nm from aidt_lms.slf_std_info where id = a.usd_tg_id)
                                 else ''
                            end
                        ) as trgt_nm
                ,       (
                            case when a.usd_clsf_cd = 2 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then 'Y'
                                 else ''
                            end
                        ) as rp_othbc_at
                from    aidt_lms.usd_ach_src2_info a
                    inner join aidt_lms.usd_ach_src2_detail b
                        on a.id = b.usd_ach_src_id
                               and b.iem_id = #{param.iemId}
                where   a.usd_ach_id    = 'grammar'
                  and   a.cla_id        = #{param.claId} /* 클래스 아이디 */
                  and   a.stdt_id       = #{param.userId}
                  and   a.textbk_id     = #{param.textbookId}
                  <if test="param.unitNum > 0">
                  and   a.unit_num      = #{param.unitNum} /* 단원번호 */
                  </if>
                  and   a.std_dt        = (
                            select max(c.std_dt)
                            from aidt_lms.usd_ach_src2_info c
                            where 1=1
                              and c.usd_ach_id    = 'grammar'
                              and c.cla_id        = #{param.claId} /* 클래스 아이디 */
                              and c.textbk_id     = #{param.textbookId}
                              and c.stdt_id       = #{param.userId}
                              <if test="param.unitNum > 0">
                              and c.unit_num      = #{param.unitNum} /* 단원번호 */
                              </if>
                      )
                  and a.usd_clsf_cd != '1'
                ) T
        group by trgt_id, trgt_nm, trgt_std_dt
        order by row_no desc
        limit #{pageable.pageSize} offset #{pageable.offset}
    </select>

    <select id="selectTchDsbdGrammarStudentList_back" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectTchDsbdGrammarStudentList_back */
        select  count(*) over () as full_count, row_number() over (order by trgt_std_dt) as row_no
        ,       trgt_std_dt as std_dt
        ,       aidt_lms.f_code_nm('trgt_se_cd', usd_clsf_cd) as trgt_se_nm
        ,       trgt_nm
        ,       rp_othbc_at
        ,       T.usd_tg_id as trgt_id
        from    (
                select  b.id, b.std_dt, usd_clsf_cd, usd_tg_id, meta_id, std_at, textbk_id, cla_id, stdt_id, b.usd_ach_scr, b.dfclt_lvl_ty, b.rflt_actv_cnt
                ,       (
                            /*case when a.usd_clsf_cd = 1 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.tc_curriculum tc where tc.textbk_id = a.textbk_id and tc.cla_id = a.cla_id and tc.`key` = a.usd_tg_id)*/
                    case when a.usd_clsf_cd = 1 then (select date_format(eak_st_dt, '%Y-%m-%d')
                                                      from std_dta_result_info
                                                      where 1 = 1
                                                        and mamoym_id =  a.stdt_id
                                                        and textbk_tab_id in (select id
                                                                              from tab_info
                                                                              where cla_id = a.cla_id and textbk_id = a.textbk_id and crcul_id = a.usd_tg_id and tab_nm = '교과서' and setCategory = 31))
                                 when a.usd_clsf_cd = 2 then (select date_format(task_prg_dt, '%Y-%m-%d') from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select date_format(evl_prg_dt, '%Y-%m-%d')  from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.slf_std_info where id = a.usd_tg_id)
                                 else ''
                            end
                        ) as trgt_std_dt
                ,       (
                            case when a.usd_clsf_cd = 1 then (
                                                                select
                                                                        if(a.tab_id > 0,concat('[', (select tab_nm from aidt_lms.tab_info where id = a.tab_id), '] ',tc.`text`), tc.`text`)
                                                                  from aidt_lms.tc_curriculum tc
                                                                 where 1=1
                                                                   and tc.textbk_id = #{param.textbookId}
                                                                   and tc.cla_id = #{param.claId}
                                                                   and tc.wrter_id = (select user_id from aidt_lms.tc_cla_mb_info where stdt_id = #{param.userId} and cla_id = #{param.claId} and actvtn_at = 'Y')
                                                                   and tc.`key`= a.usd_tg_id
                                                            )
                                 when a.usd_clsf_cd = 2 then (select task_nm from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select evl_nm from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then (select std_nm from aidt_lms.slf_std_info where id = a.usd_tg_id)
                                 else ''
                            end
                        ) as trgt_nm
                ,       (
                            case when a.usd_clsf_cd = 1 then 'Y'
                                 when a.usd_clsf_cd = 2 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then 'Y'
                                 else ''
                            end
                        ) as rp_othbc_at
                from    aidt_lms.usd_ach_src2_info a
                    inner join aidt_lms.usd_ach_src2_detail b
                        on a.id = b.usd_ach_src_id
                               and b.iem_id = #{param.iemId}
                where   a.usd_ach_id    = 'grammar'
                  and   a.cla_id        = #{param.claId} /* 클래스 아이디 */
                  and   a.stdt_id       = #{param.userId}
                  and   a.textbk_id     = #{param.textbookId}
                  <if test="param.unitNum > 0">
                  and   a.unit_num      = #{param.unitNum} /* 단원번호 */
                  </if>
                  and   a.std_dt        = (
                            select max(c.std_dt)
                            from aidt_lms.usd_ach_src2_info c
                            where 1=1
                              and c.usd_ach_id    = 'grammar'
                              and c.cla_id        = #{param.claId} /* 클래스 아이디 */
                              and c.textbk_id     = #{param.textbookId}
                              and c.stdt_id       = #{param.userId}
                              <if test="param.unitNum > 0">
                              and c.unit_num      = #{param.unitNum} /* 단원번호 */
                              </if>
                      )
                ) T
        order by row_no desc
        limit #{pageable.pageSize} offset #{pageable.offset}
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 단어/문법/발음 > Pronunciation 그래프 PronunciationCount -->
    <select id="selectStntDsbdStatusPronunciationCount" resultType="java.lang.Integer">
        /* StntSelfLrnMapper.selectStntDsbdStatusPronunciationCount */
        select  count(*)
        from    aidt_lms.usd_ach_src2_info a
        where   a.usd_ach_id      = 'pronunciation'
          and   a.cla_id          = #{claId}/* 클래스 아이디 */
          and   a.stdt_id         = #{userId}
          and   a.textbk_id       = #{textbookId}
          <if test="unitNum > 0">
          and   a.unit_num        = #{unitNum} /* 단원번호 */
          </if>
          and   a.std_dt          = (
                  select max(b.std_dt)
                  from aidt_lms.usd_ach_src2_info b
                  where   1=1
                    and b.usd_ach_id = 'pronunciation'
                    and b.cla_id     = #{claId}
                    and b.textbk_id  = #{textbookId}
                    and b.stdt_id    = #{userId}
                    <if test="unitNum > 0">
                    and b.unit_num   = #{unitNum} /* 단원번호 */
                    </if>
              )
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 단어/문법/발음 > Pronunciation 그래프 PronunciationList -->
    <select id="selectStntDsbdStatusPronunciationList" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectStntDsbdStatusPronunciationList */
        with usd_ach_src2_data as (
            select  a.usd_ach_id
            ,       b.iem_id
            ,       b.iem_cd
            ,       sum(b.usd_ach_scr) as usd_ach_scr
            ,       sum(b.rflt_actv_cnt) as rflt_actv_cnt
            ,       sum(b.usd_ach_scr) / sum(b.rflt_actv_cnt) as total_usd_src
            from aidt_lms.usd_ach_src2_info a
                inner join aidt_lms.usd_ach_src2_detail b on a.id = b.usd_ach_src_id
            where   a.usd_ach_id    = 'pronunciation'
              and   a.cla_id        = #{param.claId}/* 클래스 아이디 */
              and   a.stdt_id       = #{param.userId}
              and   a.textbk_id     = #{param.textbookId}
            <if test="param.unitNum > 0">
              and   a.unit_num      = #{param.unitNum} /* 단원번호 */
            </if>
              and   a.std_dt        = (
                            select max(c.std_dt)
                            from aidt_lms.usd_ach_src2_info c
                            where   1=1
                              and   c.usd_ach_id    = 'pronunciation'
                              and   c.cla_id        = #{param.claId}/* 클래스 아이디 */
                              and   c.textbk_id     = #{param.textbookId}
                              and   c.stdt_id       = #{param.userId}
                              <if test="param.unitNum > 0">
                              and   c.unit_num      = #{param.unitNum} /* 단원번호 */
                              </if>
                            )
            group by b.iem_cd
        )
        select  count(*) over () as full_count, row_number() over() as row_Num
        ,       usd_ach_id
        ,       round(T.usd_ach_scr/T.rflt_actv_cnt,2) as total_usd_src_temp
        /*,       (select round(avg(total_usd_src), 2) from usd_ach_src2_data) as total_usd_src        정답률 총 평균 */
        ,       (select round(sum(usd_ach_scr) / sum(rflt_actv_cnt), 2) from usd_ach_src2_data) as total_usd_src       /* 정답률 총 평균 */
        ,       (select (case when ROUND(AVG(total_usd_src), 2) >= 70 then 1 when ROUND(AVG(total_usd_src), 2) > 30 then 2 else 3 end) from usd_ach_src2_data ) as total_lvl_ty
        ,       iem_id, iem_cd, usd_ach_scr, rflt_actv_cnt
        ,       round((usd_ach_scr/rflt_actv_cnt),2) as usd_ach_scr_percent
        ,       (case when round((usd_ach_scr/rflt_actv_cnt),2) >= 70 then 1 when round((usd_ach_scr/rflt_actv_cnt),2) > 30 then 2 else 3 end) as dfclt_lvl_ty
        from    usd_ach_src2_data T
        <if test="param.sortGbCd != null and param.sortGbCd != ''">
            <choose>
                <when test="param.sortGbCd == 'A1'">
                    order by iem_cd asc
                </when>
                <when test="param.sortGbCd == 'A2'">
                    order by iem_cd desc
                </when>
                <when test="param.sortGbCd == 'B1'">
                    order by round((usd_ach_scr/rflt_actv_cnt),2) asc
                </when>
                <when test="param.sortGbCd == 'B2'">
                    order by round((usd_ach_scr/rflt_actv_cnt),2) desc
                </when>
                <otherwise>
                    order by round((usd_ach_scr/rflt_actv_cnt),2) asc
                </otherwise>
            </choose>
        </if>
        limit #{pageable.pageSize} offset #{pageable.offset}
    </select>

    <!-- [학생] 학급관리 > 홈 대시보드 > 단어/문법/발음 > Pronunciation 단원별 상세 -->
    <select id="selectTchDsbdPronunciationStudentList" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectTchDsbdPronunciationStudentList */
        select  count(*) over () as full_count, row_number() over (order by trgt_std_dt) as row_no
        ,       trgt_std_dt as std_dt
        ,       aidt_lms.f_code_nm('trgt_se_cd', usd_clsf_cd) as trgt_se_nm
        ,       trgt_nm
        ,       rp_othbc_at
       ,       T.usd_tg_id as trgt_id
       from    (
                with stdData as (select a.tab_id
                                      , a.cla_id
                                      , a.stdt_id
                                      , a.textbk_id
                                      , a.unit_num
                                      , a.meta_id
                                      , a.usd_tg_id
                                      , a.usd_clsf_cd
                                      , a.std_at
                                      , substring_index(article, '-', 1) collate utf8mb4_general_ci  AS articleId
                                      , substring_index(article, '-', -1) collate utf8mb4_general_ci AS subId
                                      , a.usd_ach_scr
                                      , a.dfclt_lvl_ty
                                      , a.rflt_actv_cnt
                                   from aidt_lms.usd_ach_src2_info a
                                      , json_table(
                                           concat('["', replace(article_list, ',', '","'), '"]'),
                                           '$[*]' columns (article varchar(255) path '$')
                                        ) as jt,
                                        aidt_lms.usd_ach_src2_detail b
                                  where a.usd_ach_id = 'pronunciation'
                                    and a.cla_id     = #{param.claId}
                                    and a.stdt_id    = #{param.userId}
                                    and a.textbk_id  = #{param.textbookId}
                                    and b.iem_id = #{param.iemId}
                                    and a.id = b.usd_ach_src_id
                                    <if test="param.unitNum > 0">
                                        and a.unit_num = #{param.unitNum}
                                    </if>
                                    <choose>
                                    <when test="param.stdDtYmd != null and param.stdDtYmd != ''">
                                        and a.std_dt = DATE_FORMAT(#{param.stdDtYmd}, '%Y%m%d')
                                    </when>
                                    <otherwise>
                                        and a.std_dt = (
                                            select max(b.std_dt)
                                            from aidt_lms.usd_ach_src2_info b
                                            where 1=1
                                            and b.usd_ach_id = 'pronunciation'
                                            and b.cla_id     = #{param.claId}
                                            and b.textbk_id  = #{param.textbookId}
                                            and b.stdt_id    = #{param.userId}
                                            <if test="param.unitNum > 0">
                                            and b.unit_num = #{param.unitNum}
                                            </if>
                                        )
                                    </otherwise>
                              </choose>
                                    and a.usd_clsf_cd = '1'
                                    )
              select r.dta_result_id                      as id
                   , r.eak_st_dt
                   , s.usd_clsf_cd
                   , s.usd_tg_id
                   , s.meta_id
                   , s.std_at
                   , s.textbk_id
                   , s.cla_id
                   , s.stdt_id
                   , s.usd_ach_scr
                   , s.dfclt_lvl_ty
                   , s.rflt_actv_cnt
                   , date_format(r.eak_ed_dt, '%Y-%m-%d') as trgt_std_dt
                   , (select if(s.tab_id > 0,
                                concat('[', (select tab_nm from aidt_lms.tab_info where id = s.tab_id), '] ', tc.`text`),
                                tc.`text`)
                        from aidt_lms.tc_curriculum tc
                       where 1 = 1
                         and tc.textbk_id = s.textbk_id
                         and tc.cla_id = s.cla_id
                         and tc.wrter_id =
                             (select user_id from aidt_lms.tc_cla_mb_info where stdt_id = s.stdt_id and cla_id = s.cla_id and actvtn_at = 'Y')
                         and tc.`key` = s.usd_tg_id)      as trgt_nm
                   , 'Y'                                  as rp_othbc_at

                from aidt_lms.std_dta_result_detail r
                         join stdData s
                              on r.dta_iem_id = s.articleid and r.sub_id = s.subid
               where r.dta_result_id =
                     (select id from aidt_lms.std_dta_result_info where textbk_tab_id = s.tab_id and mamoym_id = s.stdt_id)
                union all

                select  b.id, b.std_dt, usd_clsf_cd, usd_tg_id, meta_id, std_at, textbk_id, cla_id, stdt_id, b.usd_ach_scr, b.dfclt_lvl_ty, b.rflt_actv_cnt
                ,       (
                            /*case when a.usd_clsf_cd = 1 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.tc_curriculum tc where tc.textbk_id = a.textbk_id and tc.cla_id = a.cla_id and tc.`key` = a.usd_tg_id)*/
                           case  when a.usd_clsf_cd = 2 then (select date_format(task_prg_dt, '%Y-%m-%d') from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select date_format(evl_prg_dt, '%Y-%m-%d')  from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.slf_std_info where id = a.usd_tg_id)
                                 else ''
                            end
                        ) as trgt_std_dt
                ,       (
                            case when a.usd_clsf_cd = 2 then (select task_nm from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select evl_nm from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then (select std_nm from aidt_lms.slf_std_info where id = a.usd_tg_id)
                                 else ''
                            end
                        ) as trgt_nm
                ,       (
                            case when a.usd_clsf_cd = 2 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then 'Y'
                                 else ''
                            end
                        ) as rp_othbc_at
                from    aidt_lms.usd_ach_src2_info a
                    inner join aidt_lms.usd_ach_src2_detail b
                        on a.id = b.usd_ach_src_id
                               and b.iem_id = #{param.iemId}
                where   a.usd_ach_id    = 'pronunciation'
                  and   a.cla_id        = #{param.claId}/* 클래스 아이디 */
                  and   a.stdt_id       = #{param.userId}
                  and   a.textbk_id     = #{param.textbookId}
                  <if test="param.unitNum > 0">
                  and   a.unit_num      = #{param.unitNum} /* 단원번호 */
                  </if>
                  and a.std_dt = (
                       select max(c.std_dt)
                       from aidt_lms.usd_ach_src2_info c
                       where  1=1
                        and c.usd_ach_id = 'pronunciation'
                        and c.cla_id     = #{param.claId}
                        and c.textbk_id  = #{param.textbookId}
                        and c.stdt_id    = #{param.userId}
                        <if test="param.unitNum > 0">
                        and c.unit_num   = #{param.unitNum} /* 단원번호 */
                        </if>
                 )
                  and a.usd_clsf_cd != '1'
        ) T
        where trgt_std_dt is not null
        group by trgt_id, trgt_nm, trgt_std_dt
        order by row_no desc
        limit #{pageable.pageSize} offset #{pageable.offset}
    </select>

    <select id="selectTchDsbdPronunciationStudentList_back" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectTchDsbdPronunciationStudentList */
        select  count(*) over () as full_count, row_number() over (order by trgt_std_dt) as row_no
        ,       trgt_std_dt as std_dt
        ,       aidt_lms.f_code_nm('trgt_se_cd', usd_clsf_cd) as trgt_se_nm
        ,       trgt_nm
        ,       rp_othbc_at
       ,       T.usd_tg_id as trgt_id
       from    (
                select  b.id, b.std_dt, usd_clsf_cd, usd_tg_id, meta_id, std_at, textbk_id, cla_id, stdt_id, b.usd_ach_scr, b.dfclt_lvl_ty, b.rflt_actv_cnt
                ,       (
                            /*case when a.usd_clsf_cd = 1 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.tc_curriculum tc where tc.textbk_id = a.textbk_id and tc.cla_id = a.cla_id and tc.`key` = a.usd_tg_id)*/
                    case when a.usd_clsf_cd = 1 then (select date_format(eak_st_dt, '%Y-%m-%d')
                                                      from std_dta_result_info
                                                      where 1 = 1
                                                        and mamoym_id =  a.stdt_id
                                                        and textbk_tab_id in (select id
                                                                              from tab_info
                                                                              where cla_id = a.cla_id and textbk_id = a.textbk_id and crcul_id = a.usd_tg_id  and tab_nm = '교과서' and setCategory = 31))
                                 when a.usd_clsf_cd = 2 then (select date_format(task_prg_dt, '%Y-%m-%d') from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select date_format(evl_prg_dt, '%Y-%m-%d')  from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.slf_std_info where id = a.usd_tg_id)
                                 else ''
                            end
                        ) as trgt_std_dt
                ,       (
                            case when a.usd_clsf_cd = 1 then (
                                                                select
                                                                        if(a.tab_id > 0,concat('[', (select tab_nm from aidt_lms.tab_info where id = a.tab_id), '] ',tc.`text`), tc.`text`)
                                                                  from aidt_lms.tc_curriculum tc
                                                                 where 1=1
                                                                   and tc.textbk_id = #{param.textbookId}
                                                                   and tc.cla_id = #{param.claId}
                                                                   and tc.wrter_id = (select user_id from aidt_lms.tc_cla_mb_info where stdt_id = #{param.userId} and cla_id = #{param.claId} and actvtn_at = 'Y')
                                                                   and tc.`key`= a.usd_tg_id
                                                            )
                                 when a.usd_clsf_cd = 2 then (select task_nm from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select evl_nm from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then (select std_nm from aidt_lms.slf_std_info where id = a.usd_tg_id)
                                 else ''
                            end
                        ) as trgt_nm
                ,       (
                            case when a.usd_clsf_cd = 1 then 'Y'
                                 when a.usd_clsf_cd = 2 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.task_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 3 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.evl_info where id = a.usd_tg_id)
                                 when a.usd_clsf_cd = 4 then 'Y'
                                 else ''
                            end
                        ) as rp_othbc_at
                from    aidt_lms.usd_ach_src2_info a
                    inner join aidt_lms.usd_ach_src2_detail b
                        on a.id = b.usd_ach_src_id
                               and b.iem_id = #{param.iemId}
                where   a.usd_ach_id    = 'pronunciation'
                  and   a.cla_id        = #{param.claId}/* 클래스 아이디 */
                  and   a.stdt_id       = #{param.userId}
                  and   a.textbk_id     = #{param.textbookId}
                  <if test="param.unitNum > 0">
                  and   a.unit_num      = #{param.unitNum} /* 단원번호 */
                  </if>
                  and a.std_dt = (
                       select max(c.std_dt)
                       from aidt_lms.usd_ach_src2_info c
                       where  1=1
                        and c.usd_ach_id = 'pronunciation'
                        and c.cla_id     = #{param.claId}
                        and c.textbk_id  = #{param.textbookId}
                        and c.stdt_id    = #{param.userId}
                        <if test="param.unitNum > 0">
                        and c.unit_num   = #{param.unitNum} /* 단원번호 */
                        </if>
                 )
        ) T
        order by row_no desc
        limit #{pageable.pageSize} offset #{pageable.offset}
    </select>

    <select id="selectStntDsbdStatisticAchievementList1_daily" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectStntDsbdStatisticAchievementList1_daily 사용안함 */
        WITH RECURSIVE date_range AS (
            SELECT
                MIN(std_dt) AS std_dt
            FROM aidt_lms.usd_ach_src2_info_daily a
            WHERE 1=1
                and   a.cla_id        = #{claId}
                and   a.textbk_id     = #{textbookId}
                and   a.usd_ach_id    = #{evaluationAreaCd}
                and   a.stdt_id        = #{stntId}
                <if test="unitNum > 0">
                    and   a.unit_num      = #{unitNum}
                </if>
            UNION ALL
            SELECT DATE_ADD(std_dt, INTERVAL 1 DAY)
            FROM date_range
            WHERE std_dt <![CDATA[<]]> DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY) -- 어제 날짜까지
        )
        SELECT
            DATE_FORMAT(d.std_dt, '%Y%m%d') AS stdDt,
            DATE_FORMAT(d.std_dt, '%m/%d') AS stdDtLabel,
            CASE
                WHEN IFNULL(a.usd_ach_scr, 0) = 0 THEN 0
                ELSE ROUND(
                    (SUM(IFNULL(a.usd_ach_scr, 0)) OVER (ORDER BY d.std_dt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) /
                    (SUM(IFNULL(a.rflt_actv_cnt, 0)) OVER (ORDER BY d.std_dt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) * 100,
                    2
                )
            END AS usd_ach_scr
        FROM date_range d
        LEFT JOIN (
            SELECT
                DATE_FORMAT(a.std_dt, '%Y%m%d') AS stdDt,
                IFNULL(a.rflt_actv_cnt, 0) AS rflt_actv_cnt,
                IFNULL(a.usd_ach_scr, 0) AS usd_ach_scr
            FROM (
                SELECT
                    SUM(b.usd_ach_scr) AS usd_ach_scr,
                    SUM(b.rflt_actv_cnt) AS rflt_actv_cnt,
                    ROUND((SUM(b.usd_ach_scr) / SUM(b.rflt_actv_cnt)), 2) AS usd_ach_scr_percent,
                    b.std_dt
                FROM (
                    SELECT
                        SUM(a.usd_ach_scr) AS usd_ach_scr,
                        SUM(a.rflt_actv_cnt) AS rflt_actv_cnt,
                        a.stdt_id,
                        a.std_dt
                    FROM aidt_lms.usd_ach_src2_info_daily a
                    WHERE 1=1
                        and   a.cla_id        = #{claId}
                        and   a.textbk_id     = #{textbookId}
                        and   a.usd_ach_id    = #{evaluationAreaCd}
                        and   a.stdt_id        = #{stntId}
                        <if test="unitNum > 0">
                            and   a.unit_num      = #{unitNum}
                        </if>
                    GROUP BY a.std_dt
                ) b
                GROUP BY b.std_dt
            ) a
        ) a ON d.std_dt = a.stdDt
        ORDER BY d.std_dt
    </select>

    <select id="selectStntDsbdStatisticAchievementList1_old" resultType="camelHashMap">
/* StntSelfLrnMapper.selectStntDsbdStatisticAchievementList1_old - backup 사용 안함. */
        select
               date_format(a.std_dt, '%Y-%m-%d') AS stdDt
             , date_format(a.std_dt, '%m/%d') as stdDtLabel
--              , ifnull(a.usd_ach_scr, 0) as usd_ach_scr
             , ifnull(a.rflt_actv_cnt, 0) as rflt_actv_cnt
             , ifnull(a.usd_ach_scr_percent, 0) as usd_ach_scr
        from (
                 select
                     sum(b.usd_ach_scr) as usd_ach_scr
                      , sum(b.rflt_actv_cnt) as rflt_actv_cnt
                      , round((sum(b.usd_ach_scr_percent)*100/count(b.stdt_id)),2) as usd_ach_scr_percent
                      , b.std_dt
                 from (
                          select
                              sum(a.usd_ach_scr) as usd_ach_scr
                               , sum(a.rflt_actv_cnt) as rflt_actv_cnt
                               , sum(a.usd_ach_scr)/sum(a.rflt_actv_cnt) as usd_ach_scr_percent
                               , a.stdt_id
                               , a.std_dt
                          from aidt_lms.usd_ach_src2_info_daily a
                          where   1=1
                            and   a.cla_id        = #{claId}
                            and   a.textbk_id     = #{textbookId}
                            and   a.usd_ach_id    = #{evaluationAreaCd}
                            and   a.stdt_id        = #{stntId}
                            <if test="unitNum > 0">
                                and   a.unit_num      = #{unitNum}
                            </if>
                          group by std_dt
                      ) b
                 group by b.std_dt
             ) a
    </select>

    <select id="selectStntDsbdStatisticAchievementList1" resultType="camelHashMap">
    /* StntSelfLrnMapper.selectStntDsbdStatisticAchievementList1 */
    SELECT c.stdDt
         , c.stdDtLabel
         , c.stdDtYmd
         , c.rflt_actv_cnt
         , c.usd_ach_scr AS usd_ach_scr_ori
         , c.usd_ach_id
         , IF(a.ed_dt IS NULL, 0, c.usd_ach_scr) AS usd_ach_scr
         , c.meta_id
    FROM (
             SELECT DATE_FORMAT(b.std_dt, '%Y-%m-%d') AS stdDt
                  , DATE_FORMAT(b.std_dt, '%Y%m%d') AS stdDtYmd
                  , DATE_FORMAT(b.std_dt, '%m/%d') AS stdDtLabel
                  , IFNULL(b.rflt_actv_cnt, 0) AS rflt_actv_cnt
                  , IFNULL(b.usd_ach_scr_percent, 0) AS usd_ach_scr
                  , b.meta_id
                  , b.usd_ach_id
             FROM (
                      SELECT SUM(a.usd_ach_scr) AS usd_ach_scr
                           , SUM(a.rflt_actv_cnt) AS rflt_actv_cnt
                           , ROUND(SUM(a.usd_ach_scr) OVER(ORDER BY std_dt) * 100/ SUM(a.rflt_actv_cnt) OVER(ORDER BY std_dt), 2) AS usd_ach_scr_percent
                           , a.std_dt
                           , a.meta_id
                           , a.usd_ach_id
                      FROM (
                               SELECT SUM(a.usd_ach_scr) AS usd_ach_scr
                                    , SUM(a.rflt_actv_cnt) AS rflt_actv_cnt
                                    , SUM(a.usd_ach_scr) / SUM(a.rflt_actv_cnt) AS usd_ach_scr_percent
                                    , a.stdt_id
                                    , a.std_dt
                                    , a.meta_id
                                    , a.usd_ach_id
                               FROM aidt_lms.usd_ach_src2_info a
                               WHERE 1 = 1
                                 AND a.cla_id = #{claId}
                                 AND a.textbk_id = #{textbookId}
                                 AND a.stdt_id = #{stntId}
                                 AND a.usd_ach_id = #{evaluationAreaCd}
                                <if test="unitNum > 0">
                                    AND a.unit_num = #{unitNum}
                                </if>
                               GROUP BY std_dt
                           ) a
                      GROUP BY a.std_dt
                  ) b
         ) c
        JOIN (
            SELECT DISTINCT
                DATE_FORMAT(ed_dt, '%Y%m%d') AS ed_dt,
                (SELECT code FROM aidt_lcms.meta WHERE id = b.meta_id AND code = #{evaluationAreaCd}) AS code
                <if test="metaId != null and metaId != ''">
                    , unit_meta_id
                </if>
            FROM (
                -- 학습자료
                SELECT
                    DATE_FORMAT(sdrd.eak_ed_dt, '%Y-%m-%d') AS ed_dt,
                    amm.meta_id,
                    amm2.meta_id as unit_meta_id
                FROM aidt_lms.tab_info ti
                INNER JOIN aidt_lms.std_dta_result_info sdri ON ti.id = sdri.textbk_tab_id
                INNER JOIN aidt_lms.std_dta_result_detail sdrd
                    ON sdri.id = sdrd.dta_result_id
                    AND sdrd.eak_at = 'Y'
                    AND sdrd.mrk_ty <![CDATA[<>]]> 3
                INNER JOIN aidt_lcms.article_meta_map amm
                    ON amm.article_id = sdrd.dta_iem_id
                    AND amm.sub_id = sdrd.sub_id
                    AND amm.meta_name = 'evaluationArea'
                    AND amm.meta_id = (SELECT id FROM aidt_lcms.meta WHERE id = amm.meta_id AND code = #{evaluationAreaCd})
                INNER JOIN aidt_lcms.article_meta_map amm2
                    ON amm2.article_id = sdrd.dta_iem_id
                    AND amm2.sub_id = sdrd.sub_id
                    AND amm2.meta_name = 'studyMap1'
                    <if test="metaId != null and metaId != ''">
                        AND amm2.meta_id = #{metaId}
                    </if>
                WHERE ti.cla_id = #{claId}
                AND ti.textbk_id = #{textbookId}
                AND sdri.mamoym_id = #{stntId}

                UNION

                -- 평가
                SELECT
                    DATE_FORMAT(ei.evl_cp_dt, '%Y-%m-%d') AS ed_dt,
                    amm.meta_id,
                    amm2.meta_id as unit_meta_id
                FROM aidt_lms.evl_info ei
                JOIN aidt_lms.evl_result_info eri
                    ON ei.id = eri.evl_id
                    AND eri.eak_stts_cd = 5
                    AND eri.mrk_cp_at = 'Y'
                    AND ei.rpt_othbc_at = 'Y'
                JOIN aidt_lms.evl_result_detail erd
                    ON eri.id = erd.evl_result_id
                    AND erd.eak_at = 'Y'
                    AND erd.mrk_ty <![CDATA[<>]]> 3
                INNER JOIN aidt_lcms.article_meta_map amm
                    ON amm.article_id = erd.evl_iem_id
                    AND amm.sub_id = erd.sub_id
                    AND amm.meta_name = 'evaluationArea'
                    AND amm.meta_id = (SELECT id FROM aidt_lcms.meta WHERE id = amm.meta_id AND code = #{evaluationAreaCd})
                INNER JOIN aidt_lcms.article_meta_map amm2
                    ON amm2.article_id = erd.evl_iem_id
                    AND amm2.sub_id = erd.sub_id
                    AND amm2.meta_name = 'studyMap1'
                    <if test="metaId != null and metaId != ''">
                        AND amm2.meta_id = #{metaId}
                    </if>
                WHERE ei.cla_id = #{claId}
                AND ei.textbook_id = #{textbookId}
                AND eri.mamoym_id = #{stntId}

                UNION

                -- 과제
                SELECT
                    DATE_FORMAT(ti.task_prg_dt, '%Y-%m-%d') AS ed_dt,
                    amm.meta_id,
                    amm2.meta_id as unit_meta_id
                FROM aidt_lms.task_info ti
                JOIN aidt_lms.task_result_info tri
                    ON ti.id = tri.task_id
                    AND tri.subm_at = 'Y'
                    AND ti.rpt_othbc_at = 'Y'
                JOIN aidt_lms.task_result_detail trd
                    ON tri.id = trd.task_result_id
                    AND trd.eak_at = 'Y'
                    AND trd.mrk_ty <![CDATA[<>]]> 3
                    AND trd.mrk_cp_at = 'Y'
                INNER JOIN aidt_lcms.article_meta_map amm
                    ON amm.article_id = trd.task_iem_id
                    AND amm.sub_id = trd.sub_id
                    AND amm.meta_name = 'evaluationArea'
                    AND amm.meta_id = (SELECT id FROM aidt_lcms.meta WHERE id = amm.meta_id AND code = #{evaluationAreaCd})
                INNER JOIN aidt_lcms.article_meta_map amm2
                    ON amm2.article_id = trd.task_iem_id
                    AND amm2.sub_id = trd.sub_id
                    AND amm2.meta_name = 'studyMap1'
                    <if test="metaId != null and metaId != ''">
                        AND amm2.meta_id = #{metaId}
                    </if>
                WHERE ti.cla_id = #{claId}
                AND ti.textbk_id = #{textbookId}
                AND tri.mamoym_id = #{stntId}

                UNION

                -- 자기주도학습
                SELECT
                    DATE_FORMAT(ssri.std_ed_dt, '%Y-%m-%d') AS ed_dt,
                    amm.meta_id,
                    amm2.meta_id as unit_meta_id
                FROM aidt_lms.slf_std_info ssi
                JOIN aidt_lms.slf_std_result_info ssri ON ssi.id = ssri.std_id AND ssi.ed_at = 'Y'
                INNER JOIN aidt_lcms.article_meta_map amm
                    ON amm.article_id = ssri.module_id
                    AND amm.sub_id = ssri.sub_id
                    AND amm.meta_name = 'evaluationArea'
                    AND amm.meta_id = (SELECT id FROM aidt_lcms.meta WHERE id = amm.meta_id AND code = #{evaluationAreaCd})
                INNER JOIN aidt_lcms.article_meta_map amm2
                    ON amm2.article_id = ssri.module_id
                    AND amm2.sub_id = ssri.sub_id
                    AND amm2.meta_name = 'studyMap1'
                    <if test="metaId != null and metaId != ''">
                        AND amm2.meta_id = #{metaId}
                    </if>
                WHERE ssi.cla_id = #{claId}
                AND ssi.textbk_id = #{textbookId}
                AND ssi.stdt_id = #{stntId}
            ) b
            WHERE ed_dt IS NOT NULL
        ) a ON a.ed_dt = c.stdDtYmd AND a.code = c.usd_ach_id
        <if test="metaId != null and metaId != ''">
            AND a.unit_meta_id = c.meta_id
        </if>
        order by c.stdDt
    </select>

    <select id="selectStntDsbdStatisticAchievementList2" resultType="camelHashMap">
        select
            b.usd_ach_id
--              , ifnull(sum(b.usd_ach_scr),0) as usd_ach_scr
             , ifnull(sum(b.rflt_actv_cnt),0) as rflt_actv_cnt
             , ifnull(
                case
                    when b.usd_ach_id = 'pronunciation' then round(avg(b.usd_ach_scr_percent), 2)
                    else round((avg(b.usd_ach_scr_percent) * 100),2)
                    end, 0
               ) as usd_ach_scr
             , b.stdt_id
             , date_format(b.std_dt, '%m/%d')
        from (
                 select
                     a.usd_ach_id
                      , sum(a.usd_ach_scr) as usd_ach_scr
                      , sum(a.rflt_actv_cnt) as rflt_actv_cnt
                      , AVG(a.usd_ach_scr_percent) as usd_ach_scr_percent
                      , a.stdt_id
                      , a.std_dt
                 from (
                          select
                              a.usd_ach_id
                               , b.iem_id
                               , sum(b.usd_ach_scr) as usd_ach_scr
                               , sum(b.rflt_actv_cnt) as rflt_actv_cnt
                               , sum(b.usd_ach_scr)/sum(b.rflt_actv_cnt) as usd_ach_scr_percent
                               , a.stdt_id
                               , a.std_dt
                          from aidt_lms.usd_ach_src2_info a
                                   inner join  aidt_lms.usd_ach_src2_detail b
                                               on a.id = b.usd_ach_src_id
                          where 1=1
                            and a.usd_ach_id = #{evaluationAreaCd}
                            and a.cla_id = #{claId}
                            and a.textbk_id = #{textbookId}
                            and a.stdt_id = #{stntId}
                            <if test="unitNum > 0">
                                and   a.unit_num      = #{unitNum}
                            </if>
                          group by b.iem_cd, a.std_dt
                      ) a
                 group by  a.iem_id,a.std_dt
             ) b
        group by b.std_dt
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 학습맵 > 성취 기준 AchievementStandardCount -->
    <select id="selectTchDsbdStdMapAchievementStandardCount" resultType="java.lang.Integer">
        /* StntSelfLrnMapper.selectTchDsbdStdMapAchievementStandardCount */
        select count(*)
        from    (
                select  a.unit_num, a.meta_id, a.kwg_main_id, sum(a.kwg_ach_num) as kwg_ach_num, sum(a.kwg_main_tot_exm_num) as kwg_tot_num
                from    aidt_lms.usd_ach_src2_kwg a
                where   a.kwg_main_cd = 'achievementStandard'
                  and   a.cla_id      = #{claId}
                  and   a.stdt_id     = #{userId}
                  and   a.textbk_id   = #{textbookId}
                <if test="unitNum > 0">
                  and   a.unit_num    = #{unitNum}
                </if>
                and a.std_dt = (
                    select max(b.std_dt)
                    from aidt_lms.usd_ach_src2_kwg b
                    where   1=1
                    and b.kwg_main_cd = 'achievementStandard'
                    and b.cla_id      = #{claId}
                    and b.textbk_id   = #{textbookId}
                    and b.stdt_id     = #{userId}
                    <if test="unitNum > 0">
                    and b.unit_num    = #{unitNum}
                    </if>
                )
                group by a.unit_num, a.meta_id, a.kwg_main_id, a.stdt_id
        ) T
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 학습맵 > 성취 기준 AchievementStandardList -->
    <select id="selectStntDsbdStatusStudyAchievementStandardList" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectStntDsbdStatusStudyAchievementStandardList */
        WITH temp AS (
            SELECT
                T1.id AS meta_id,
                T1.parent_id,
                T1.code,
                T1.parent_ac_nm,
                T1.ac_nm,
                T1.code_seq,
                CASE
                    WHEN T1.depth = 3 THEN CONCAT('[', T1.parent_ac_nm, '] ', T1.ac_nm)
                    ELSE T1.ac_nm
                    END AS full_ac_nm,
                T1.depth,
                T1.study_map_cd,
                CASE
                    WHEN IFNULL(ROUND((kwg_ach_num/kwg_tot_num)*100, 2), '-') = 0 THEN '-'
                    ELSE IFNULL(ROUND((SUM(kwg_ach_num)/SUM(kwg_tot_num))*100, 2), '-')
                END AS usd_scr,
                IFNULL(kwg_tot_num, 0) AS kwg_tot_count,
                T2.kwg_tot_num,
                T2.kwg_ach_num,
                T1.ac_cd
            FROM (
                     SELECT
                         a.id,
                         a.code,
                         '' as ac_cd,
                         a.val AS ac_nm,
                         a.depth,
                         a.parent_id,
                         '' AS parent_ac_nm,
                         c.code AS study_map_cd,
                         CASE
                             WHEN a.code LIKE '%-reception-%' THEN 1
                             WHEN a.code LIKE '%-production-%' THEN 2
                             ELSE 3
                             END AS code_seq
                     FROM aidt_lcms.meta a
                              INNER JOIN aidt_lcms.meta_meta_map b ON a.id = b.meta_id_b
                              INNER JOIN aidt_lcms.meta c ON b.meta_id_a = c.id
                     WHERE a.name = 'achievementStandard'
                       AND a.is_active = 1
                       AND c.is_active = 1
                       AND a.depth IN (3, 4)
                       AND EXISTS (
                                    SELECT
                                        1
                                    FROM aidt_lcms.meta m
                                    inner join aidt_lcms.textbook tb on m.id = tb.curriBook and tb.id = #{textbookId}
                                    inner join aidt_lcms.meta m2 on m.`val` = m2.`val` and m2.name ='achievementStandard'
                                    WHERE 1=1
                                    AND a.code like concat(m2.code, '%')
                        )
                    <if test="unitNum > 0">
                        and  c.code like concat(#{unitCode}, '%')
                    </if>
                     GROUP BY a.code

                     UNION ALL

                     SELECT
                         d.id,
                         d.code,
                         d.val as ac_cd,
                         e.val1 AS ac_nm,
                         d.depth,
                         f.parent_id,
                         f.val AS parent_ac_nm,
                         '' AS study_map_cd,
                         CASE
                             WHEN a.code LIKE '%-reception-%' THEN 1
                             WHEN a.code LIKE '%-production-%' THEN 2
                             ELSE 3
                             END AS code_seq
                     FROM aidt_lcms.meta a
                              INNER JOIN aidt_lcms.meta_meta_map b ON a.id = b.meta_id_b
                              INNER JOIN aidt_lcms.meta c ON b.meta_id_a = c.id
                              INNER JOIN aidt_lcms.meta d ON a.parent_id = d.id
                              INNER JOIN aidt_lcms.meta_extension e ON d.meta_extension_id = e.meta_extension_id
                              INNER JOIN aidt_lcms.meta f ON d.parent_id = f.id
                     WHERE a.name = 'achievementStandard'
                       AND a.is_active = 1
                       AND a.depth IN (3, 4)
                       AND EXISTS (
                                    SELECT
                                        1
                                    FROM aidt_lcms.meta m
                                    inner join aidt_lcms.textbook tb on m.id = tb.curriBook and tb.id = #{textbookId}
                                    inner join aidt_lcms.meta m2 on m.`val` = m2.`val` and m2.name ='achievementStandard'
                                    WHERE 1=1
                                    AND a.code like concat(m2.code, '%')
                        )
                    <if test="unitNum > 0">
                        AND   c.code like concat(#{unitCode}, '%')
                    </if>
                     GROUP BY d.code
                 ) T1
                     LEFT JOIN (
                SELECT
                    a.unit_num,
                    a.meta_id,
                    a.kwg_main_id,
                    SUM(a.kwg_ach_num) AS kwg_ach_num,
                    SUM(a.kwg_main_tot_exm_num) AS kwg_tot_num
                FROM aidt_lms.usd_ach_src2_kwg a
                WHERE   a.kwg_main_cd = 'achievementStandard'
                  and   a.cla_id      = #{claId}
                  and   a.stdt_id     = #{userId}
                  and   a.textbk_id   = #{textbookId}
                <if test="unitNum > 0">
                  and   a.unit_num    = #{unitNum}
                </if>
                  and (a.article_list is not null and a.article_list  <![CDATA[<>]]> '')
                  and a.std_dt = (
                        select max(b.std_dt)
                        from aidt_lms.usd_ach_src2_kwg b
                        WHERE   1=1
                        and b.kwg_main_cd = 'achievementStandard'
                        and b.cla_id      = #{claId}
                        and b.textbk_id   = #{textbookId}
                        and b.stdt_id     = #{userId}
                        <if test="unitNum > 0">
                        and b.unit_num    = #{unitNum}
                        </if>
                  )
                GROUP BY a.kwg_main_id
            ) T2 ON T1.id = T2.kwg_main_id
            GROUP BY T1.parent_id, T1.study_map_cd, T1.ac_cd, T1.depth, T1.code
            ORDER BY T1.code_seq, T1.code, T1.depth
        )
        SELECT
            A.meta_id,
            A.parent_id,
            A.code,
            A.parent_ac_nm,
            A.ac_cd,
            A.ac_nm,
            A.full_ac_nm,
            A.depth,
            A.study_map_cd,
            A.kwg_tot_num,
            A.kwg_ach_num,
            A.kwg_tot_count,
            C.val,
            CASE
                WHEN A.depth = 3 AND B.avg_usd_scr IS NOT NULL THEN
                    CASE
                        WHEN B.avg_usd_scr = '-' THEN '-'
                        ELSE ROUND(B.avg_usd_scr, 0)
                    END
                WHEN A.depth = 3 AND B.avg_usd_scr IS NULL THEN '-'
                WHEN A.usd_scr = '-' THEN '-'
                ELSE ROUND(CAST(A.usd_scr AS DECIMAL(10,2)), 0)
            END as usd_scr,
            CASE WHEN A.depth = 3 AND  B.avg_usd_scr IS NOT NULL THEN B.avg_usd_scr
                WHEN  A.depth = 3 AND  B.avg_usd_scr IS NULL THEN '-'
                ELSE  A.usd_scr
            END AS original_usd_scr /* 반올림 비교를 위한 원 소수점 점수 */
        FROM temp A
        LEFT JOIN (
            SELECT
                parent_id,
                ROUND(SUM(usd_scr) / COUNT(*),2) AS avg_usd_scr
            FROM temp
            WHERE depth = 4
              AND usd_scr NOT IN ('-', '0')
            GROUP BY parent_id
        ) B ON A.meta_id = B.parent_id
        LEFT JOIN aidt_lcms.meta C
            ON A.meta_id = C.id
        ORDER BY A.code_seq, A.code, A.depth
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 학습맵 > 소재 MaterialCount -->
    <select id="selectTchDsbdStdMapMaterialCount" resultType="java.lang.Integer">
        /* StntSelfLrnMapper.selectTchDsbdStdMapMaterialCount */
        select count(*)
        from    (
                select  a.unit_num, a.meta_id, a.kwg_main_id, sum(a.kwg_ach_num) as kwg_ach_num, sum(a.kwg_main_tot_exm_num) as kwg_tot_num
                from    aidt_lms.usd_ach_src2_kwg a
                where   a.kwg_main_cd = 'material'
                  and   a.cla_id      = #{claId}
                  and   a.stdt_id     = #{userId}
                  and   a.textbk_id   = #{textbookId}
                <if test="unitNum > 0">
                  and   a.unit_num    = #{unitNum}
                </if>
                and a.std_dt = (
                    select max(b.std_dt)
                    from aidt_lms.usd_ach_src2_kwg b
                    where   1=1
                    and b.kwg_main_cd = 'material'
                    and b.cla_id      = #{claId}
                    and b.textbk_id   = #{textbookId}
                    and b.stdt_id     = #{userId}
                    <if test="unitNum > 0">
                    and b.unit_num    = #{unitNum}
                    </if>
                )
                group by a.unit_num, a.meta_id, a.kwg_main_id, a.stdt_id
        ) T
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 학습맵 > 소재 MaterialList -->
    <select id="selectStntDsbdStatusStudyMapMaterialList" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectStntDsbdStatusStudyMapMaterialList */
        WITH temp AS (
            SELECT
            T1.id AS meta_id,
            T1.parent_id,
            T1.code,
            T1.parent_ac_nm,
            T1.ac_nm,
            T1.code_seq,
            (case
                when T1.depth = 2 then concat('[', T1.ac_nm ,']')
                else T1.ac_nm
            end) as full_ma_nm,
            T1.depth,
            T1.study_map_cd,
            CASE
                WHEN IFNULL(ROUND((kwg_ach_num/kwg_tot_num)*100, 2), '-') = 0 THEN '-'
                ELSE IFNULL(ROUND((SUM(kwg_ach_num)/SUM(kwg_tot_num))*100, 2), '-')
            END AS usd_scr,
            CASE
                WHEN IFNULL(ROUND((kwg_ach_num/kwg_tot_num)*100, 2), '-') = 0 THEN '0'
                ELSE IFNULL(kwg_tot_num, 0)
            END AS kwg_tot_count,
            T2.kwg_tot_num,
            T2.kwg_ach_num
        FROM (
            SELECT
                a.id,
                a.code,
                a.val AS ac_nm,
                a.depth,
                a.parent_id,
                '' AS parent_ac_nm,
                c.code AS study_map_cd,
                CASE
                    WHEN a.code LIKE '%-reception-%' THEN 1
                    WHEN a.code LIKE '%-production-%' THEN 2
                    ELSE 3
                END AS code_seq
            FROM aidt_lcms.meta a
            INNER JOIN aidt_lcms.meta_meta_map b ON a.id = b.meta_id_b
            INNER JOIN aidt_lcms.meta c ON b.meta_id_a = c.id
            WHERE a.name = 'material'
            AND a.is_active = 1
            AND a.depth IN (2, 3, 4)
            AND EXISTS (
                        SELECT
                            1
                        FROM aidt_lcms.meta m
                        inner join aidt_lcms.textbook tb on m.id = tb.curriBook and tb.id = #{textbookId}
                        inner join aidt_lcms.meta m2 on m.`val` = m2.`val` and m2.name ='material'
                        WHERE 1=1
                        AND a.code like concat(m2.code, '%')
            )
            <if test="unitNum > 0">
                and  c.code like concat(#{unitCode}, '%')
            </if>
            GROUP BY a.code

            UNION ALL

            SELECT
                d.id,
                d.code,
                e.val1 AS ac_nm,
                d.depth,
                f.parent_id,
                f.val AS parent_ac_nm,
                '' AS study_map_cd,
                CASE
                    WHEN a.code LIKE '%-reception-%' THEN 1
                    WHEN a.code LIKE '%-production-%' THEN 2
                    ELSE 3
                END AS code_seq
            FROM aidt_lcms.meta a
            INNER JOIN aidt_lcms.meta_meta_map b ON a.id = b.meta_id_b
            INNER JOIN aidt_lcms.meta c ON b.meta_id_a = c.id
            INNER JOIN aidt_lcms.meta d ON a.parent_id = d.id
            INNER JOIN aidt_lcms.meta_extension e ON d.meta_extension_id = e.meta_extension_id
            INNER JOIN aidt_lcms.meta f ON d.parent_id = f.id
            WHERE a.name = 'material'
            AND a.is_active = 1
            AND a.depth IN (2, 3, 4)
            AND EXISTS (
                        SELECT
                            1
                        FROM aidt_lcms.meta m
                        inner join aidt_lcms.textbook tb on m.id = tb.curriBook and tb.id = #{textbookId}
                        inner join aidt_lcms.meta m2 on m.`val` = m2.`val` and m2.name ='material'
                        WHERE 1=1
                        AND a.code like concat(m2.code, '%')
            )
            <if test="unitNum > 0">
                AND   c.code like concat(#{unitCode}, '%')
            </if>
            GROUP BY d.code
        ) T1
        LEFT JOIN (
            SELECT
                a.unit_num,
                a.meta_id,
                a.kwg_main_id,
                SUM(a.kwg_ach_num) AS kwg_ach_num,
                SUM(a.kwg_main_tot_exm_num) AS kwg_tot_num
            FROM aidt_lms.usd_ach_src2_kwg a
            WHERE   a.kwg_main_cd = 'material'
              and   a.cla_id      = #{claId}
              and   a.stdt_id     = #{userId}
              and   a.textbk_id   = #{textbookId}
            <if test="unitNum > 0">
              and   a.unit_num  = #{unitNum}
            </if>
              and a.std_dt = (
                select max(b.std_dt)
                from aidt_lms.usd_ach_src2_kwg b
                WHERE   1=1
                and b.kwg_main_cd = 'material'
                and b.cla_id      = #{claId}
                and b.textbk_id   = #{textbookId}
                and b.stdt_id     = #{userId}
                <if test="unitNum > 0">
                and b.unit_num    = #{unitNum}
                </if>
              )
            GROUP BY a.kwg_main_id
        ) T2 ON T1.id = T2.kwg_main_id
        GROUP BY T1.parent_id, T1.study_map_cd, T1.ac_nm, T1.depth
        ORDER BY T1.code_seq, T1.code, T1.depth
        ), depthTemp as(
            SELECT
                A.meta_id,
                A.parent_id,
                A.code,
                A.ac_nm as ma_nm,
                A.full_ma_nm,
                A.depth,
                A.study_map_cd,
                A.kwg_tot_count,
                A.code_seq,
                case
                    when A.depth = 3 and B.avg_usd_scr is not null then B.avg_usd_scr
                    when A.depth = 3 and B.avg_usd_scr is null then '-'
                    else A.usd_scr
                end as usd_scr
            FROM temp A
        LEFT JOIN (
            SELECT
                parent_id,
                ROUND(SUM(usd_scr) / COUNT(*),2) AS avg_usd_scr
            FROM temp
            WHERE depth = 4
            AND usd_scr NOT IN ('-', '0')
            GROUP BY parent_id
            ) B ON A.meta_id = B.parent_id
        )
        SELECT
            A.meta_id,
            A.parent_id,
            A.code,
            A.ma_nm,
            A.full_ma_nm,
            A.depth,
            A.study_map_cd,
            A.kwg_tot_count,
            case
                when A.depth = 2 and  B.avg_usd_scr is not null then B.avg_usd_scr
                when  A.depth = 2 and  B.avg_usd_scr is null then '-'
                else  A.usd_scr
            end as usd_scr
        FROM depthTemp A
        LEFT JOIN (
            SELECT
                parent_id,
                ROUND(SUM(usd_scr) / COUNT(*),2) AS avg_usd_scr
            FROM depthTemp
            WHERE depth = 3
            AND usd_scr NOT IN ('-', '0')
            GROUP BY parent_id
        ) B ON A.meta_id = B.parent_id
        ORDER BY A.code_seq, A.code, A.depth
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 학습맵 > 의사소통 CommunicationCount -->
    <select id="selectTchDsbdStdMapCommunicationCount" resultType="java.lang.Integer">
        /* StntSelfLrnMapper.selectTchDsbdStdMapCommunicationCount */
        select count(*)
        from    (
                select  a.unit_num, a.meta_id, a.kwg_main_id, sum(a.kwg_ach_num) as kwg_ach_num, sum(a.kwg_main_tot_exm_num) as kwg_tot_num
                from    aidt_lms.usd_ach_src2_kwg a
                where   a.kwg_main_cd = 'communication'
                  and   a.cla_id      = #{claId}
                  and   a.stdt_id     = #{userId}
                  and   a.textbk_id   = #{textbookId}
                <if test="unitNum > 0">
                  and   a.unit_num    = #{unitNum}
                </if>
                and a.std_dt = (
                    select max(b.std_dt)
                    from aidt_lms.usd_ach_src2_kwg b
                    where   1=1
                    and b.kwg_main_cd = 'communication'
                    and b.cla_id      = #{claId}
                    and b.textbk_id   = #{textbookId}
                    and b.stdt_id     = #{userId}
                    <if test="unitNum > 0">
                    and b.unit_num    = #{unitNum}
                    </if>
                )
                group by a.unit_num, a.meta_id, a.kwg_main_id, a.stdt_id
        ) T
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 학습맵 > 의사소통 CommunicationList -->
    <select id="selectStntDsbdStatusStudyMapCommunicationList" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectStntDsbdStatusStudyMapCommunicationList */
        WITH temp AS (
            SELECT
                T1.id AS meta_id,
                T1.parent_id,
                T1.code,
                T1.parent_ac_nm,
                T1.ac_nm,
                T1.code_seq,
                (case
                    when T1.depth = 2 then concat('[', T1.ac_nm ,']')
                    else T1.ac_nm
                end) as full_co_nm,
                T1.depth,
                T1.study_map_cd,
                CASE
                    WHEN IFNULL(ROUND((kwg_ach_num/kwg_tot_num)*100, 2), '-') = 0 THEN '-'
                    ELSE IFNULL(ROUND((SUM(kwg_ach_num)/SUM(kwg_tot_num))*100, 2), '-')
                END AS usd_scr,
                CASE
                    WHEN IFNULL(ROUND((kwg_ach_num/kwg_tot_num)*100, 2), '-') = 0 THEN '0'
                    ELSE IFNULL(kwg_tot_num, 0)
                END AS kwg_tot_count,
                T2.kwg_tot_num,
                T2.kwg_ach_num
            FROM (
                SELECT
                    a.id,
                    a.code,
                    a.val AS ac_nm,
                    a.depth,
                    a.parent_id,
                    '' AS parent_ac_nm,
                    c.code AS study_map_cd,
                    CASE
                        WHEN a.code LIKE '%-reception-%' THEN 1
                        WHEN a.code LIKE '%-production-%' THEN 2
                        ELSE 3
                    END AS code_seq
                FROM aidt_lcms.meta a
                INNER JOIN aidt_lcms.meta_meta_map b ON a.id = b.meta_id_b
                INNER JOIN aidt_lcms.meta c ON b.meta_id_a = c.id
                WHERE a.name = 'communication'
                AND a.is_active = 1
                AND a.depth IN (2, 3)
                AND EXISTS (
                            SELECT
                                1
                            FROM aidt_lcms.meta m
                            inner join aidt_lcms.textbook tb on m.id = tb.curriBook and tb.id = #{textbookId}
                            inner join aidt_lcms.meta m2 on m.`val` = m2.`val` and m2.name ='communication'
                            WHERE 1=1
                            AND a.code like concat(m2.code, '%')
                )
                <if test="unitNum > 0">
                    and  c.code like concat(#{unitCode}, '%')
                </if>
                GROUP BY a.code

            UNION ALL

            SELECT
                d.id,
                d.code,
                e.val1 AS ac_nm,
                d.depth,
                f.parent_id,
                f.val AS parent_ac_nm,
                '' AS study_map_cd,
                CASE
                    WHEN a.code LIKE '%-reception-%' THEN 1
                    WHEN a.code LIKE '%-production-%' THEN 2
                    ELSE 3
                END AS code_seq
            FROM aidt_lcms.meta a
            INNER JOIN aidt_lcms.meta_meta_map b ON a.id = b.meta_id_b
            INNER JOIN aidt_lcms.meta c ON b.meta_id_a = c.id
            INNER JOIN aidt_lcms.meta d ON a.parent_id = d.id
            INNER JOIN aidt_lcms.meta_extension e ON d.meta_extension_id = e.meta_extension_id
            INNER JOIN aidt_lcms.meta f ON d.parent_id = f.id
            WHERE a.name = 'communication'
            AND a.is_active = 1
            AND a.depth IN (2, 3)
            AND EXISTS (
                        SELECT
                            1
                        FROM aidt_lcms.meta m
                        inner join aidt_lcms.textbook tb on m.id = tb.curriBook and tb.id = #{textbookId}
                        inner join aidt_lcms.meta m2 on m.`val` = m2.`val` and m2.name ='communication'
                        WHERE 1=1
                        AND a.code like concat(m2.code, '%')
            )
            <if test="unitNum > 0">
                AND   c.code like concat(#{unitCode}, '%')
            </if>
            GROUP BY d.code
            ) T1
            LEFT JOIN (
                SELECT
                    a.unit_num,
                    a.meta_id,
                    a.kwg_main_id,
                    SUM(a.kwg_ach_num) AS kwg_ach_num,
                    SUM(a.kwg_main_tot_exm_num) AS kwg_tot_num
                FROM aidt_lms.usd_ach_src2_kwg a
                WHERE   a.kwg_main_cd = 'communication'
                  and   a.cla_id      = #{claId}
                  and   a.stdt_id     = #{userId}
                  and   a.textbk_id   = #{textbookId}
                <if test="unitNum > 0">
                  and   a.unit_num  = #{unitNum}
                </if>
                  and a.std_dt = (
                      select max(b.std_dt)
                      from aidt_lms.usd_ach_src2_kwg b
                      where   1=1
                        and b.kwg_main_cd = 'communication'
                        and b.cla_id      = #{claId}
                        and b.textbk_id   = #{textbookId}
                        and b.stdt_id     = #{userId}
                        <if test="unitNum > 0">
                        and b.unit_num    = #{unitNum}
                        </if>
                  )
                GROUP BY a.kwg_main_id
                ) T2 ON T1.id = T2.kwg_main_id
                GROUP BY T1.parent_id, T1.study_map_cd, T1.ac_nm, T1.depth
                ORDER BY T1.code_seq, T1.code, T1.depth
            )

            SELECT
                A.meta_id,
                A.parent_id,
                A.code,
                A.ac_nm as co_nm,
                A.full_co_nm,
                A.depth,
                A.study_map_cd,
                A.kwg_tot_count,
                case
                    when A.depth = 2 and  B.avg_usd_scr is not null then B.avg_usd_scr
                    when  A.depth = 2 and  B.avg_usd_scr is null then '-'
                    else  A.usd_scr
                end as usd_scr
            FROM temp A
            LEFT JOIN (
                SELECT
                    parent_id,
                    ROUND(SUM(usd_scr) / COUNT(*),2) AS avg_usd_scr
                FROM temp
                WHERE depth = 3
                AND usd_scr NOT IN ('-', '0')
                GROUP BY parent_id
            ) B ON A.meta_id = B.parent_id
            ORDER BY A.code_seq, A.code, A.depth
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 학습맵 > 언어 형식 LanguageFormatCount -->
    <select id="selectTchDsbdStdMapLanguageFormatCount" resultType="java.lang.Integer">
        /* StntSelfLrnMapper.selectTchDsbdStdMapLanguageFormatCount */
        select count(*)
        from    (
                select  a.unit_num, a.meta_id, a.kwg_main_id, sum(a.kwg_ach_num) as kwg_ach_num, sum(a.kwg_main_tot_exm_num) as kwg_tot_num
                from    aidt_lms.usd_ach_src2_kwg a
                where   a.kwg_main_cd = 'languageFormat'
                  and   a.cla_id      = #{claId}
                  and   a.stdt_id     = #{userId}
                  and   a.textbk_id   = #{textbookId}
                <if test="unitNum > 0">
                  and   a.unit_num    = #{unitNum}
                </if>
                  and a.std_dt = (
                      select max(b.std_dt)
                      from aidt_lms.usd_ach_src2_kwg b
                      where  1=1
                        and b.kwg_main_cd = 'languageFormat'
                        and b.cla_id     = #{claId}
                        and b.textbk_id  = #{textbookId}
                        and b.stdt_id    = #{userId}
                        <if test="unitNum > 0">
                        and b.unit_num   = #{unitNum}
                        </if>
                  )
                group by a.unit_num, a.meta_id, a.kwg_main_id, a.stdt_id
        ) T
    </select>
    
    <!-- [학생] 학급관리 > 홈 대시보드 > 학습맵 > 언어 형식 LanguageFormatList -->
    <select id="selectStntDsbdStudyMapLanguageFormatList" resultType="camelHashMap">
        /* StntDsbdMapper.selectStntDsbdStudyMapLanguageFormatList */
        WITH matched_patterns AS (
            SELECT DISTINCT
                SUBSTRING_INDEX(m2.code, '-', 1) AS code_pattern
            FROM aidt_lcms.meta m
            INNER JOIN aidt_lcms.textbook tb ON m.id = tb.curriBook AND tb.id = #{textbookId}
            INNER JOIN aidt_lcms.meta m2 ON m.val = m2.val AND m2.name = 'languageFormat'
        ),
             first_query AS (
                 SELECT
                     a.id,
                     a.code,
                     a.val AS ac_nm,
                     a.depth,
                     a.parent_id,
                     '' AS parent_ac_nm,
                     c.code AS study_map_cd,
                     CASE
                         WHEN a.code LIKE '%-reception-%' THEN 1
                         WHEN a.code LIKE '%-production-%' THEN 2
                         ELSE 3
                         END AS code_seq
                 FROM aidt_lcms.meta a
                          INNER JOIN aidt_lcms.meta_meta_map b ON a.id = b.meta_id_b
                          INNER JOIN aidt_lcms.meta c ON b.meta_id_a = c.id
                          INNER JOIN matched_patterns mp ON SUBSTRING_INDEX(a.code, '-', 1) = mp.code_pattern
                 WHERE a.name = 'languageFormat'
                   AND a.is_active = 1
                   AND a.depth IN (2, 3, 4)
                 GROUP BY a.code
             ),
             second_query AS (
                 SELECT
                     d.id,
                     d.code,
                     e.val1 AS ac_nm,
                     d.depth,
                     f.parent_id,
                     f.val AS parent_ac_nm,
                     '' AS study_map_cd,
                     CASE
                         WHEN a.code LIKE '%-reception-%' THEN 1
                         WHEN a.code LIKE '%-production-%' THEN 2
                         ELSE 3
                         END AS code_seq
                 FROM aidt_lcms.meta a
                          INNER JOIN aidt_lcms.meta_meta_map b ON a.id = b.meta_id_b
                          INNER JOIN aidt_lcms.meta c ON b.meta_id_a = c.id
                          INNER JOIN aidt_lcms.meta d ON a.parent_id = d.id
                          INNER JOIN aidt_lcms.meta_extension e ON d.meta_extension_id = e.meta_extension_id
                          INNER JOIN aidt_lcms.meta f ON d.parent_id = f.id
                          INNER JOIN matched_patterns mp ON SUBSTRING_INDEX(a.code, '-', 1) = mp.code_pattern
                 WHERE a.name = 'languageFormat'
                   AND a.is_active = 1
                   AND a.depth IN (2, 3, 4)
                 GROUP BY d.code
             ),
             combined_data AS (
                 SELECT * FROM first_query
                 UNION ALL
                 SELECT * FROM second_query
             ),
             temp AS (
                 SELECT
                     T1.id AS meta_id,
                     T1.parent_id,
                     T1.code,
                     T1.parent_ac_nm,
                     T1.ac_nm,
                     T1.code_seq,
                     (CASE
                          WHEN T1.depth = 2 THEN CONCAT('[', T1.ac_nm ,']')
                          ELSE T1.ac_nm
                         END) AS full_la_nm,
                     T1.depth,
                     T1.study_map_cd,
                     CASE
                         WHEN IFNULL(ROUND((kwg_ach_num/kwg_tot_num)*100, 2), '-') = 0 THEN '-'
                         ELSE IFNULL(ROUND((SUM(kwg_ach_num)/SUM(kwg_tot_num))*100, 2), '-')
                         END AS usd_scr,
                     CASE
                         WHEN IFNULL(ROUND((kwg_ach_num/kwg_tot_num)*100, 2), '-') = 0 THEN '0'
                         ELSE IFNULL(kwg_tot_num, 0)
                         END AS kwg_tot_count,
                     T2.kwg_tot_num,
                     T2.kwg_ach_num
                 FROM combined_data T1
                          LEFT JOIN (
                     SELECT
                         a.unit_num,
                         a.meta_id,
                         a.kwg_main_id,
                         SUM(a.kwg_ach_num) AS kwg_ach_num,
                         SUM(a.kwg_main_tot_exm_num) AS kwg_tot_num
                     FROM aidt_lms.usd_ach_src2_kwg a
                     WHERE a.kwg_main_cd = 'languageFormat'
                        and a.cla_id      = #{claId}
                        and a.textbk_id   = #{textbookId}
                        and a.stdt_id     = #{userId}
                        <if test="unitNum > 0">
                            and a.unit_num    = #{unitNum}
                        </if>
                       AND a.std_dt = (
                         SELECT MAX(b.std_dt)
                         FROM aidt_lms.usd_ach_src2_kwg b
                         WHERE b.kwg_main_cd = 'languageFormat'
                         and b.cla_id      = #{claId}
                         and b.textbk_id   = #{textbookId}
                         and b.stdt_id     = #{userId}
                         <if test="unitNum > 0">
                            and b.unit_num    = #{unitNum}
                         </if>
                     )
                     GROUP BY a.kwg_main_id
                 ) T2 ON T1.id = T2.kwg_main_id
                 GROUP BY T1.parent_id, T1.study_map_cd, T1.ac_nm, T1.depth
                 ORDER BY T1.code_seq, T1.code, T1.depth
             )

        SELECT
            A.meta_id,
            A.parent_id,
            A.code,
            A.ac_nm AS la_nm,
            A.full_la_nm,
            A.depth,
            A.study_map_cd,
            A.kwg_tot_count,
            CASE
                WHEN A.depth = 3 AND B.avg_usd_scr IS NOT NULL THEN B.avg_usd_scr
                WHEN A.depth = 3 AND B.avg_usd_scr IS NULL THEN '-'
                ELSE A.usd_scr
            END AS usd_scr
        FROM temp A
        LEFT JOIN (
            SELECT
                meta_id,
                parent_id,
                ROUND(SUM(usd_scr) / COUNT(*),2) AS avg_usd_scr
            FROM temp
            WHERE depth IN (3,4)
            AND usd_scr NOT IN ('-', '0')
            GROUP BY meta_id
            ) B ON A.meta_id = B.meta_id
        ORDER BY A.code_seq, A.code, A.depth;
    </select>

    <select id="selectStdDsbdSummaryEng" parameterType="map" resultType="camelHashMap">
        /* StntDsbdMapper.selectStdDsbdSummaryEng */
        select
            (
                select
                    DATE_FORMAT(A.mdfy_dt, "%Y-%m-%d %H:%i:%s") as rcntClsDt
                from (
                    select
                        max(mdfy_dt) as mdfy_dt
                    from aidt_lms.std_lastlesson
                    where cla_id  = #{claId}
                    and textbk_id =  #{textbookId}
                    and wrter_id  = #{userId}
                ) AS A
            ) AS rcntClsDt,
            (
                <include refid="incStntDsdbSearch"></include>
                select a.id_path_nm from curriculum a
                where a.`key` = (
                        select crcul_id from aidt_lms.std_lastlesson
                        where textbk_id = #{textbookId}
                        and cla_id = #{claId}
                        and wrter_id = #{userId}
                    )
            ) as rcntClsCurri,
            (with baseData as (select buildData.*
                                from (select if(sdrd.sub_mit_anw is not null or sdrd.sub_mit_anw_url is not null or
                                                sdrd.tch_errata_chg_at = 'Y', 'Y', 'N') as subm_at
                                           , sdrd.mrk_ty
                                           , sdrd.errata
                                        from aidt_lms.tab_info ti
                                                 inner join aidt_lms.std_dta_result_info sdri on sdri.textbk_tab_id = ti.id
                                                 inner join aidt_lms.std_dta_result_detail sdrd
                                                            on sdrd.dta_result_id = sdri.id
                                                                and sdrd.src_detail_id = 0 /* 다른 문제 풀기 제외 */
                                       where ti.id = (select id
                                                        from aidt_lms.tab_info
                                                       where crcul_id = (select crcul_id
                                                                           from aidt_lms.tc_lastlesson
                                                                          where textbk_id = #{textbookId}
                                                                            and cla_id = #{claId}
                                                                            and wrter_id = (select user_id
                                                                                              from aidt_lms.tc_cla_mb_info
                                                                                             where cla_id = #{claId}
                                                                                               and stdt_id = #{userId}
                                                                                               and actvtn_at = 'Y'))
                                                         and textbk_id = #{textbookId}
                                                         and cla_id = #{claId}
                                                         and setCategory = 31
                                                         and tab_nm = '교과서'
                                                       limit 1)

                                         and sdri.mamoym_id = #{userId}) as buildData
                               where buildData.subm_at = 'Y')
             select round((select count(*) from baseData where errata = 1) / count(*) * 100,0)
               from baseData) as usdAchScr
    </select>

    <!-- (영어) 가장 최근 수업 정보 및 요약 현황 -->
    <select id="selectStdDsbdSummaryEng_back" parameterType="map" resultType="camelHashMap">
        /* StntDsbdMapper.selectStdDsbdSummaryEng_back */
        select
            (
                <include refid="incStntDsdbSearch"></include>
                select a.id_path_nm from curriculum a
                where a.`key` = (
                    select crcul_id from aidt_lms.tc_lastlesson
                    where textbk_id = #{textbookId}
                      and cla_id = #{claId}
                      and wrter_id = (select user_id from aidt_lms.tc_cla_mb_info
                                        where cla_id = #{claId} and stdt_id = #{userId} and actvtn_at = 'Y')
                )
            ) as rcntClsCurri,
        (
            select
                c.usd_ach_scr
            from aidt_lms.tc_cla_mb_info a
            join aidt_lms.stdt_reg_info b
                on a.stdt_id = b.user_id
            inner join (
                         select
                                  x.stdt_id
                                 , round((sum(x.usd_ach_scr)/sum(x.rflt_actv_cnt)),0) as usd_ach_scr
                          from (
                               select stdt_id
                                      ,sum(usd_ach_scr)*100 as usd_ach_scr
                                      ,sum(rflt_actv_cnt) as rflt_actv_cnt
                               from aidt_lms.usd_ach_src2_info a
                               where 1 = 1
                                 and std_dt = (select max(std_dt)
                                               from aidt_lms.usd_ach_src2_info
                                               where cla_id = #{claId}
                                                 and textbk_id = #{textbookId}
                                                 and stdt_id = #{userId})
                                 and cla_id = #{claId}
                                 and textbk_id = #{textbookId}
                                 and stdt_id = #{userId}
                                 and meta_id in (select d.id
                                                 from aidt_lms.tc_lastlesson b
                                                          inner join aidt_lcms.textbookcurriculum_meta_map c
                                                                     on b.textbk_idx_id = c.textbookIndex_id
                                                                         and b.crcul_id = c.`key`
                                                                         and c.meta_name = 'studyMap1'
                                                          inner join aidt_lcms.meta d
                                                                     on c.meta_id = d.id
                                                 where 1 = 1
                                                   and b.wrter_id = (select user_id from aidt_lms.tc_cla_mb_info
                                                                        where cla_id = #{claId} and stdt_id = #{userId} and actvtn_at = 'Y')
                                                   and b.textbk_id = #{textbookId}
                                                   and b.cla_id = #{claId})
                                 and usd_ach_id in ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')
                                 and usd_tg_id = (
                                                    select crcul_id
                                                      from aidt_lms.tc_lastlesson
                                                     where textbk_id = #{textbookId}
                                                       and cla_id = #{claId}
                                                       and wrter_id = (select
                                                                            user_id
                                                                         from aidt_lms.tc_cla_mb_info
                                                                        where cla_id = #{claId}
                                                                          and stdt_id = #{userId} and actvtn_at = 'Y')
                                                 )
                               union all
                               select stdt_id
                                      ,sum(b.usd_ach_scr)*100 as usd_ach_scr
                                      ,sum(b.rflt_actv_cnt) as rflt_actv_cnt
                               from aidt_lms.usd_ach_src2_info a
                                        inner join aidt_lms.usd_ach_src2_detail b
                                                   on a.id = b.usd_ach_src_id
                               where 1 = 1
                                 and a.usd_ach_id in ('vocabulary', 'grammar') -- , 'pronunciation'
                                 and a.stdt_id = #{userId}
                                 and a.textbk_id = #{textbookId}
                                 and a.cla_id = #{claId}
                                 and a.std_dt = (select max(std_dt)
                                                 from aidt_lms.usd_ach_src2_info
                                                 where cla_id = #{claId}
                                                   and textbk_id = #{textbookId}
                                                   and stdt_id = #{userId})
                                 and a.meta_id in (select d.id
                                                   from aidt_lms.tc_lastlesson  b
                                                            inner join aidt_lcms.textbookcurriculum_meta_map c
                                                                       on b.textbk_idx_id = c.textbookIndex_id
                                                                           and b.crcul_id = c.`key`
                                                                           and c.meta_name = 'studyMap1'
                                                            inner join aidt_lcms.meta d
                                                                       on c.meta_id = d.id
                                                   where 1 = 1
                                                     and b.wrter_id = (select user_id from aidt_lms.tc_cla_mb_info
                                                                        where cla_id = #{claId} and stdt_id = #{userId} and actvtn_at = 'Y')
                                                     and b.textbk_id = #{textbookId}
                                                     and b.cla_id = #{claId})
                                and usd_tg_id = (
                                                select crcul_id
                                                  from aidt_lms.tc_lastlesson
                                                 where textbk_id = #{textbookId}
                                                   and cla_id = #{claId}
                                                   and wrter_id = (select
                                                                         user_id
                                                                    from aidt_lms.tc_cla_mb_info
                                                                   where cla_id = #{claId}
                                                                    and stdt_id = #{userId} and actvtn_at = 'Y')
                                                                  )
                               union all
                               select stdt_id
                                      ,sum(b.usd_ach_scr) as usd_ach_scr
                                      ,sum(b.rflt_actv_cnt) as rflt_actv_cnt
                               from aidt_lms.usd_ach_src2_info a
                                        inner join aidt_lms.usd_ach_src2_detail b
                                                   on a.id = b.usd_ach_src_id
                               where 1 = 1
                                 and a.usd_ach_id = 'pronunciation'
                                 and a.stdt_id = #{userId}
                                 and a.textbk_id = #{textbookId}
                                 and a.cla_id = #{claId}
                                 and a.std_dt = (select max(std_dt)
                                                 from aidt_lms.usd_ach_src2_info
                                                 where cla_id = #{claId}
                                                   and textbk_id = #{textbookId}
                                                   and stdt_id = #{userId}
                                     )
                                 and a.meta_id in (select d.id
                                                   from aidt_lms.tc_lastlesson  b
                                                            inner join aidt_lcms.textbookcurriculum_meta_map c
                                                                       on b.textbk_idx_id = c.textbookIndex_id
                                                                           and b.crcul_id = c.`key`
                                                                           and c.meta_name = 'studyMap1'
                                                            inner join aidt_lcms.meta d
                                                                       on c.meta_id = d.id
                                                   where 1 = 1
                                                     and b.wrter_id = (select user_id from aidt_lms.tc_cla_mb_info
                                                                        where cla_id = #{claId} and stdt_id = #{userId} and actvtn_at = 'Y')
                                                     and b.textbk_id = #{textbookId}
                                                     and b.cla_id = #{claId})
                                and usd_tg_id = (
                                                select crcul_id
                                                  from aidt_lms.tc_lastlesson
                                                 where textbk_id = #{textbookId}
                                                   and cla_id = #{claId}
                                                   and wrter_id = (select
                                                                        user_id
                                                                     from aidt_lms.tc_cla_mb_info
                                                                    where cla_id = #{claId}
                                                                     and stdt_id = #{userId} and actvtn_at = 'Y')
                                                                   )
                               ) x
                            group by x.stdt_id
            ) c on a.stdt_id = c.stdt_id
            where 1=1
            and a.cla_id = #{claId}
            and a.actvtn_at = 'Y'
            ) as usdAchScr
        from dual
    </select>

    <!-- (영어) 학생의 단원 성취도 조회-->
    <select id="selectStdDsbdEngAchievementInfo" parameterType="map" resultType="camelHashMap">
    /* StntDsbdMapper.selectStdDsbdEngAchievementInfo */
        select
            (
                <include refid="incStntDsdbSearch"></include>
                select a.id_path_nm from curriculum a
                where a.`key` = (
                    select crcul_id from aidt_lms.tc_lastlesson
                    where textbk_id = #{textbookId}
                      and cla_id = #{claId}
                      and wrter_id = (select user_id from aidt_lms.tc_cla_mb_info
                                        where cla_id = #{claId} and stdt_id = #{userId} and actvtn_at = 'Y')
                )
            ) as rcntClsCurri,
        (
            select
                c.usd_ach_scr
            from aidt_lms.tc_cla_mb_info a
            join aidt_lms.stdt_reg_info b
                on a.stdt_id = b.user_id
            inner join (
                 select
                          x.stdt_id
                         , round((sum(x.usd_ach_scr)/sum(x.rflt_actv_cnt)),0) as usd_ach_scr
                  from (
                       select stdt_id
                              ,sum(usd_ach_scr)*100 as usd_ach_scr
                              ,sum(rflt_actv_cnt) as rflt_actv_cnt
                       from aidt_lms.usd_ach_src2_info a
                       where 1 = 1
                         and std_dt = (select max(std_dt)
                                       from aidt_lms.usd_ach_src2_info
                                       where cla_id = #{claId}
                                         and textbk_id = #{textbookId}
                                         and stdt_id = #{userId})
                         and cla_id = #{claId}
                         and textbk_id = #{textbookId}
                         and stdt_id = #{userId}
                         and meta_id = #{metaId}
                         and usd_ach_id in ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')

                       union all

                       select stdt_id
                              ,sum(b.usd_ach_scr)*100 as usd_ach_scr
                              ,sum(b.rflt_actv_cnt) as rflt_actv_cnt
                       from aidt_lms.usd_ach_src2_info a
                                inner join aidt_lms.usd_ach_src2_detail b
                                           on a.id = b.usd_ach_src_id
                       where 1 = 1
                         and a.usd_ach_id in ('vocabulary', 'grammar') -- , 'pronunciation'
                         and a.stdt_id = #{userId}
                         and a.textbk_id = #{textbookId}
                         and a.cla_id = #{claId}
                         and a.std_dt = (select max(std_dt)
                                         from aidt_lms.usd_ach_src2_info
                                         where cla_id = #{claId}
                                           and textbk_id = #{textbookId}
                                           and stdt_id = #{userId})
                         and a.meta_id = #{metaId}

                       union all

                       select stdt_id
                              ,sum(b.usd_ach_scr) as usd_ach_scr
                              ,sum(b.rflt_actv_cnt) as rflt_actv_cnt
                       from aidt_lms.usd_ach_src2_info a
                                inner join aidt_lms.usd_ach_src2_detail b
                                           on a.id = b.usd_ach_src_id
                       where 1 = 1
                         and a.usd_ach_id = 'pronunciation'
                         and a.stdt_id = #{userId}
                         and a.textbk_id = #{textbookId}
                         and a.cla_id = #{claId}
                         and a.std_dt = (select max(std_dt)
                                         from aidt_lms.usd_ach_src2_info
                                         where cla_id = #{claId}
                                           and textbk_id = #{textbookId}
                                           and stdt_id = #{userId}
                             )
                         and a.meta_id = #{metaId}
                       ) x
                    group by x.stdt_id
            ) c on a.stdt_id = c.stdt_id
            where 1=1
            and a.cla_id = #{claId}
            and a.actvtn_at = 'Y'
            ) as usdAchScr
        from dual
    </select>

    <!--(수학) 최근 수업 정보, 최근 수업 이해도-->
    <select id="selectStdDsbdSummaryMath" parameterType="map" resultType="camelHashMap">
        /* StntDsbdMapper.selectStdDsbdSummaryMath */
        select
            (
                select
                    DATE_FORMAT(A.mdfy_dt, "%Y-%m-%d %H:%i:%s") as rcntClsDt
                from (
                    select
                        max(mdfy_dt) as mdfy_dt
                    from aidt_lms.std_lastlesson
                    where cla_id    = #{claId}
                    and textbk_id   = #{textbookId}
                    and wrter_id    = #{userId}
                ) AS A
            ) AS rcntClsDt,
            (
                <include refid="incStntDsdbSearch"></include>
                select a.id_path_nm from curriculum a
                where a.`key` = (
                    select
                        crcul_id
                    from aidt_lms.std_lastlesson
                    where cla_id    = #{claId}
                    and textbk_id   = #{textbookId}
                    and wrter_id    = #{userId}
                )
            ) as rcntClsCurri,
            (
                with baseData as(
                    select buildData.*
                    from (
                        select if(sdrd.sub_mit_anw is not null or sdrd.sub_mit_anw_url is not null or
                            sdrd.tch_errata_chg_at = 'Y', 'Y', 'N') as subm_at
                            , sdrd.mrk_ty
                            , sdrd.errata
                        from aidt_lms.tab_info ti
                        inner join aidt_lms.std_dta_result_info sdri on sdri.textbk_tab_id = ti.id
                        inner join aidt_lms.std_dta_result_detail sdrd
                            on sdrd.dta_result_id = sdri.id
                            and sdrd.src_detail_id = 0 /* 다른 문제 풀기 제외 */
                        where ti.id = (
                                        select id
                                        from aidt_lms.tab_info
                                        where crcul_id = (
                                                            select crcul_id
                                                            from aidt_lms.tc_lastlesson
                                                            where textbk_id = #{textbookId}
                                                            and cla_id = #{claId}
                                                            and wrter_id = (
                                                                            select user_id
                                                                            from aidt_lms.tc_cla_mb_info
                                                                            where cla_id = #{claId}
                                                                            and stdt_id = #{userId}
                                                                            and actvtn_at = 'Y'
                                                            )
                                        )
                                        and textbk_id = #{textbookId}
                                        and cla_id = #{claId}
                                        and setCategory = 31
                                        and tab_nm = '교과서'
                                        limit 1
                            )
                        and sdri.mamoym_id = #{userId}
                    ) as buildData
                    where buildData.subm_at = 'Y'
                )
                select round((select count(*) from baseData where errata = 1) / count(*) * 100,0)
                from baseData
            ) as usdAchScr
        from dual
    </select>

    <select id="findStntDsbdEvlTaskBbsList" parameterType="map" resultType="camelHashMap">
        /* StntDsbdMapper.findStntDsbdEvlTaskList */
        select x.gb
             , x.id
             , x.name
             , x.rcntDt
             , x.endDt
        from (select 'evl'                                           as gb
                   , ei.id                                           as id
                   , ei.evl_nm                                       as name
                   , DATE_FORMAT(ei.evl_prg_dt, "%Y-%m-%d %H:%i:%s") as rcntDt
                   , DATE_FORMAT(ei.evl_cp_dt, "%Y-%m-%d %H:%i:%s")  as endDt
              from aidt_lms.evl_info ei
                       join aidt_lms.evl_result_info eri on eri.evl_id = ei.id
              where ei.tmpr_strg_at = 'N'
                and eri.mamoym_id =  #{userId}
                and ei.cla_id =      #{claId}
                and ei.textbook_id = #{textbookId}
                and ei.evl_stts_cd = 2

              union all

              select 'task'                                           as gb
                   , ti.id                                            as id
                   , ti.task_nm                                       as name
                   , DATE_FORMAT(ti.task_prg_dt, "%Y-%m-%d %H:%i:%s") as rcntDt
                   , DATE_FORMAT(ti.task_cp_dt, "%Y-%m-%d %H:%i:%s")  as endDt
              from aidt_lms.task_info ti
                       join aidt_lms.task_result_info tri on tri.task_id = ti.id
              where ti.tmpr_strg_at = 'N'
                and tri.mamoym_id = #{userId}
                and ti.cla_id =     #{claId}
                and ti.textbk_id =  #{textbookId}
                and ti.task_stts_cd = 2

              union all

              select 'bbs'                                           as gb
                   , cb.ntt_id                                       as id
                   , cb.ntt_sj                                       as name
                   , DATE_FORMAT(cb.ntce_bgnde, "%Y-%m-%d %H:%i:%s") as rcntDt
                   , DATE_FORMAT(cb.ntce_endde, "%Y-%m-%d %H:%i:%s") as endDt
              from aidt_lms.cla_bbsmaster cbm
                  join aidt_lms.cla_bbs cb on cbm.bbs_id = cb.bbs_id
                  join aidt_lms.cla_bbs_stnt cbs on cb.ntt_id = cbs.ntt_id
              where cbs.mamoym_id = #{userId}
                and cbm.cla_id = #{claId}
                and cbm.textbk_id = #{textbookId}
                and (NOW() BETWEEN cb.ntce_bgnde AND cb.ntce_endde)
              ) x
        order by x.rcntDt desc
    </select>

    <select id="selectStdDsbdEval" parameterType="map" resultType="camelHashMap" >
        /* stntDsbdMapper.selectStdDsbdEval */
        select
            COUNT(*) over () AS full_count
             , ei.id as evlId
             , ei.evl_nm
             , DATE_FORMAT(ei.evl_prg_dt, "%Y-%m-%d %H:%i:%s") as rcntEvlDt
             , DATE_FORMAT(ei.evl_cp_dt, "%Y-%m-%d %H:%i:%s") as evlEndDt
             , ei.evl_stts_cd
             , aidt_lms.F_CODE_NM('evl_stts_cd', ei.evl_stts_cd) AS evl_stts_nm
             , eri.subm_at
             , ei.rpt_othbc_at
        from
            aidt_lms.evl_info ei
                join aidt_lms.evl_result_info eri on eri.evl_id = ei.id
        where ei.tmpr_strg_at = 'N'
          and eri.mamoym_id = #{userId}
          and ei.cla_id = #{claId}
          and ei.textbook_id = #{textbookId}
          and ei.evl_stts_cd = 2
        order by
            case when ei.evl_stts_cd > 1 then evl_prg_dt END DESC
        limit 1
    </select>

    <select id="selectStdDsbdTask" parameterType="map" resultType="camelHashMap" >
        /* stntDsbdMapper.selectStdDsbdTask */
        select
            COUNT(*) over () AS full_count
             , ti.id as taskId
             , ti.task_nm
             , DATE_FORMAT(ti.task_prg_dt, "%Y-%m-%d %H:%i:%s") as rcntTaskDt
             , DATE_FORMAT(ti.task_cp_dt, "%Y-%m-%d %H:%i:%s") as taskEndDt
             , ti.task_stts_cd
             , aidt_lms.F_CODE_NM('task_stts_cd', ti.task_stts_cd) AS task_stts_nm
             , tri.subm_at
             , ti.rpt_othbc_at
        from
            aidt_lms.task_info ti
                join aidt_lms.task_result_info tri on tri.task_id = ti.id
        where ti.tmpr_strg_at = 'N'
          and tri.mamoym_id = #{userId}
          and ti.cla_id = #{claId}
          and ti.textbk_id = #{textbookId}
          and ti.task_stts_cd = 2
        order by
            case when ti.task_stts_cd > 1 then task_prg_dt END DESC
        limit 1
    </select>

    <!-- [학생] 학급관리 > 홈 대시보드 > 학습맵 > 성취 기준(수학) -->
    <select id="selectStntDsbdStdMapMathAchievementStandardList" parameterType="map" resultType="camelHashMap">
        /* stntDsbdMapper.selectStntDsbdStdMapMathAchievementStandardList */
        select
            c.val as contentAreaNm,
            a.achStdCd,
            a.achStdNm,
            a.meta_id,
            a.kwg_main_info,
            a.avg_usd_scr
        from
        (
            select
                a.val4 as achStdCd, /* 성취기준 코드 */
                a.val5 as achStdNm, /* 성취기준 명 */
                a.meta_id,
                GROUP_CONCAT(json_object('kwgMainId',a.kwg_main_id,'kwgMainNm',a.kwg_main_nm,'usdScr',ifnull(round(b.usd_scr,0),'-')) order by a.ordNum SEPARATOR '|') as kwg_main_info,
                ifnull(round(avg(b.usd_scr),0),'-') as avg_usd_scr
            from
                (
                    with recursive curriculum as (
                        select
                            b.id,
                            b.parent_id,
                            b.`code`,
                            b.name,
                            b.val,
                            cast(b.id as char(1000) character set utf8) as pk_path,
                            cast(b.`code` as char(1000) character set utf8) as id_path,
                            (b.depth -1) as depth,
                            b.meta_extension_id
                        from
                            aidt_lcms.meta a
                            inner join aidt_lcms.meta b
                               on a.`code` = b.description
                                   and b.is_active = 1
                                   and b.name = 'studyMap1'
                            inner join aidt_lcms.meta c
                               on c.id = b.parent_id
                                   and c.is_active = 1
                        where
                            1=1
                            and a.parent_id = (select curriBook from aidt_lcms.textbook where id = #{textbookId})
                            and a.is_active = 1
                            <if test="metaId > 0">
                            and b.id = #{metaId} /* 단원별 */
                            </if>
                        union all
                        select
                            b.id,
                            b.parent_id,
                            b.`code`,
                            b.name,
                            b.val,
                            concat(c.pk_path, ',', b.id) as pk_path,
                            concat(c.id_path, ' > ', b.`code`) as id_path,
                            1 + c.depth as depth,
                            b.meta_extension_id
                        from
                            aidt_lcms.meta b
                            inner join curriculum c
                                on c.id = b.parent_id
                                    and b.is_active = 1
                        where
                            b.name <![CDATA[<>]]> 'studyMap_2'
                    )
                    select
                        row_number() over () as ordNum,
                        me.val4,
                        me.val5,
                        CAST(SUBSTRING_INDEX(cc.pk_path,',',1) as unsigned) as meta_id, /* 대단원 ID */
                        cc.id as kwg_main_id,  /* 지식요인 ID */
                        cc.val as kwg_main_nm /* 지식요인 명 */
                    from
                        curriculum cc
                        left join aidt_lcms.meta_extension me
                            on cc.meta_extension_id = me.meta_extension_id
                    where 1=1
                        and cc.meta_extension_id is not null
                    order by
                        cc.id_path
                ) a
                left join (
                    select
                        b.meta_id,
                        b.kwg_main_id,
                        b.usd_scr
                    from aidt_lms.std_usd_info b
                    where 1=1
                      and b.textbk_id = #{textbookId}
                      and b.cla_id = #{claId}
                      and b.stdt_id = #{userId}
                ) b
                  on a.meta_id = b.meta_id
                      and a.kwg_main_id = b.kwg_main_id
            group by a.val4, a.val5, a.meta_id
        ) a
        left join aidt_lcms.meta_meta_map b
            on a.meta_id = b.meta_id_a
        left join aidt_lcms.meta c
            on b.meta_name_b = 'contentArea' and b.meta_id_b = c.id	/* 영역 */
    </select>

    <select id="selectStntDsbdAreaAchievementStudentDistributionSummary" parameterType="map" resultType="camelHashMap">
        /* stntDsbdMapper.selectStntDsbdAreaAchievementStudentDistributionSummary */
        WITH student_data AS (
            SELECT
                CASE
                    WHEN a.code IN ('listening', 'reading', 'viewing') THEN 'understanding'
                    WHEN a.code IN ('speaking', 'writing', 'presenting') THEN 'expression'
                    <choose>
                        <when test="textbookId != '6981' and textbookId != '6982'">
                            WHEN a.code IN ('pronunciation', 'grammar', 'vocabulary') THEN 'language'
                        </when>
                        <otherwise>
                            WHEN a.code IN ('pronunciation', 'vocabulary') THEN 'language'
                        </otherwise>
                    </choose>
                END AS category,
                CASE
                    WHEN a.code IN ('listening', 'reading', 'viewing') THEN 1
                    WHEN a.code IN ('speaking', 'writing', 'presenting') THEN 2
                    WHEN a.code = 'vocabulary' THEN 3
                    <choose>
                        <when test="textbookId != '6981' and textbookId != '6982'">
                            WHEN a.code = 'grammar' THEN 4
                        </when>
                    </choose>
                    WHEN a.code = 'pronunciation' THEN 5
                    END AS category_order,
                a.code,
                a.val as code_nm,
                IFNULL(b.usd_ach_scr, 0) as usd_ach_scr,
                IFNULL(b.rflt_actv_cnt, 0) as rflt_actv_cnt,
                IFNULL(b.usd_ach_scr_percent, 0) as student_percent,
                IFNULL(std_at, 'N') as std_at
            FROM (
                     SELECT id, code, val
                     FROM aidt_lcms.meta
                     WHERE name IN ('evaluationArea','contentsItem','evaluationArea3')
                       AND brand_id = '3'
                 ) a
             LEFT JOIN (
                SELECT
                    usd_ach_id,
                    sum(c.usd_ach_scr) as usd_ach_scr,
                    sum(c.rflt_actv_cnt) as rflt_actv_cnt,
                    CASE
                        WHEN c.usd_ach_id IN ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')
                            THEN round((sum(c.usd_ach_scr_percent) * 100 / count(c.stdt_id)), 2)
                        WHEN c.usd_ach_id = 'pronunciation'
                            THEN round(avg(c.usd_ach_scr_percent), 2)
                        ELSE round((avg(c.usd_ach_scr_percent) * 100), 2)
                        END as usd_ach_scr_percent,
                    c.std_at
                FROM (
                         SELECT
                             usd_ach_id,
                             sum(usd_ach_scr) as usd_ach_scr,
                             sum(rflt_actv_cnt) as rflt_actv_cnt,
                             sum(usd_ach_scr)/NULLIF(sum(rflt_actv_cnt), 0) as usd_ach_scr_percent,
                             stdt_id,
                            (case when sum(rflt_actv_cnt) > 0 then 'Y' else 'N' end) as std_at
                         FROM aidt_lms.usd_ach_src2_info
                         WHERE usd_ach_id IN ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')
                           AND cla_id = #{claId}
                           AND textbk_id = #{textbookId}
                           AND stdt_id = #{userId}
                           AND std_dt = (
                             SELECT max(dt.std_dt)
                             FROM aidt_lms.usd_ach_src2_info dt
                             WHERE dt.cla_id = #{claId}
                               AND dt.textbk_id = #{textbookId}
                         )
                         GROUP BY usd_ach_id, stdt_id

                         UNION ALL
                         SELECT
                             b.usd_ach_id,
                             sum(b.usd_ach_scr) as usd_ach_scr,
                             sum(b.rflt_actv_cnt) as rflt_actv_cnt,
                             AVG(b.usd_ach_scr_percent) as usd_ach_scr_percent,
                             b.stdt_id,
                             b.std_at
                         FROM (
                                  SELECT
                                      a.usd_ach_id,
                                      sum(a.usd_ach_scr) as usd_ach_scr,
                                      sum(a.rflt_actv_cnt) as rflt_actv_cnt,
                                      AVG(a.usd_ach_scr_percent) as usd_ach_scr_percent,
                                      a.stdt_id,
                                      a.std_at
                                  FROM (
                                           SELECT
                                               a.usd_ach_id,
                                               b.iem_id,
                                               b.iem_cd,
                                               sum(b.usd_ach_scr) as usd_ach_scr,
                                               sum(b.rflt_actv_cnt) as rflt_actv_cnt,
                                               sum(b.usd_ach_scr)/NULLIF(sum(b.rflt_actv_cnt), 0) as usd_ach_scr_percent,
                                               a.stdt_id,
                                               (case when sum(b.rflt_actv_cnt) > 0 then 'Y' else 'N' end) as std_at
                                           FROM aidt_lms.usd_ach_src2_info a
                                                    INNER JOIN aidt_lms.usd_ach_src2_detail b
                                                               ON a.id = b.usd_ach_src_id
                                           WHERE 1=1
                                            <choose>
                                                <when test="textbookId == 6981 or textbookId == 6982">
                                                    AND a.usd_ach_id IN ('vocabulary', 'pronunciation')
                                                </when>
                                                <otherwise>
                                                    AND a.usd_ach_id IN ('vocabulary', 'grammar', 'pronunciation')
                                                </otherwise>
                                            </choose>
                                             AND a.cla_id = #{claId}
                                             AND a.textbk_id = #{textbookId}
                                             AND a.stdt_id = #{userId}
                                             AND a.std_dt = (
                                               SELECT max(dt.std_dt)
                                               FROM aidt_lms.usd_ach_src2_info dt
                                               WHERE dt.cla_id = #{claId}
                                                 AND dt.textbk_id = #{textbookId}
                                           )
                                           GROUP BY a.usd_ach_id, a.stdt_id, b.iem_cd
                                       ) a
                                  GROUP BY a.usd_ach_id, a.iem_id
                              ) b
                         GROUP BY b.usd_ach_id
                     ) c
                GROUP BY c.usd_ach_id
            ) b ON a.code = b.usd_ach_id
        ),
             achievement_summary AS (
                 SELECT
                     code,
                     code_nm,
                     usd_ach_scr,
                     rflt_actv_cnt,
                     student_percent,
                     std_at,
                     sort_order
                 FROM (
                          /* 이해 영역 */
                          SELECT
                              'understanding' as code,
                              '이해' as code_nm,
                              SUM(usd_ach_scr) as usd_ach_scr,
                              SUM(rflt_actv_cnt) as rflt_actv_cnt,
                              ROUND(AVG(student_percent), 2) as student_percent,
                              MAX(std_at) as std_at,
                              1 as sort_order
                          FROM student_data
                          WHERE category = 'understanding'
                            AND std_at = 'Y'

                          UNION ALL

                          /* 표현 영역 */
                          SELECT
                              'expression' as code,
                              '표현' as code_nm,
                              SUM(usd_ach_scr) as usd_ach_scr,
                              SUM(rflt_actv_cnt) as rflt_actv_cnt,
                              ROUND(AVG(student_percent), 2) as student_percent,
                              MAX(std_at) as std_at,
                              2 as sort_order
                          FROM student_data
                          WHERE category = 'expression'
                           AND std_at = 'Y'

                          UNION ALL

                          /* 단어 문법 발음 */
                          SELECT
                              code,
                              code_nm,
                              usd_ach_scr as usd_ach_scr,
                              rflt_actv_cnt as rflt_actv_cnt,
                              ROUND(student_percent, 2) as student_percent,
                              std_at,
                              category_order as sort_order
                          FROM student_data
                          WHERE 1=1
                        <choose>
                            <when test="textbookId == 6981 or textbookId == 6982">
                                AND code IN ('vocabulary', 'pronunciation')
                            </when>
                            <otherwise>
                                AND code IN ('vocabulary', 'grammar', 'pronunciation')
                            </otherwise>
                        </choose>
                      ) result
             ),
             min_max_values AS (
                 SELECT
                     MIN(student_percent) AS min_value,
                     MAX(student_percent) AS max_value
                 FROM
                     achievement_summary
                 WHERE std_at = 'Y'
             )
        SELECT
            (SELECT flnm FROM aidt_lms.stdt_reg_info WHERE user_id = #{userId}) AS flnm,
            #{userId} AS stdt_id,
            code,
            code_nm,
            student_percent AS usd_ach_scr_percent,
            CASE
                WHEN student_percent = (SELECT max_value FROM min_max_values) THEN 'high'
                WHEN student_percent = (SELECT min_value FROM min_max_values) THEN 'low'
                END AS diff_type
        FROM
            achievement_summary
        where 1=1
          AND (
            student_percent = (SELECT max_value FROM min_max_values)
                OR student_percent = (SELECT min_value FROM min_max_values)
            )
        ORDER BY
            diff_type;
    </select>

    <!--학생의 학습이력있는 단원번호 조회 -->
    <select id="selectStntLearnedUnitList" resultType="camelHashMap">
        SELECT learnedUnitNum
        FROM (SELECT s.unit_num AS learnedUnitNum
              FROM (SELECT a.unit_num
                    FROM aidt_lms.usd_ach_src2_info a
                    WHERE usd_ach_id IN ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')
                        AND cla_id = #{claId}
                        AND textbk_id = #{textbookId}
                        AND stdt_id = #{userId}
                        AND std_dt = (SELECT MAX(dt.std_dt)
                                      FROM aidt_lms.usd_ach_src2_info dt
                                      WHERE dt.cla_id = #{claId}
                                          AND dt.textbk_id = #{textbookId}
                                          AND dt.stdt_id = #{userId}
                                      )
                    ) s
              GROUP BY s.unit_num

             UNION

              SELECT a.unit_num AS learnedUnitNum
              FROM aidt_lms.usd_ach_src2_info a
                       INNER JOIN aidt_lms.usd_ach_src2_detail b
                                  ON a.id = b.usd_ach_src_id
              WHERE a.usd_ach_id IN ('vocabulary', 'grammar', 'pronunciation')
                AND a.cla_id = #{claId}
                AND a.textbk_id = #{textbookId}
                AND a.stdt_id = #{userId}
                AND a.std_dt = (SELECT MAX(dt.std_dt)
                                FROM aidt_lms.usd_ach_src2_info dt
                                WHERE dt.cla_id = #{claId}
                                  AND dt.textbk_id = #{textbookId}
                                  and dt.stdt_id = #{userId}
                                )
              GROUP BY a.unit_num
         ) combined
        ORDER BY learnedUnitNum
    </select>

    <!-- [학생][영어] 단원별 성취도 조회 -->
    <select id="selectStntDsbdUnitAchievement" resultType="camelHashMap">
        SELECT
            d.unit_num,
            ROUND(AVG(d.usd_ach_scr_percent), 2) AS avg_usd_ach_scr_percent
        FROM (
            SELECT
                b.unit_num,
                IFNULL(b.usd_ach_scr_percent, 0) AS usd_ach_scr_percent
            FROM (
                SELECT id, code, val
                FROM aidt_lcms.meta
                WHERE 1=1
                 AND name IN ('evaluationArea', 'contentsItem', 'evaluationArea3')
                 AND brand_id = '3'
                 AND code != 'sentence' /*문장 사용 안함*/
            ) a
            INNER JOIN (
                /* 학습 이력 + 단원정보 포함 */
                SELECT
                    usd_ach_id,
                    SUM(c.usd_ach_scr) AS usd_ach_scr,
                    SUM(c.rflt_actv_cnt) AS rflt_actv_cnt,
                    CASE
                        WHEN c.usd_ach_id IN ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')
                            THEN ROUND((SUM(c.usd_ach_scr_percent) * 100 / COUNT(c.stdt_id)), 2)
                        WHEN c.usd_ach_id = 'pronunciation'
                            THEN ROUND(AVG(c.usd_ach_scr_percent), 2)
                        ELSE ROUND((AVG(c.usd_ach_scr_percent) * 100), 2)
                    END AS usd_ach_scr_percent,
                    CASE
                        WHEN c.usd_ach_id IN ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting') THEN
                            CASE
                                WHEN ROUND((SUM(c.usd_ach_scr_percent) * 100 / COUNT(c.stdt_id)), 2) >= 80 THEN 1
                                WHEN ROUND((SUM(c.usd_ach_scr_percent) * 100 / COUNT(c.stdt_id)), 2) > 50 THEN 2
                                ELSE 3
                            END
                        WHEN c.usd_ach_id IN ('vocabulary', 'grammar', 'pronunciation') THEN
                            CASE
                                WHEN c.usd_ach_scr_percent >= 80 THEN 1
                                WHEN c.usd_ach_scr_percent > 50 THEN 2
                                ELSE 3
                            END
                        END AS dfclt_lvl_ty,
                        GROUP_CONCAT(REPLACE(IFNULL(c.article_list, ''), ',', '|') SEPARATOR '|') AS article_list,
                        c.std_at,
                        c.unit_num
                FROM (
                    SELECT
                        usd_ach_id,
                        SUM(usd_ach_scr) AS usd_ach_scr,
                        SUM(rflt_actv_cnt) AS rflt_actv_cnt,
                        SUM(usd_ach_scr) / SUM(rflt_actv_cnt) AS usd_ach_scr_percent,
                        GROUP_CONCAT(REPLACE(IFNULL(article_list, ''), ',', '|') SEPARATOR '|') AS article_list,
                        stdt_id,
                        std_at,
                        unit_num
                    FROM aidt_lms.usd_ach_src2_info
                    WHERE usd_ach_id IN ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')
                        AND stdt_id = #{userId}
                        AND cla_id = #{claId}
                        AND textbk_id = #{textbookId}
                        <if test="unitNum > 0">
                            AND unit_num = #{unitNum} /* 단원번호 */
                        </if>
                        AND std_dt = (
                            SELECT MAX(dt.std_dt)
                            FROM aidt_lms.usd_ach_src2_info dt
                            WHERE dt.cla_id = #{claId}
                              AND dt.textbk_id = #{textbookId}
                              AND dt.stdt_id = #{userId}
                        )
                    GROUP BY usd_ach_id, stdt_id, unit_num

                    UNION ALL

                    SELECT
                        b.usd_ach_id,
                        SUM(b.usd_ach_scr) AS usd_ach_scr,
                        SUM(b.rflt_actv_cnt) AS rflt_actv_cnt,
                        AVG(b.usd_ach_scr_percent) AS usd_ach_scr_percent,
                        GROUP_CONCAT(REPLACE(IFNULL(b.article_list, ''), ',', '|') SEPARATOR '|') AS article_list,
                        b.stdt_id,
                        b.std_at,
                        b.unit_num
                    FROM (
                        SELECT
                            a.usd_ach_id,
                            SUM(a.usd_ach_scr) AS usd_ach_scr,
                            SUM(a.rflt_actv_cnt) AS rflt_actv_cnt,
                            AVG(a.usd_ach_scr_percent) AS usd_ach_scr_percent,
                            a.article_list,
                            a.iem_cd,
                            a.iem_id,
                            a.stdt_id,
                            a.std_at,
                            a.unit_num
                        FROM (
                            SELECT
                                a.usd_ach_id,
                                b.iem_id,
                                b.iem_cd,
                                SUM(b.usd_ach_scr) AS usd_ach_scr,
                                SUM(b.rflt_actv_cnt) AS rflt_actv_cnt,
                                SUM(b.usd_ach_scr) / SUM(b.rflt_actv_cnt) AS usd_ach_scr_percent,
                                a.stdt_id,
                                a.std_at,
                                b.article_list,
                                a.unit_num
                            FROM aidt_lms.usd_ach_src2_info a
                            INNER JOIN aidt_lms.usd_ach_src2_detail b
                                ON a.id = b.usd_ach_src_id
                                WHERE a.usd_ach_id IN ('vocabulary', 'grammar', 'pronunciation')
                                AND a.stdt_id = #{userId}
                                AND a.cla_id = #{claId}
                                AND a.textbk_id = #{textbookId}
                                <if test="unitNum > 0">
                                    AND a.unit_num = #{unitNum} /* 단원번호 */
                                </if>
                                AND a.std_dt = (
                                    SELECT MAX(dt.std_dt)
                                    FROM aidt_lms.usd_ach_src2_info dt
                                    WHERE dt.cla_id = #{claId}
                                    AND dt.textbk_id = #{textbookId}
                                    AND dt.stdt_id = #{userId}
                                )
                                GROUP BY a.usd_ach_id, a.stdt_id, b.iem_cd, a.unit_num
                        ) a
                        GROUP BY a.usd_ach_id, a.iem_id, a.unit_num
                    ) b
                    GROUP BY b.usd_ach_id, b.unit_num
                ) c
                GROUP BY c.usd_ach_id, c.unit_num
            ) b ON a.code = b.usd_ach_id
        ) d
        GROUP BY d.unit_num
        ORDER BY d.unit_num
    </select>


    <!-- 학생의 최고/최저 이해도 영역 조회 -->
    <select id="selectStntDsbdChapterUsdStudentDistributionSummary" parameterType="map" resultType="camelHashMap">
        /* stntDsbdMapper.selectStntDsbdChapterUsdStudentDistributionSummary */
        WITH all_areas AS (
            /* 모든 영역 조회 */
            SELECT
                a.id,
                a.val AS unit_nm,
                a.parent_id,
                c.val AS contentAreaNm,
                c.id AS contentAreaId
            FROM aidt_lcms.meta a
                     LEFT JOIN aidt_lcms.meta_meta_map b ON a.id = b.meta_id_a
                     LEFT JOIN aidt_lcms.meta c ON b.meta_name_b = 'contentarea' AND b.meta_id_b = c.id
            WHERE a.parent_id = (
                /* textbookId로 단원 metaId 조회 */
                SELECT b.parent_id
                FROM aidt_lcms.meta a
                         INNER JOIN aidt_lcms.meta b ON a.`code` = b.description AND b.is_active = 1 AND b.name = 'studyMap1'
                         INNER JOIN aidt_lcms.meta c ON c.id = b.parent_id AND c.is_active = 1
                         LEFT JOIN aidt_lcms.meta_extension d ON b.meta_extension_id = d.meta_extension_id
                WHERE 1=1
                  AND a.parent_id = (
                    SELECT curriBook FROM aidt_lcms.textbook WHERE id = #{textbookId}
                )
                  AND a.is_active = 1
                  AND IFNULL(d.val1,'1') = '1' /* Project 노출여부가 1인 것만 노출 */
            LIMIT 1
            )
            AND c.id IS NOT NULL
        ),
        max_std_dt as (
            select max(std_dt) as maxStdDt
            from aidt_lms.std_usd_content_area_hist a
            where 1=1
              and a.textbk_id = #{textbookId}
              and a.cla_id = #{claId}
        ),
        scores_data AS (
            /* 학생별 영역별 점수 데이터 */
            SELECT
                tcmi.stdt_id,
                u.flnm,
                a.contentAreaId,
                a.contentAreaNm,
                IFNULL(round(avg(sucah.usd_scr), 2), 0) AS usd_scr,
                IFNULL(sucah.std_at, 'N') as std_at
            FROM all_areas a
                LEFT JOIN aidt_lms.tc_cla_mb_info tcmi ON tcmi.cla_id = #{claId} and tcmi.actvtn_at = 'Y'
                LEFT JOIN aidt_lms.user u ON u.user_id = tcmi.stdt_id
                LEFT JOIN aidt_lms.std_usd_content_area_hist sucah
                ON sucah.content_area_id = a.contentAreaId
            where 1=1
              AND sucah.std_at = 'Y'
              AND sucah.textbk_id = #{textbookId}
              and sucah.cla_id = #{claId}
              and sucah.stdt_id = #{stntId}
              and sucah.std_dt = (select maxStdDt from max_std_dt)
            GROUP BY a.contentAreaId
        ),
        ranked_scores AS (
            /* 학생별 최고/최저 점수 순위 계산 */
            SELECT
                stdt_id,
                flnm,
                contentAreaId,
                contentAreaNm,
                std_at,
                usd_scr,
                ROW_NUMBER() OVER (PARTITION BY stdt_id ORDER BY usd_scr DESC, contentAreaId ASC) AS highest_rank,
                ROW_NUMBER() OVER (PARTITION BY stdt_id ORDER BY usd_scr ASC, contentAreaId ASC) AS lowest_rank,
                COUNT(*) OVER (PARTITION BY stdt_id) AS total_count
            FROM scores_data
        )
        SELECT
            stdt_id,
            flnm,
            contentAreaId,
            contentAreaNm,
            std_at,
            usd_scr,
            CASE
                WHEN total_count = 1 THEN 'highest' /* 영역 항목이 하나뿐이면 'highest'만 표시 */
                WHEN highest_rank = 1 THEN 'highest'
                WHEN lowest_rank = 1 THEN 'lowest'
                ELSE ''
                END AS score_rank
        FROM ranked_scores
        ORDER BY contentAreaId;
    </select>

    <select id="selectStntDsbdStatusCommunicationDetail" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectStntDsbdStatusCommunicationDetail */
        select  count(*) over () as full_count, row_number() over (order by trgt_std_dt) as row_no
        ,       trgt_std_dt as std_dt
        ,       aidt_lms.f_code_nm('trgt_se_cd', usd_clsf_cd) as trgt_se_nm
        ,       trgt_nm
        ,       rp_othbc_at
        ,       T.usd_tg_id as trgt_id
        from    (
                with stdData as (
                    select
                        a.tab_id
                        , a.cla_id
                        , a.stdt_id
                        , a.textbk_id
                        , a.unit_num
                        , a.meta_id
                        , a.usd_tg_id
                        , a.usd_clsf_cd
                        , a.std_at
                        , substring_index(article, '-', 1) collate utf8mb4_general_ci  AS articleId
                        , substring_index(article, '-', -1) collate utf8mb4_general_ci AS subId
                        , a.usd_ach_scr
                        , a.dfclt_lvl_ty
                        , a.rflt_actv_cnt
                    from usd_ach_src2_info a
                    , json_table(
                    concat('["', replace(article_list, ',', '","'), '"]'),
                    '$[*]' columns (article varchar(255) path '$')
                    ) as jt
                    where 1=1
                    and a.usd_ach_id LIKE CONCAT('%', #{evaluationAreaCd}, '%')
                    and a.cla_id     = #{claId}
                    and a.stdt_id    = #{userId}
                    and a.textbk_id  = #{textbookId}
                    <if test="unitNum != null and unitNum != ''">
                        and a.unit_num = #{unitNum}
                    </if>
                    and a.std_dt = (
                        select max(b.std_dt)
                        from aidt_lms.usd_ach_src2_info b
                        where 1=1
                        and b.usd_ach_id LIKE CONCAT('%', #{evaluationAreaCd}, '%')
                        and b.cla_id     = #{claId}
                        and b.textbk_id  = #{textbookId}
                        and b.stdt_id    = #{userId}
                    <if test="unitNum != null and unitNum != ''">
                        and b.unit_num = #{unitNum}
                    </if>
                    )
                    and a.usd_clsf_cd = '1'
                )
                select
                    r.dta_result_id                      as id
                    , r.eak_st_dt
                    , s.usd_clsf_cd
                    , s.usd_tg_id
                    , s.meta_id
                    , s.std_at
                    , s.textbk_id
                    , s.cla_id
                    , s.stdt_id
                    , s.usd_ach_scr
                    , s.dfclt_lvl_ty
                    , s.rflt_actv_cnt
                    , date_format(r.eak_ed_dt, '%Y-%m-%d') as trgt_std_dt
                    , (
                        select if(s.tab_id > 0,
                                concat('[', (select tab_nm from aidt_lms.tab_info where id = s.tab_id), '] ', tc.`text`), tc.`text`)
                        from aidt_lms.tc_curriculum tc
                        where 1 = 1
                        and tc.textbk_id = s.textbk_id
                        and tc.cla_id = s.cla_id
                        and tc.wrter_id =
                            (select user_id from aidt_lms.tc_cla_mb_info where stdt_id = s.stdt_id and cla_id = s.cla_id and actvtn_at = 'Y')
                        and tc.`key` = s.usd_tg_id
                        )                              as trgt_nm
                , 'Y'                                  as rp_othbc_at

                from aidt_lms.std_dta_result_detail r
                join stdData s on r.dta_iem_id = s.articleid and r.sub_id = s.subid
                where r.dta_result_id =
                    (select id from aidt_lms.std_dta_result_info where textbk_tab_id = s.tab_id and mamoym_id = s.stdt_id)

                union all

                select  b.id, b.std_dt, usd_clsf_cd, usd_tg_id, meta_id, std_at, textbk_id, cla_id, stdt_id, b.usd_ach_scr, b.dfclt_lvl_ty, b.rflt_actv_cnt
                , (
                    case
                        when a.usd_clsf_cd = 2 then (select date_format(task_prg_dt, '%Y-%m-%d') from aidt_lms.task_info where id = a.usd_tg_id)
                        when a.usd_clsf_cd = 3 then (select date_format(evl_prg_dt, '%Y-%m-%d')  from aidt_lms.evl_info where id = a.usd_tg_id)
                        when a.usd_clsf_cd = 4 then (select date_format(reg_dt, '%Y-%m-%d') from aidt_lms.slf_std_info where id = a.usd_tg_id)
                        else ''
                    end
                ) as trgt_std_dt
                , (
                    case
                        when a.usd_clsf_cd = 2 then (select task_nm from aidt_lms.task_info where id = a.usd_tg_id)
                        when a.usd_clsf_cd = 3 then (select evl_nm from aidt_lms.evl_info where id = a.usd_tg_id)
                        when a.usd_clsf_cd = 4 then (select std_nm from aidt_lms.slf_std_info where id = a.usd_tg_id)
                        else ''
                    end
                ) as trgt_nm
                , (
                    case
                        when a.usd_clsf_cd = 2 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.task_info where id = a.usd_tg_id)
                        when a.usd_clsf_cd = 3 then (select ifnull(rpt_othbc_at, 'N') from aidt_lms.evl_info where id = a.usd_tg_id)
                        when a.usd_clsf_cd = 4 then 'Y'
                        else ''
                    end
                ) as rp_othbc_at
                from    aidt_lms.usd_ach_src2_info a
                inner join aidt_lms.usd_ach_src2_detail b
                on a.id = b.usd_ach_src_id
                and b.iem_id = #{iemId}
                where  1=1
                and   a.usd_ach_id LIKE CONCAT('%', #{evaluationAreaCd}, '%')
                and   a.cla_id        = #{claId} /* 클래스 아이디 */
                and   a.stdt_id       = #{userId}
                and   a.textbk_id     = #{textbookId}
                <if test="unitNum != null and unitNum != ''">
                    and a.unit_num = #{unitNum}
                </if>
                and   a.std_dt        = (
                                        select max(c.std_dt)
                                        from aidt_lms.usd_ach_src2_info c
                                        where 1=1
                                        and c.usd_ach_id LIKE CONCAT('%', #{evaluationAreaCd}, '%')
                                        and c.cla_id        = #{claId} /* 클래스 아이디 */
                                        and c.textbk_id     = #{textbookId}
                                        and c.stdt_id       = #{userId}
                                    <if test="unitNum != null and unitNum != ''">
                                        and c.unit_num = #{unitNum}
                                    </if>
                )
                and a.usd_clsf_cd != '1'
        ) T
        group by trgt_id, trgt_nm, trgt_std_dt
        order by row_no asc
    </select>

    <select id="selectStntDsbdStatusCommunicationList" parameterType="pagingParam" resultType="camelHashMap">
        /* StntSelfLrnMapper.selectStntDsbdStatusCommunicationList */
        with usd_ach_src2_data as (
            select  a.usd_ach_id
            ,       b.iem_id
            ,       b.iem_cd
            ,       sum(b.usd_ach_scr) as usd_ach_scr
            ,       sum(b.rflt_actv_cnt) as rflt_actv_cnt
            ,       sum(b.usd_ach_scr) / sum(b.rflt_actv_cnt) as total_usd_src
            ,       a.meta_id
            from aidt_lms.usd_ach_src2_info a
            inner join aidt_lms.usd_ach_src2_detail b on a.id = b.usd_ach_src_id
            where   1=1
            and a.usd_ach_id LIKE CONCAT('%', #{evaluationAreaCd}, '%')
            and   a.cla_id        = #{claId} /* 클래스 아이디 */
            and   a.stdt_id       = #{userId}
            and   a.textbk_id     = #{textbookId}
            and   a.std_dt        = (
                select max(c.std_dt)
                from aidt_lms.usd_ach_src2_info c
                where   1=1
                and c.usd_ach_id LIKE CONCAT('%', #{evaluationAreaCd}, '%')
                and   c.cla_id        = #{claId} /* 클래스 아이디 */
                and   c.textbk_id     = #{textbookId}
                and   c.stdt_id       = #{userId}
            )
            group by b.iem_id
        )

        select  count(*) over () as full_count, row_number() over() as row_Num
        ,       usd_ach_id
        ,       round(T.usd_ach_scr/T.rflt_actv_cnt,2) as total_usd_src_temp
        ,       (select round(avg(total_usd_src), 2) * 100 from usd_ach_src2_data) as total_usd_src       /* 정답률 총 평균 */
        ,       (select (case when ROUND(AVG(total_usd_src), 2) * 100 >= 80 then 1 when ROUND(AVG(total_usd_src), 2) * 100 >= 50 then 2 else 3 end) from usd_ach_src2_data ) as total_lvl_ty
        ,       iem_id, iem_cd, usd_ach_scr, rflt_actv_cnt
        ,       round((usd_ach_scr/rflt_actv_cnt)*100,2) as usd_ach_scr_percent
        ,       (case when round((usd_ach_scr/rflt_actv_cnt)*100,2) >= 80 then 1 when round((usd_ach_scr/rflt_actv_cnt)*100,2) >= 50 then 2 else 3 end) as dfclt_lvl_ty
        ,       meta_id
        from    usd_ach_src2_data T
        order by round((usd_ach_scr/rflt_actv_cnt)*100,2) asc
    </select>

    <!-- [학생][영어] 단원별 성취도 조회 -->
    <select id="selectStntDsbdUnitAchievementList" resultType="camelHashMap">
        SELECT
            d.unit_num
            ,ROUND(AVG(d.usd_ach_scr_percent), 2) AS avg_usd_ach_scr_percent /* 대시보드 */
            ,ROUND(AVG(d.usd_ach_scr_percent), 2) AS unitScrPercent  /* 스스로학습에서 사용 */
            ,(select val from aidt_lcms.meta where id = meta_id) as meta_val  /* 스스로학습에서 사용 */
            ,meta_id  /* 스스로학습에서 사용 */
        FROM (
                SELECT
                    b.unit_num,
                    IFNULL(b.usd_ach_scr_percent, 0) AS usd_ach_scr_percent
                    ,meta_id
                FROM (
                SELECT id, code, val
                    FROM aidt_lcms.meta
                    WHERE 1=1
                    AND name IN ('evaluationArea', 'contentsItem', 'evaluationArea3')
                    AND brand_id = '3'
                    AND code != 'sentence' /*문장 사용 안함*/
                ) a
                INNER JOIN (
                        /* 학습 이력 + 단원정보 포함 */
                        SELECT
                            usd_ach_id,
                            SUM(c.usd_ach_scr) AS usd_ach_scr,
                            SUM(c.rflt_actv_cnt) AS rflt_actv_cnt,
                            CASE
                                WHEN c.usd_ach_id IN ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')
                                THEN ROUND((SUM(c.usd_ach_scr_percent) * 100 / COUNT(c.stdt_id)), 2)
                                WHEN c.usd_ach_id = 'pronunciation'
                                THEN ROUND(AVG(c.usd_ach_scr_percent), 2)
                                ELSE ROUND((AVG(c.usd_ach_scr_percent) * 100), 2)
                            END AS usd_ach_scr_percent,
                            CASE
                                WHEN c.usd_ach_id IN ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting') THEN
                                    CASE
                                        WHEN ROUND((SUM(c.usd_ach_scr_percent) * 100 / COUNT(c.stdt_id)), 2) >= 80 THEN 1
                                        WHEN ROUND((SUM(c.usd_ach_scr_percent) * 100 / COUNT(c.stdt_id)), 2) > 50 THEN 2
                                        ELSE 3
                                    END
                                WHEN c.usd_ach_id IN ('vocabulary', 'grammar', 'pronunciation') THEN
                                    CASE
                                        WHEN c.usd_ach_scr_percent >= 80 THEN 1
                                        WHEN c.usd_ach_scr_percent > 50 THEN 2
                                        ELSE 3
                                    END
                            END AS dfclt_lvl_ty,
                            GROUP_CONCAT(REPLACE(IFNULL(c.article_list, ''), ',', '|') SEPARATOR '|') AS article_list,
                            c.std_at,
                            c.unit_num
                            ,meta_id
                        FROM (
                                SELECT
                                    usd_ach_id,
                                    SUM(usd_ach_scr) AS usd_ach_scr,
                                    SUM(rflt_actv_cnt) AS rflt_actv_cnt,
                                    SUM(usd_ach_scr) / SUM(rflt_actv_cnt) AS usd_ach_scr_percent,
                                    GROUP_CONCAT(REPLACE(IFNULL(article_list, ''), ',', '|') SEPARATOR '|') AS article_list,
                                    stdt_id,
                                    std_at,
                                    unit_num
                                   ,meta_id
                                FROM aidt_lms.usd_ach_src2_info
                                WHERE usd_ach_id IN ('listening', 'reading', 'viewing', 'speaking', 'writing', 'presenting')
                                <if test="userId != null and userId != ''">
                                    AND stdt_id = #{userId}
                                </if>
                                AND cla_id = #{claId}
                                AND textbk_id = #{textbookId}
                                <if test="unitNum > 0">
                                    AND unit_num = #{unitNum} /* 단원번호 */
                                </if>
                                AND std_dt = (
                                        SELECT MAX(dt.std_dt)
                                        FROM aidt_lms.usd_ach_src2_info dt
                                        WHERE dt.cla_id = #{claId}
                                        <if test="userId != null and userId != ''">
                                            AND dt.stdt_id = #{userId}
                                        </if>
                                        AND dt.textbk_id = #{textbookId}
                                )
                                GROUP BY usd_ach_id, stdt_id, unit_num

                                UNION ALL

                                SELECT
                                    b.usd_ach_id,
                                    SUM(b.usd_ach_scr) AS usd_ach_scr,
                                    SUM(b.rflt_actv_cnt) AS rflt_actv_cnt,
                                    AVG(b.usd_ach_scr_percent) AS usd_ach_scr_percent,
                                    GROUP_CONCAT(REPLACE(IFNULL(b.article_list, ''), ',', '|') SEPARATOR '|') AS article_list,
                                    b.stdt_id,
                                    b.std_at,
                                    b.unit_num
                                   ,b.meta_id
                                FROM (
                                    SELECT
                                        a.usd_ach_id,
                                        SUM(a.usd_ach_scr) AS usd_ach_scr,
                                        SUM(a.rflt_actv_cnt) AS rflt_actv_cnt,
                                        AVG(a.usd_ach_scr_percent) AS usd_ach_scr_percent,
                                        a.article_list,
                                        a.iem_cd,
                                        a.iem_id,
                                        a.stdt_id,
                                        a.std_at,
                                        a.unit_num
                                       ,a.meta_id
                                    FROM (
                                            SELECT
                                                a.usd_ach_id,
                                                b.iem_id,
                                                b.iem_cd,
                                                SUM(b.usd_ach_scr) AS usd_ach_scr,
                                                SUM(b.rflt_actv_cnt) AS rflt_actv_cnt,
                                                SUM(b.usd_ach_scr) / SUM(b.rflt_actv_cnt) AS usd_ach_scr_percent,
                                                a.stdt_id,
                                                a.std_at,
                                                b.article_list,
                                                a.unit_num
                                                ,a.meta_id
                                            FROM aidt_lms.usd_ach_src2_info a
                                            INNER JOIN aidt_lms.usd_ach_src2_detail b
                                                ON a.id = b.usd_ach_src_id
                                            WHERE a.usd_ach_id IN ('vocabulary', 'grammar', 'pronunciation')
                                            AND a.cla_id = #{claId}
                                            <if test="userId != null and userId != ''">
                                                AND a.stdt_id = #{userId}
                                            </if>
                                                AND a.textbk_id = #{textbookId}
                                            <if test="unitNum > 0">
                                                AND a.unit_num = #{unitNum} /* 단원번호 */
                                            </if>
                                            AND a.std_dt = (
                                                SELECT MAX(dt.std_dt)
                                                FROM aidt_lms.usd_ach_src2_info dt
                                                WHERE dt.cla_id = #{claId}
                                                <if test="userId != null and userId != ''">
                                                    AND dt.stdt_id = #{userId}
                                                </if>
                                                AND dt.textbk_id = #{textbookId}
                                            )
                                            GROUP BY a.usd_ach_id, a.stdt_id, b.iem_cd, a.unit_num
                                    ) a
                                    GROUP BY a.usd_ach_id, a.iem_id, a.unit_num
                                ) b
                                GROUP BY b.usd_ach_id, b.unit_num
                        ) c
                        GROUP BY c.usd_ach_id, c.unit_num
                ) b ON a.code = b.usd_ach_id
        ) d
        GROUP BY d.unit_num
        ORDER BY d.unit_num
    </select>
</mapper>